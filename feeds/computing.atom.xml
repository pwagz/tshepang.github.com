<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tshepang logs - computing</title><link href="http://tshepang.net/" rel="alternate"></link><link href="http://tshepang.net/feeds/computing.atom.xml" rel="self"></link><id>http://tshepang.net/</id><updated>2018-02-02T20:33:34+02:00</updated><entry><title>I am a very jealous person</title><link href="http://tshepang.net/i-am-a-very-jealous-person" rel="alternate"></link><published>2018-02-02T20:33:34+02:00</published><updated>2018-02-02T20:33:34+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2018-02-02:/i-am-a-very-jealous-person</id><summary type="html">&lt;p&gt;Following is some of the cases where competing software won this or
that battle, and I am jealous since I want everyone to use what I
like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kubernetes/kubernetes"&gt;Kurbenetes&lt;/a&gt; is written in Go, and not Rust.
It appears to be the most popular container orchestration system,
and is among the hottest …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Following is some of the cases where competing software won this or
that battle, and I am jealous since I want everyone to use what I
like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kubernetes/kubernetes"&gt;Kurbenetes&lt;/a&gt; is written in Go, and not Rust.
It appears to be the most popular container orchestration system,
and is among the hottest of new software projects,
while having lots of momentum.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/grafana/grafana"&gt;Grafana&lt;/a&gt; is also written in Go, and not Rust.
It produces the most pretty graphs I've seen yet,
and is very featureful, and boasts hundreds of contributers.&lt;/li&gt;
&lt;li&gt;Markdown is a far more popular light-weight markup language than
the far more advanced &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText&lt;/a&gt;.
It's particularly sad when it's not used where it's needed
most... documenting large projects (&lt;a class="reference external" href="http://doc.rust-lang.org"&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category><category term="non-Rust"></category></entry><entry><title>Rust week of 2018-01-25</title><link href="http://tshepang.net/rust-week-of-2018-01-25" rel="alternate"></link><published>2018-02-01T00:00:00+02:00</published><updated>2018-02-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2018-02-01:/rust-week-of-2018-01-25</id><summary type="html">&lt;p&gt;Continuing on &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;a work project&lt;/a&gt; I mentioned months ago,
I had &lt;a class="reference external" href="https://github.com/libpnet/libpnet/issues/309"&gt;a failure related to cross-building pnet&lt;/a&gt;,
a library I was using to get network interfaces.
As a side note, &lt;a class="reference external" href="https://github.com/japaric/cross/issues/39"&gt;the fault was in the build process&lt;/a&gt;,
not the crate itself.
I tried a few others as replacement:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;getaddrs can't …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Continuing on &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;a work project&lt;/a&gt; I mentioned months ago,
I had &lt;a class="reference external" href="https://github.com/libpnet/libpnet/issues/309"&gt;a failure related to cross-building pnet&lt;/a&gt;,
a library I was using to get network interfaces.
As a side note, &lt;a class="reference external" href="https://github.com/japaric/cross/issues/39"&gt;the fault was in the build process&lt;/a&gt;,
not the crate itself.
I tried a few others as replacement:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;getaddrs can't find ip address, and it's abandoned according to the author,
in favor of &lt;a class="reference external" href="https://crates.io/crates/nix"&gt;nix crate&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;interfaces also fails to cross build, and I forgot that I actually
tried it before, and was the reason I moved to pnet in the first place&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;systemstat works, and I already use it for a few things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;load average&lt;/li&gt;
&lt;li&gt;memory usage&lt;/li&gt;
&lt;li&gt;uptime&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, that's one less dependency, though I do wish this functionality
was available from a more pleasant API... systemstat is ugly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a general note,
I wish more people took the effort to state in the
README if their software is abandoned,
perhaps with mentions of alternatives.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2018-01-18</title><link href="http://tshepang.net/rust-week-of-2018-01-18" rel="alternate"></link><published>2018-01-25T00:00:00+02:00</published><updated>2018-01-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2018-01-25:/rust-week-of-2018-01-18</id><summary type="html">&lt;p&gt;I did very little Rust on week of 2018-01-11,
but &lt;a class="reference external" href="https://github.com/tshepang/mrh/commit/0bb76224978fca2324ae7b673472b68033db5a78"&gt;added --ignore-uncommitted-repos to mrh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This week was more active...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used the fantastic dialoguer for the first time...
so pleasant, resulting in much cleaner code for a private project.&lt;/li&gt;
&lt;li&gt;For &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;the work project I mentioned some months ago&lt;/a&gt;,
I added …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I did very little Rust on week of 2018-01-11,
but &lt;a class="reference external" href="https://github.com/tshepang/mrh/commit/0bb76224978fca2324ae7b673472b68033db5a78"&gt;added --ignore-uncommitted-repos to mrh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This week was more active...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used the fantastic dialoguer for the first time...
so pleasant, resulting in much cleaner code for a private project.&lt;/li&gt;
&lt;li&gt;For &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;the work project I mentioned some months ago&lt;/a&gt;,
I added a feature to check if certain ports of a remote machine are reachable.
The bigger part though was it 'forced' me to refactor the code,
since the various bits needed checking at different intervals...
in my case, as an example, I check port reachability once in 60 seconds,
but would check load average once in 6.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2018-01-04</title><link href="http://tshepang.net/rust-week-of-2018-01-04" rel="alternate"></link><published>2018-01-11T00:00:00+02:00</published><updated>2018-01-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2018-01-11:/rust-week-of-2018-01-04</id><summary type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;, I added the ability to check if there are
unpulled commits as well as if there are tags that aren't pushed upstream.
The latter is what motivated this work,
a feature useful for work, to avoid forgetting pushing tags.
This meant doing the dreaded work …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;, I added the ability to check if there are
unpulled commits as well as if there are tags that aren't pushed upstream.
The latter is what motivated this work,
a feature useful for work, to avoid forgetting pushing tags.
This meant doing the dreaded work of accessing the remote repo,
which is complicated by potentially having to authenticate,
in the case of private repos for example.
It was painful (we need an easier git library),
but it works (but so damn slow).
The result is version 0.9.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-12-28</title><link href="http://tshepang.net/rust-week-of-2017-12-28" rel="alternate"></link><published>2018-01-04T00:00:00+02:00</published><updated>2018-01-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2018-01-04:/rust-week-of-2017-12-28</id><summary type="html">&lt;p&gt;Very little Rust last week, but this week I played some with &lt;a class="reference external" href="https://github.com/ticki/termion"&gt;termion&lt;/a&gt;
for some user interface on a private project.
I borrowed some of the code from &lt;a class="reference external" href="http://tshepang.net/rust-weeks-of-2017-09-14-to-2017-09-28"&gt;a project I mentioned previously&lt;/a&gt;,
one where I used the library for the first time.
As was the case with that project …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Very little Rust last week, but this week I played some with &lt;a class="reference external" href="https://github.com/ticki/termion"&gt;termion&lt;/a&gt;
for some user interface on a private project.
I borrowed some of the code from &lt;a class="reference external" href="http://tshepang.net/rust-weeks-of-2017-09-14-to-2017-09-28"&gt;a project I mentioned previously&lt;/a&gt;,
one where I used the library for the first time.
As was the case with that project,
I found handling of keyboard input tedious and non-intuitive,
and imagine there must be an easier way.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;We had &lt;a class="reference external" href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/246240196"&gt;another monthly meetup&lt;/a&gt; (we've had several of them so far),
which was the usual random informal discussion of the
exciting ecosystem of the great language that is Rust.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-12-14</title><link href="http://tshepang.net/rust-week-of-2017-12-14" rel="alternate"></link><published>2017-12-21T00:00:00+02:00</published><updated>2017-12-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-12-21:/rust-week-of-2017-12-14</id><summary type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A friend did me a nice favor of &lt;a class="reference external" href="https://github.com/tshepang/mrh/pull/1"&gt;creating an Iterator for Crawler&lt;/a&gt;,
a task I failed at after 2 attempts... I don't yet truly get Rust lifetimes&lt;/li&gt;
&lt;li&gt;Based on that work, I turned &lt;a class="reference external" href="https://docs.rs/mrh/0.8.1/mrh/struct.Crawler.html"&gt;Crawler&lt;/a&gt; itself into an Iterator&lt;/li&gt;
&lt;li&gt;I added YAML and JSON output …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A friend did me a nice favor of &lt;a class="reference external" href="https://github.com/tshepang/mrh/pull/1"&gt;creating an Iterator for Crawler&lt;/a&gt;,
a task I failed at after 2 attempts... I don't yet truly get Rust lifetimes&lt;/li&gt;
&lt;li&gt;Based on that work, I turned &lt;a class="reference external" href="https://docs.rs/mrh/0.8.1/mrh/struct.Crawler.html"&gt;Crawler&lt;/a&gt; itself into an Iterator&lt;/li&gt;
&lt;li&gt;I added YAML and JSON output; they are behind a compile flag, since
they bring with them some slow-compiling dependencies, and I don't
expect the features would be a common need&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-12-07</title><link href="http://tshepang.net/rust-week-of-2017-12-07" rel="alternate"></link><published>2017-12-14T00:00:00+02:00</published><updated>2017-12-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-12-14:/rust-week-of-2017-12-07</id><summary type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use ordermap for repeatable output&lt;/li&gt;
&lt;li&gt;Turn into a library (backed by the command-line tool), which is a
first for me (libs are more hard than apps, and helpfully force one
to do a better design).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I experienced some failures too:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I looked to using termcolor …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use ordermap for repeatable output&lt;/li&gt;
&lt;li&gt;Turn into a library (backed by the command-line tool), which is a
first for me (libs are more hard than apps, and helpfully force one
to do a better design).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I experienced some failures too:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I looked to using termcolor (used by ripgrep and cargo, and &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/issues/836"&gt;may
replace termcolor in clap&lt;/a&gt;), but found it too hard to use...
API not as pleasant&lt;/li&gt;
&lt;li&gt;I also failed to turn output into an iterator (instead of &lt;cite&gt;Vec&lt;/cite&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust 2.0 wishlist</title><link href="http://tshepang.net/rust-20-wishlist" rel="alternate"></link><published>2017-12-09T11:01:38+02:00</published><updated>2017-12-09T11:01:38+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-12-09:/rust-20-wishlist</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove the &lt;tt class="docutils literal"&gt;try!&lt;/tt&gt; macro...
it has a better replacement in the form of the question_mark (&lt;tt class="docutils literal"&gt;?&lt;/tt&gt;) operator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::sync::mpsc&lt;/span&gt;&lt;/tt&gt; from stdlib,
making it available externally...
it does not feel general enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Assigning values to struct bindings should use the equal sign,
not the colon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// now&lt;/span&gt;
&lt;span class="n"&gt;Shoe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;: &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;style …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove the &lt;tt class="docutils literal"&gt;try!&lt;/tt&gt; macro...
it has a better replacement in the form of the question_mark (&lt;tt class="docutils literal"&gt;?&lt;/tt&gt;) operator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::sync::mpsc&lt;/span&gt;&lt;/tt&gt; from stdlib,
making it available externally...
it does not feel general enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Assigning values to struct bindings should use the equal sign,
not the colon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// now&lt;/span&gt;
&lt;span class="n"&gt;Shoe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;: &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;sneaker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;// dream&lt;/span&gt;
&lt;span class="n"&gt;Shoe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sneaker&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would be consistent with the rest of the language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;All collections types removed, except these basic ones:
Vec, HashMap, and HashSet.
Also, they would also be available from top-level
(i.e. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::{Vec,&lt;/span&gt; HashMap, HashSet}&lt;/tt&gt;),
resulting in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::collections&lt;/span&gt;&lt;/tt&gt; removal.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-11-30</title><link href="http://tshepang.net/rust-week-of-2017-11-30" rel="alternate"></link><published>2017-12-09T00:00:00+02:00</published><updated>2017-12-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-12-09:/rust-week-of-2017-11-30</id><summary type="html">&lt;p&gt;Like last week, I did some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Replace colored with ansi_term (I prefer the API, and the latter was
already a dependency of something else)&lt;/li&gt;
&lt;li&gt;Remove &lt;a class="reference external" href="https://docs.rs/walkdir/2.0.1/walkdir/struct.WalkDir.html#method.follow_links"&gt;follow_symlinks&lt;/a&gt; feature (caused weird behavior)&lt;/li&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix"&gt;Path.strip_prefix&lt;/a&gt; instead of a custom solution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For work (lucky me), I did a small …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Like last week, I did some more work on &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Replace colored with ansi_term (I prefer the API, and the latter was
already a dependency of something else)&lt;/li&gt;
&lt;li&gt;Remove &lt;a class="reference external" href="https://docs.rs/walkdir/2.0.1/walkdir/struct.WalkDir.html#method.follow_links"&gt;follow_symlinks&lt;/a&gt; feature (caused weird behavior)&lt;/li&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix"&gt;Path.strip_prefix&lt;/a&gt; instead of a custom solution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For work (lucky me), I did a small tool that converts data from a CSV
file containing network ports and their descriptions to a format that
&lt;a class="reference external" href="https://www.elastic.co/products/logstash"&gt;logstash&lt;/a&gt; can use:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used &lt;a class="reference external" href="https://crates.io/crates/ordermap"&gt;csv&lt;/a&gt; crate first time, an experience made pleasant by serde&lt;/li&gt;
&lt;li&gt;I also used &lt;a class="reference external" href="https://crates.io/crates/csv"&gt;ordermap&lt;/a&gt; first time, chosen because I care for output to match
order in csv source file&lt;/li&gt;
&lt;li&gt;Another first was &lt;a class="reference external" href="https://crates.io/crates/tera"&gt;tera&lt;/a&gt;, and its immaturity surprised me&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-11-23</title><link href="http://tshepang.net/rust-week-of-2017-11-23" rel="alternate"></link><published>2017-11-29T00:00:00+02:00</published><updated>2017-11-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-11-29:/rust-week-of-2017-11-23</id><summary type="html">&lt;p&gt;There wasn't much last week, other than continuing with the functional
testing work that queries Elasticsearch.
This week, however, saw me extending &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;
(Pending is a repo state that requires action):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Allow ignoring Untracked files in output (feature request from a friend)&lt;/li&gt;
&lt;li&gt;Distinguish Untracked state from other Pendings&lt;/li&gt;
&lt;li&gt;Add 3 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;There wasn't much last week, other than continuing with the functional
testing work that queries Elasticsearch.
This week, however, saw me extending &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt;
(Pending is a repo state that requires action):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Allow ignoring Untracked files in output (feature request from a friend)&lt;/li&gt;
&lt;li&gt;Distinguish Untracked state from other Pendings&lt;/li&gt;
&lt;li&gt;Add 3 more Pendings: added, removed, renamed&lt;/li&gt;
&lt;li&gt;Do not quit after encountering malformed repos&lt;/li&gt;
&lt;li&gt;Add color to output (via colored)&lt;/li&gt;
&lt;li&gt;Add option to display absolute paths&lt;/li&gt;
&lt;li&gt;Check if HEAD is tagged (with &lt;a class="reference external" href="https://stackoverflow.com/q/47500612/321731"&gt;some help from Stack Overflow&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am glad.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-11-09</title><link href="http://tshepang.net/rust-week-of-2017-11-09" rel="alternate"></link><published>2017-11-15T00:00:00+02:00</published><updated>2017-11-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-11-15:/rust-week-of-2017-11-09</id><summary type="html">&lt;p&gt;I've done nothing regarding the previous two weeks,
but this week had a look at Elasticsearch crates,
as part of an effort to do some functional testing of the system at work.
What I found was &lt;a class="reference external" href="https://docs.rs/elastic/*/elastic"&gt;a forest of APIs&lt;/a&gt; without a good guide,
but eventually ended up with something …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've done nothing regarding the previous two weeks,
but this week had a look at Elasticsearch crates,
as part of an effort to do some functional testing of the system at work.
What I found was &lt;a class="reference external" href="https://docs.rs/elastic/*/elastic"&gt;a forest of APIs&lt;/a&gt; without a good guide,
but eventually ended up with something that queries the DB and checks
if certain injected data appears.
I wish there was an easy way of doing queries without having to resort
to using the &lt;cite&gt;json!&lt;/cite&gt; macro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sort&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@timestamp&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;order&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;asc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;query&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;must&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;term&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;marker&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;test0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@timestamp&amp;quot;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gte&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;now-100s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lte&amp;quot;&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;now&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/elastic-rs/elastic/tree/master/src/queries"&gt;crate that allows such typed queries&lt;/a&gt; happens to be incomplete and
undocumented, so will ignore it for now.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-10-19</title><link href="http://tshepang.net/rust-week-of-2017-10-19" rel="alternate"></link><published>2017-10-22T00:00:00+02:00</published><updated>2017-10-22T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-10-22:/rust-week-of-2017-10-19</id><summary type="html">&lt;p&gt;I released &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt; v0.2.0,
which takes into account that when latest upstream git reference does
not match one that's checked out,
it could be that upstream is ahead.
The assumption previously was that local is ahead of upstream,
implying that a push is needed.
The API that helped …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I released &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;mrh&lt;/a&gt; v0.2.0,
which takes into account that when latest upstream git reference does
not match one that's checked out,
it could be that upstream is ahead.
The assumption previously was that local is ahead of upstream,
implying that a push is needed.
The API that helped with this change is &lt;a class="reference external" href="https://docs.rs/git2/0.6.8/git2/struct.Repository.html#method.graph_ahead_behind"&gt;Repository.grapth_ahead_behind&lt;/a&gt;,
a lovely and unexpected gift (&lt;a class="reference external" href="https://github.com/tshepang/mrh/commit/fc82fe9890cf3a8033fa78295308d888628caa39"&gt;commit&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I used &lt;a class="reference external" href="https://crates.io/crates/cargo-outdated"&gt;cargo-outdated&lt;/a&gt; for the first time... I like.&lt;/p&gt;
&lt;p&gt;I also released &lt;a class="reference external" href="https://github.com/panoptix-za/tag-helper"&gt;tag-helper&lt;/a&gt;,
whose development was sponsored by &lt;a class="reference external" href="https://www.panoptix.co.za/"&gt;Panoptix&lt;/a&gt;,
the company I work for.
The tool helps reduce the tedium of tagging git repos,
of which we have a bunch.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-10-12</title><link href="http://tshepang.net/rust-week-of-2017-10-12" rel="alternate"></link><published>2017-10-18T00:00:00+02:00</published><updated>2017-10-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-10-18:/rust-week-of-2017-10-12</id><summary type="html">&lt;p&gt;I enjoyed &lt;a class="reference external" href="https://lambda.xyz/blog/rusts-fatal-flaw"&gt;a humorous joke post&lt;/a&gt; poking fun at inconsistent Rust
naming of some stdlib types.
I also expanded &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;the work project&lt;/a&gt; I been working on the past few
weeks, this time doing some file I/O among other things,
which is always finicky business.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I enjoyed &lt;a class="reference external" href="https://lambda.xyz/blog/rusts-fatal-flaw"&gt;a humorous joke post&lt;/a&gt; poking fun at inconsistent Rust
naming of some stdlib types.
I also expanded &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-10-05"&gt;the work project&lt;/a&gt; I been working on the past few
weeks, this time doing some file I/O among other things,
which is always finicky business.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-10-05</title><link href="http://tshepang.net/rust-week-of-2017-10-05" rel="alternate"></link><published>2017-10-13T00:00:00+02:00</published><updated>2017-10-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-10-13:/rust-week-of-2017-10-05</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/rust-weeks-of-2017-09-14-to-2017-09-28"&gt;Continuing with the work project&lt;/a&gt;,
I replaced the &lt;a class="reference external" href="https://github.com/andrew-d/interfaces-rs"&gt;interfaces&lt;/a&gt; library with &lt;a class="reference external" href="https://github.com/libpnet/libpnet"&gt;pnet&lt;/a&gt;,
a weird concoction of various network functionality in one ugly mess,
but I did it because the order of the network interfaces it presents
does not randomly change (the project is UI that presents various bits
of info …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/rust-weeks-of-2017-09-14-to-2017-09-28"&gt;Continuing with the work project&lt;/a&gt;,
I replaced the &lt;a class="reference external" href="https://github.com/andrew-d/interfaces-rs"&gt;interfaces&lt;/a&gt; library with &lt;a class="reference external" href="https://github.com/libpnet/libpnet"&gt;pnet&lt;/a&gt;,
a weird concoction of various network functionality in one ugly mess,
but I did it because the order of the network interfaces it presents
does not randomly change (the project is UI that presents various bits
of info about the boxes that we sell, some of which is network-related),
unlike is the case with &lt;em&gt;interfaces&lt;/em&gt;.
It is also comforting that the library has more users
(&lt;a class="reference external" href="https://crates.io/crates/interfaces/reverse_dependencies"&gt;one&lt;/a&gt; vs. &lt;a class="reference external" href="https://crates.io/crates/pnet/reverse_dependencies"&gt;eight&lt;/a&gt; at time of writing).&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust weeks of 2017-09-14 to 2017-09-28</title><link href="http://tshepang.net/rust-weeks-of-2017-09-14-to-2017-09-28" rel="alternate"></link><published>2017-10-04T00:00:00+02:00</published><updated>2017-10-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-10-04:/rust-weeks-of-2017-09-14-to-2017-09-28</id><summary type="html">&lt;p&gt;Over the past 3 weeks,
I continued work on &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-09-07"&gt;a project I mentioned previously&lt;/a&gt;,
a CLI UI for work.
In addition to dependencies mentioned there,
I used &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini"&gt;rust-ini&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml"&gt;serde_yaml&lt;/a&gt;,
I mostly enjoyed the experience,
though not too happy with the code, which feels messy...
I use &lt;a class="reference external" href="https://docs.rs/termion/1.5.1/termion/struct.AsyncReader.html"&gt;termion::AsynReader&lt;/a&gt;, which …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the past 3 weeks,
I continued work on &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-09-07"&gt;a project I mentioned previously&lt;/a&gt;,
a CLI UI for work.
In addition to dependencies mentioned there,
I used &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini"&gt;rust-ini&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml"&gt;serde_yaml&lt;/a&gt;,
I mostly enjoyed the experience,
though not too happy with the code, which feels messy...
I use &lt;a class="reference external" href="https://docs.rs/termion/1.5.1/termion/struct.AsyncReader.html"&gt;termion::AsynReader&lt;/a&gt;, which means I have to loop all over
the place while waiting for stdin (keyboard input).
I imagine there is a better way.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-09-07</title><link href="http://tshepang.net/rust-week-of-2017-09-07" rel="alternate"></link><published>2017-09-14T00:00:00+02:00</published><updated>2017-09-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-09-14:/rust-week-of-2017-09-07</id><summary type="html">&lt;p&gt;I had the fortune of building a Rust project at work,
and following are the libraries I used:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used &lt;a class="reference external" href="https://github.com/ticki/termion"&gt;termion&lt;/a&gt; just to clear the screen.
API looks kool, and I plan to use it for other stuff,
like text (and password) input.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/myfreeweb/systemstat"&gt;systemstat&lt;/a&gt; has an ugly API,
and relies …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I had the fortune of building a Rust project at work,
and following are the libraries I used:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used &lt;a class="reference external" href="https://github.com/ticki/termion"&gt;termion&lt;/a&gt; just to clear the screen.
API looks kool, and I plan to use it for other stuff,
like text (and password) input.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/myfreeweb/systemstat"&gt;systemstat&lt;/a&gt; has an ugly API,
and relies on &lt;a class="reference external" href="https://github.com/flang-project/bytesize"&gt;bytesize&lt;/a&gt; for system memory data,
whose API is not obvious,
and has &lt;a class="reference external" href="https://github.com/flang-project/bytesize/issues/8"&gt;a rather ugly display bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/andrew-d/interfaces-rs"&gt;interfaces&lt;/a&gt; has an okay API,
but the &lt;a class="reference external" href="https://docs.rs/interfaces/0.0.2/interfaces/struct.Interface.html#method.get_all"&gt;get_all&lt;/a&gt; method simply does not belong to a type named Interface.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-08-31</title><link href="http://tshepang.net/rust-week-of-2017-08-31" rel="alternate"></link><published>2017-09-08T00:00:00+02:00</published><updated>2017-09-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-09-08:/rust-week-of-2017-08-31</id><summary type="html">&lt;p&gt;Week of 2017-08-24 did not really see any Rust activity.
This week, however, I worked on &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh&lt;/a&gt;,
a tool I created in order to look at status of multiple git repos,
to avoid the tedium of navigating to each to check.
The feature I added is checking if committed changes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Week of 2017-08-24 did not really see any Rust activity.
This week, however, I worked on &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh&lt;/a&gt;,
a tool I created in order to look at status of multiple git repos,
to avoid the tedium of navigating to each to check.
The feature I added is checking if committed changes were pushed upstream.
On the way there, I encountered these git2 APIS:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.rs/git2/0.6.8/git2/struct.Branch.html#method.wrap"&gt;Branch::wrap&lt;/a&gt; (submitted &lt;a class="reference external" href="https://github.com/alexcrichton/git2-rs/pull/246"&gt;improvement to make doc less misleading&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.rs/git2/0.6.8/git2/struct.Branch.html#method.upstream"&gt;Branch::upstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.rs/git2/0.6.8/git2/struct.Repository.html#method.head"&gt;Repositoty::head&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I ended up &lt;a class="reference external" href="https://crates.io/crates/mrh"&gt;publishing the tool&lt;/a&gt; too,
which is the second time &lt;a class="reference external" href="https://crates.io/crates/weeks-from-now"&gt;I've done so&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>major projects using Mercurial</title><link href="http://tshepang.net/major-projects-using-mercurial" rel="alternate"></link><published>2017-08-30T22:14:39+02:00</published><updated>2017-08-30T22:14:39+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-08-30:/major-projects-using-mercurial</id><summary type="html">&lt;p&gt;Mercurial is the only version control system that I actually like, and
I do celebrate each time I see a project use it. So, here I list the
most notable projects I am aware of that do, which also gives me hope
that it isn't being suffocated too much by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mercurial is the only version control system that I actually like, and
I do celebrate each time I see a project use it. So, here I list the
most notable projects I am aware of that do, which also gives me hope
that it isn't being suffocated too much by Git:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.mozilla.org/mozilla-central"&gt;Firefox&lt;/a&gt;, world number 3 desktop web browser (number of users)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.openjdk.java.net"&gt;OpenJDK&lt;/a&gt;, the top open source implementation of the Java platform&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.netbeans.org/WorkingWithNetBeansSources#Mercurial_access"&gt;Netbeans&lt;/a&gt;, one of the most popular IDEs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And here is one which is not FLOSS (i.e. proprietary):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://code.facebook.com/posts/218678814984400/scaling-mercurial-at-facebook"&gt;Facebook&lt;/a&gt;, world number 2 website in terms of visitor numbers&lt;/li&gt;
&lt;/ul&gt;
</content><category term="VCS"></category><category term="non-FLOSS"></category><category term="list"></category></entry><entry><title>Rust week of 2017-08-17</title><link href="http://tshepang.net/rust-week-of-2017-08-17" rel="alternate"></link><published>2017-08-18T00:00:00+02:00</published><updated>2017-08-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-08-18:/rust-week-of-2017-08-17</id><summary type="html">&lt;p&gt;I added a feature to &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh (multiple git repo helper)&lt;/a&gt; that allows
one to display just those repos that have uncommitted changes...
&lt;tt class="docutils literal"&gt;mrh &lt;span class="pre"&gt;--changed&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I added a feature to &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh (multiple git repo helper)&lt;/a&gt; that allows
one to display just those repos that have uncommitted changes...
&lt;tt class="docutils literal"&gt;mrh &lt;span class="pre"&gt;--changed&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-08-10</title><link href="http://tshepang.net/rust-week-of-2017-08-10" rel="alternate"></link><published>2017-08-16T00:00:00+02:00</published><updated>2017-08-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-08-16:/rust-week-of-2017-08-10</id><summary type="html">&lt;p&gt;I created a tool I named &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh (multiple git repo helper)&lt;/a&gt;,
which does a recursive search for git repos and checks if there
are changes not committed.
It's very useful for work, for we have a bunch of tiny repos,
and it was such a pain to navigate to each …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I created a tool I named &lt;a class="reference external" href="https://github.com/tshepang/mrh"&gt;mrh (multiple git repo helper)&lt;/a&gt;,
which does a recursive search for git repos and checks if there
are changes not committed.
It's very useful for work, for we have a bunch of tiny repos,
and it was such a pain to navigate to each and check status.
I am so glad.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-08-03</title><link href="http://tshepang.net/rust-week-of-2017-08-03" rel="alternate"></link><published>2017-08-08T00:00:00+02:00</published><updated>2017-08-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-08-08:/rust-week-of-2017-08-03</id><summary type="html">&lt;p&gt;My first upload to &lt;a class="reference external" href="https://crates.io"&gt;the official Rust registry&lt;/a&gt;,
&lt;a class="reference external" href="https://crates.io/crates/weeks-from-now"&gt;weeks-from-now&lt;/a&gt;. Finally!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;My first upload to &lt;a class="reference external" href="https://crates.io"&gt;the official Rust registry&lt;/a&gt;,
&lt;a class="reference external" href="https://crates.io/crates/weeks-from-now"&gt;weeks-from-now&lt;/a&gt;. Finally!&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-07-27 (special edition)</title><link href="http://tshepang.net/rust-week-of-2017-07-27-special-edition" rel="alternate"></link><published>2017-08-04T00:00:00+02:00</published><updated>2017-08-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-08-04:/rust-week-of-2017-07-27-special-edition</id><summary type="html">&lt;p&gt;I been using this series to help push me into constant Rust activity,
ensuring I do not skip a week sitting idle.
It worked in that, indeed, no 7 days passed without a single
contribution to the ecosystem, no matter how tiny,
and this has been going on for over …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I been using this series to help push me into constant Rust activity,
ensuring I do not skip a week sitting idle.
It worked in that, indeed, no 7 days passed without a single
contribution to the ecosystem, no matter how tiny,
and this has been going on for over a 100 weeks
(i.e. &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-05-15"&gt;since 2015-05-15&lt;/a&gt;, also Rust 1.0 release date).&lt;/p&gt;
&lt;p&gt;The problem is I felt silly recording the tiny parts,
stuff like a typo fixes, just to keep this going.
Well, it's time to stop that.
I intend to avoid recording such,
and if it means no blog post for that week, so be it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was inspired by having a laptop failure,
with a draft that wasn't backed up anywhere.
That draft only consisted of a list of those tiny contributions,
and it felt extra silly trying to recreate it for publication.&lt;/em&gt;&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-07-20</title><link href="http://tshepang.net/rust-week-of-2017-07-20" rel="alternate"></link><published>2017-07-24T00:00:00+02:00</published><updated>2017-07-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-07-24:/rust-week-of-2017-07-20</id><summary type="html">&lt;p&gt;I am surprised by the ease of changing default Rust toolchain:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# switch to nightly
rustup default nightly
# switch to stable
rustup default stable
&lt;/pre&gt;
&lt;p&gt;This is more easy than remembering how to tell cargo to use to use a
non-default toolchain, though that approach is not too bad either:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# build with …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;I am surprised by the ease of changing default Rust toolchain:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# switch to nightly
rustup default nightly
# switch to stable
rustup default stable
&lt;/pre&gt;
&lt;p&gt;This is more easy than remembering how to tell cargo to use to use a
non-default toolchain, though that approach is not too bad either:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# build with nightly
cargo +nightly build
&lt;/pre&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/book/issues/828"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/book/issues/834"&gt;complaints&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/brson/rust-cookbook/pull/253"&gt;as&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/43409"&gt;well&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/book/pull/827"&gt;as&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/43416"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/BurntSushi/walkdir/pull/75"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-07-13</title><link href="http://tshepang.net/rust-week-of-2017-07-13" rel="alternate"></link><published>2017-07-19T00:00:00+02:00</published><updated>2017-07-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-07-19:/rust-week-of-2017-07-13</id><summary type="html">&lt;p&gt;I am tempted, &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-01-06"&gt;once again&lt;/a&gt;, to try out &lt;a class="reference external" href="https://github.com/Wilfred/remacs"&gt;Remacs&lt;/a&gt;,
a Rust port of GNU Emacs.
It's very encouraging that it tries to be compatible,
for the drop-in-replacement effect.&lt;/p&gt;
&lt;p&gt;I am glad &lt;a class="reference external" href="https://github.com/TeXitoi/structopt/pull/17"&gt;the change to add subcommands to structopt&lt;/a&gt;
has been merged. It was the one important missing piece to &lt;a class="reference external" href="https://github.com/TeXitoi/structopt"&gt;this …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am tempted, &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-01-06"&gt;once again&lt;/a&gt;, to try out &lt;a class="reference external" href="https://github.com/Wilfred/remacs"&gt;Remacs&lt;/a&gt;,
a Rust port of GNU Emacs.
It's very encouraging that it tries to be compatible,
for the drop-in-replacement effect.&lt;/p&gt;
&lt;p&gt;I am glad &lt;a class="reference external" href="https://github.com/TeXitoi/structopt/pull/17"&gt;the change to add subcommands to structopt&lt;/a&gt;
has been merged. It was the one important missing piece to &lt;a class="reference external" href="https://github.com/TeXitoi/structopt"&gt;this
wonderful project&lt;/a&gt;.
I also made &lt;a class="reference external" href="https://github.com/TeXitoi/structopt/pull/19"&gt;a contribution&lt;/a&gt; to the project.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-07-06</title><link href="http://tshepang.net/rust-week-of-2017-07-06" rel="alternate"></link><published>2017-07-12T00:00:00+02:00</published><updated>2017-07-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-07-12:/rust-week-of-2017-07-06</id><summary type="html">&lt;p&gt;Very little Rust this week,
but I did make &lt;a class="reference external" href="https://github.com/brson/stdx/issues/53"&gt;one complaint&lt;/a&gt;,
and &lt;a class="reference external" href="https://github.com/brson/stdx/pull/54"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Very little Rust this week,
but I did make &lt;a class="reference external" href="https://github.com/brson/stdx/issues/53"&gt;one complaint&lt;/a&gt;,
and &lt;a class="reference external" href="https://github.com/brson/stdx/pull/54"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-06-29</title><link href="http://tshepang.net/rust-week-of-2017-06-29" rel="alternate"></link><published>2017-07-05T00:00:00+02:00</published><updated>2017-07-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-07-05:/rust-week-of-2017-06-29</id><summary type="html">&lt;p&gt;Almost not Rust this week,
but with &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/45"&gt;one embarassingly tiny contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Almost not Rust this week,
but with &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/45"&gt;one embarassingly tiny contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-06-22</title><link href="http://tshepang.net/rust-week-of-2017-06-22" rel="alternate"></link><published>2017-06-25T00:00:00+02:00</published><updated>2017-06-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-06-25:/rust-week-of-2017-06-22</id><summary type="html">&lt;p&gt;I wrote a tool that helps with &lt;a class="reference external" href="http://semver.org"&gt;semver&lt;/a&gt; git tagging, which made
me explore the rather large (and unfriendly) API of &lt;a class="reference external" href="https://github.com/alexcrichton/git2-rs"&gt;git2-rs library&lt;/a&gt;.
It needs lots of love, or at a more idiomatic replacement.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I made &lt;a class="reference external" href="https://github.com/chyh1990/yaml-rust/pull/79"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I wrote a tool that helps with &lt;a class="reference external" href="http://semver.org"&gt;semver&lt;/a&gt; git tagging, which made
me explore the rather large (and unfriendly) API of &lt;a class="reference external" href="https://github.com/alexcrichton/git2-rs"&gt;git2-rs library&lt;/a&gt;.
It needs lots of love, or at a more idiomatic replacement.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I made &lt;a class="reference external" href="https://github.com/chyh1990/yaml-rust/pull/79"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-06-15</title><link href="http://tshepang.net/rust-week-of-2017-06-15" rel="alternate"></link><published>2017-06-21T00:00:00+02:00</published><updated>2017-06-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-06-21:/rust-week-of-2017-06-15</id><summary type="html">&lt;p&gt;I used &lt;a class="reference external" href="https://github.com/TeXitoi/structopt"&gt;structopt&lt;/a&gt; for the first time,
and found it reduces the pain of CLI parsing (via &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs"&gt;clap&lt;/a&gt;).
Its main shortcoming is &lt;a class="reference external" href="https://github.com/TeXitoi/structopt/issues/1"&gt;lack of subcommand support&lt;/a&gt;,
whose implementation would make a go-to for me.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I made &lt;a class="reference external" href="https://github.com/stevedonovan/to_vec/pull/1"&gt;one tiny one&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I used &lt;a class="reference external" href="https://github.com/TeXitoi/structopt"&gt;structopt&lt;/a&gt; for the first time,
and found it reduces the pain of CLI parsing (via &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs"&gt;clap&lt;/a&gt;).
Its main shortcoming is &lt;a class="reference external" href="https://github.com/TeXitoi/structopt/issues/1"&gt;lack of subcommand support&lt;/a&gt;,
whose implementation would make a go-to for me.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I made &lt;a class="reference external" href="https://github.com/stevedonovan/to_vec/pull/1"&gt;one tiny one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>FLOSS pipe dreams</title><link href="http://tshepang.net/floss-pipe-dreams" rel="alternate"></link><published>2017-06-10T15:16:10+02:00</published><updated>2017-06-10T15:16:10+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-06-10:/floss-pipe-dreams</id><summary type="html">&lt;p&gt;In which I am hoping that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt; would supplant proprietary
alternatives:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;3D content creation&lt;/strong&gt;:
&lt;a class="reference external" href="http://blender.org"&gt;Blender&lt;/a&gt; should be mainstream... used in blockbusters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;image manipulation&lt;/strong&gt;:
&lt;a class="reference external" href="http://gimp.org"&gt;GIMP&lt;/a&gt; should acquire feature-parity with Photoshop, and then steal the market&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DBMS&lt;/strong&gt;:
&lt;a class="reference external" href="http://postgresql.org"&gt;PostgreSQL&lt;/a&gt; should acquire feature-parity with Oracle,
and then steal the market&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operating system&lt;/strong&gt;:
&lt;a class="reference external" href="http://debian.org"&gt;Debian&lt;/a&gt; should …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;In which I am hoping that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt; would supplant proprietary
alternatives:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;3D content creation&lt;/strong&gt;:
&lt;a class="reference external" href="http://blender.org"&gt;Blender&lt;/a&gt; should be mainstream... used in blockbusters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;image manipulation&lt;/strong&gt;:
&lt;a class="reference external" href="http://gimp.org"&gt;GIMP&lt;/a&gt; should acquire feature-parity with Photoshop, and then steal the market&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DBMS&lt;/strong&gt;:
&lt;a class="reference external" href="http://postgresql.org"&gt;PostgreSQL&lt;/a&gt; should acquire feature-parity with Oracle,
and then steal the market&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operating system&lt;/strong&gt;:
&lt;a class="reference external" href="http://debian.org"&gt;Debian&lt;/a&gt; should be THE reference platform for various user types
(large corporations, audio/video professionals, software developers,
gamers, etc.), taking the market away from macOS and Windows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scientific computing&lt;/strong&gt;:
&lt;a class="reference external" href="http://numpy.org"&gt;NumPy&lt;/a&gt; and &lt;a class="reference external" href="http://pandas.pydata.org"&gt;pandas&lt;/a&gt; should acquire feature-parity with MATLAB,
and then steal the market&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="non-FLOSS"></category></entry><entry><title>Rust week of 2017-06-08</title><link href="http://tshepang.net/rust-week-of-2017-06-08" rel="alternate"></link><published>2017-06-08T00:00:00+02:00</published><updated>2017-06-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-06-08:/rust-week-of-2017-06-08</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/39"&gt;I&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/41"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/43"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/44"&gt;complaints&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/40"&gt;made&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/42"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/42551"&gt;contributions&lt;/a&gt; this week.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/39"&gt;I&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/41"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/43"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/issues/44"&gt;complaints&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/40"&gt;made&lt;/a&gt; &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/pull/42"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/42551"&gt;contributions&lt;/a&gt; this week.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-06-01</title><link href="http://tshepang.net/rust-week-of-2017-06-01" rel="alternate"></link><published>2017-06-07T00:00:00+02:00</published><updated>2017-06-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-06-07:/rust-week-of-2017-06-01</id><summary type="html">&lt;p&gt;Very little Rust this week, with just &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/4137"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Very little Rust this week, with just &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/4137"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-05-25</title><link href="http://tshepang.net/rust-week-of-2017-05-25" rel="alternate"></link><published>2017-05-31T00:00:00+02:00</published><updated>2017-05-31T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-31:/rust-week-of-2017-05-25</id><summary type="html">&lt;p&gt;There were &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/186"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/187"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/188"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There were &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/186"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/187"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/TyOverby/bincode/pull/188"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>FLOSS I use a-lot</title><link href="http://tshepang.net/floss-i-use-a-lot" rel="alternate"></link><published>2017-05-27T08:25:50+02:00</published><updated>2017-05-27T08:25:50+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-27:/floss-i-use-a-lot</id><summary type="html">&lt;p&gt;Following are tools I use a lot, but am not necessarily loving.
There is &lt;a class="reference external" href="http://tshepang.net/favorite-floss"&gt;a separate post&lt;/a&gt; for those.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;Debian&lt;/strong&gt;: my primary OS, and also my favorite&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;wajig&lt;/strong&gt;: &lt;a class="reference external" href="http://tshepang.net/tags#wajig-ref"&gt;I also develop and maintain it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;APT&lt;/strong&gt;: a collection of Debian package management tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;software development&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: I also use it as …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Following are tools I use a lot, but am not necessarily loving.
There is &lt;a class="reference external" href="http://tshepang.net/favorite-floss"&gt;a separate post&lt;/a&gt; for those.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;Debian&lt;/strong&gt;: my primary OS, and also my favorite&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;wajig&lt;/strong&gt;: &lt;a class="reference external" href="http://tshepang.net/tags#wajig-ref"&gt;I also develop and maintain it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;APT&lt;/strong&gt;: a collection of Debian package management tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;software development&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: I also use it as a general purpose text editor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;: as if I had a choice... work and open source&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mercurial&lt;/strong&gt;: my favorite&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rust&lt;/strong&gt;: this has since replaced Python as my favorite language,
and I spend far more time with it than any other&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;work&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Docker: a central component of our infranstructure&lt;/li&gt;
&lt;li&gt;systemd: journalctl &amp;amp; sysmtemctl&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;entertainment&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Quod Libet&lt;/strong&gt;: audio player that comes with a very excellent tag
editor, &lt;strong&gt;Ex Falso&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VLC&lt;/strong&gt;: user interface could be a lot better&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GUI applications&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Xfce Terminal&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lzone.de/liferea"&gt;Liferea&lt;/a&gt;: I like it, ugly and unkool as it is&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.transmissionbt.com"&gt;Transmission&lt;/a&gt;: the only torrent client I have ever used&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nautilus&lt;/strong&gt;: decent GUI file manager&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;miscellaneous tools&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tshepang.net/my-current-desktop-setup"&gt;dwm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tmux.sourceforge.net"&gt;tmux&lt;/a&gt;: amazingly powerful, but I wish it had less rendering bugs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;head&lt;/strong&gt; and &lt;strong&gt;tail&lt;/strong&gt;: included in GNU coreutils suite of tools&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.greenwoodsoftware.com/less"&gt;less&lt;/a&gt;: indispensable!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenSSH&lt;/strong&gt;: duh!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/joelthelion/autojump"&gt;autojump&lt;/a&gt;: makes navigating the filesystem a joy&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://fabfile.org"&gt;Fabric&lt;/a&gt;: I use it to build and deploy my blogs... it's some sort of
replacement for shell scripting&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://rg3.github.io/youtube-dl"&gt;youtube-dl&lt;/a&gt;: I prefer watching videos locally, with VLC&lt;/li&gt;
&lt;/ul&gt;
</content><category term="list"></category></entry><entry><title>favorite FLOSS</title><link href="http://tshepang.net/favorite-floss" rel="alternate"></link><published>2017-05-24T01:13:59+02:00</published><updated>2017-05-24T01:13:59+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-24:/favorite-floss</id><summary type="html">&lt;p&gt;For a piece of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt; (free/libre and open source software) to be here,
it has to both be personally useful and I have to like it a lot:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;desktop&lt;/strong&gt;: &lt;a class="reference external" href="http://dwm.suckless.org"&gt;dwm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;web browser&lt;/strong&gt;: Firefox&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;development&lt;/strong&gt;: &lt;a class="reference external" href="http://rust-lang.org"&gt;Rust&lt;/a&gt;, Emacs, Meld, &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;file manager&lt;/strong&gt;: Bash, Emacs (Dired mode)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;misc utilities:&lt;/strong&gt; &lt;a class="reference external" href="http://blog.burntsushi.net/ripgrep"&gt;ripgrep&lt;/a&gt;, &lt;a class="reference external" href="http://tshepang.net/project-of-note-sudo"&gt;Sudo&lt;/a&gt;, Lsof …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For a piece of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Free_and_open-source_software"&gt;FLOSS&lt;/a&gt; (free/libre and open source software) to be here,
it has to both be personally useful and I have to like it a lot:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;desktop&lt;/strong&gt;: &lt;a class="reference external" href="http://dwm.suckless.org"&gt;dwm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;web browser&lt;/strong&gt;: Firefox&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;development&lt;/strong&gt;: &lt;a class="reference external" href="http://rust-lang.org"&gt;Rust&lt;/a&gt;, Emacs, Meld, &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;file manager&lt;/strong&gt;: Bash, Emacs (Dired mode)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;misc utilities:&lt;/strong&gt; &lt;a class="reference external" href="http://blog.burntsushi.net/ripgrep"&gt;ripgrep&lt;/a&gt;, &lt;a class="reference external" href="http://tshepang.net/project-of-note-sudo"&gt;Sudo&lt;/a&gt;, Lsof, less,
procps (top, watch), Ex Falso, autojump, gnumeric,
coreutils (cat, head, tail), &lt;a class="reference external" href="http://tshepang.net/project-of-note-linkchecker"&gt;LinkChecker&lt;/a&gt;, &lt;a class="reference external" href="http://guichaz.free.fr/iotop"&gt;Iotop&lt;/a&gt;, &lt;a class="reference external" href="http://tshepang.net/project-of-note-rdiff-backup"&gt;rdiff-backup&lt;/a&gt;,
OpenSSH, &lt;a class="reference external" href="http://humdi.net/vnstat"&gt;vnstat&lt;/a&gt;, &lt;a class="reference external" href="http://tmux.sourceforge.net"&gt;tmux&lt;/a&gt;, File Roller, youtube-dl&lt;/p&gt;
</content><category term="list"></category></entry><entry><title>Rust week of 2017-05-18</title><link href="http://tshepang.net/rust-week-of-2017-05-18" rel="alternate"></link><published>2017-05-21T00:00:00+02:00</published><updated>2017-05-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-21:/rust-week-of-2017-05-18</id><summary type="html">&lt;p&gt;I opened &lt;a class="reference external" href="https://github.com/biluohc/app/issues/2"&gt;one issue&lt;/a&gt; and made &lt;a class="reference external" href="https://github.com/biluohc/app/pull/1"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I opened &lt;a class="reference external" href="https://github.com/biluohc/app/issues/2"&gt;one issue&lt;/a&gt; and made &lt;a class="reference external" href="https://github.com/biluohc/app/pull/1"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-05-11</title><link href="http://tshepang.net/rust-week-of-2017-05-11" rel="alternate"></link><published>2017-05-17T00:00:00+02:00</published><updated>2017-05-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-17:/rust-week-of-2017-05-11</id><summary type="html">&lt;p&gt;Like &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-05-04"&gt;last week&lt;/a&gt; (and the one before it), very little Rust this week,
and again I made just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/42070"&gt;one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Like &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-05-04"&gt;last week&lt;/a&gt; (and the one before it), very little Rust this week,
and again I made just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/42070"&gt;one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-05-04</title><link href="http://tshepang.net/rust-week-of-2017-05-04" rel="alternate"></link><published>2017-05-10T00:00:00+02:00</published><updated>2017-05-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-10:/rust-week-of-2017-05-04</id><summary type="html">&lt;p&gt;Like &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-27"&gt;last week&lt;/a&gt;, very little Rust this week,
and again with &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/41896"&gt;just one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Like &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-27"&gt;last week&lt;/a&gt;, very little Rust this week,
and again with &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/41896"&gt;just one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-04-27</title><link href="http://tshepang.net/rust-week-of-2017-04-27" rel="alternate"></link><published>2017-05-03T00:00:00+02:00</published><updated>2017-05-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-05-03:/rust-week-of-2017-04-27</id><summary type="html">&lt;p&gt;Very little Rust work this week,
with just &lt;a class="reference external" href="https://github.com/andrew-d/interfaces-rs/pull/5"&gt;one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Very little Rust work this week,
with just &lt;a class="reference external" href="https://github.com/andrew-d/interfaces-rs/pull/5"&gt;one tiny contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-04-20</title><link href="http://tshepang.net/rust-week-of-2017-04-20" rel="alternate"></link><published>2017-04-26T00:00:00+02:00</published><updated>2017-04-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-04-26:/rust-week-of-2017-04-20</id><summary type="html">&lt;p&gt;The MQTT client library I mentioned &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-13"&gt;last week&lt;/a&gt; is in serious need
of documentation,
so I did &lt;a class="reference external" href="https://github.com/inre/rust-mq/issues/19"&gt;a tiny bit&lt;/a&gt;.
I also made &lt;a class="reference external" href="https://github.com/inre/rust-mq/pull/18"&gt;a small request/suggestion&lt;/a&gt; to the same library.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The MQTT client library I mentioned &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-13"&gt;last week&lt;/a&gt; is in serious need
of documentation,
so I did &lt;a class="reference external" href="https://github.com/inre/rust-mq/issues/19"&gt;a tiny bit&lt;/a&gt;.
I also made &lt;a class="reference external" href="https://github.com/inre/rust-mq/pull/18"&gt;a small request/suggestion&lt;/a&gt; to the same library.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-04-13</title><link href="http://tshepang.net/rust-week-of-2017-04-13" rel="alternate"></link><published>2017-04-20T00:00:00+02:00</published><updated>2017-04-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-04-20:/rust-week-of-2017-04-13</id><summary type="html">&lt;p&gt;Continuing on the work from &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-06"&gt;last week&lt;/a&gt;,
I found a far more pleasant MQTT client library, &lt;a class="reference external" href="https://crates.io/crates/mqttc"&gt;mqttc&lt;/a&gt;,
and managed to send &lt;a class="reference external" href="https://github.com/tailhook/probor"&gt;probor&lt;/a&gt; messages across.
I also submitted &lt;a class="reference external" href="https://github.com/tailhook/probor/issues/8"&gt;a small note for the README&lt;/a&gt;
regarding payload size.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Continuing on the work from &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2017-04-06"&gt;last week&lt;/a&gt;,
I found a far more pleasant MQTT client library, &lt;a class="reference external" href="https://crates.io/crates/mqttc"&gt;mqttc&lt;/a&gt;,
and managed to send &lt;a class="reference external" href="https://github.com/tailhook/probor"&gt;probor&lt;/a&gt; messages across.
I also submitted &lt;a class="reference external" href="https://github.com/tailhook/probor/issues/8"&gt;a small note for the README&lt;/a&gt;
regarding payload size.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-04-06</title><link href="http://tshepang.net/rust-week-of-2017-04-06" rel="alternate"></link><published>2017-04-13T00:00:00+02:00</published><updated>2017-04-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-04-13:/rust-week-of-2017-04-06</id><summary type="html">&lt;p&gt;I enjoyed working with &lt;a class="reference external" href="https://github.com/tailhook/probor"&gt;probor&lt;/a&gt;,
which is a protocol built on top of CBOR data format.
I made &lt;a class="reference external" href="https://github.com/tailhook/probor/pull/6"&gt;a submission&lt;/a&gt; to fix the example in the README,
using the code in &lt;a class="reference external" href="https://github.com/tailhook/probor/tree/master/rust/examples"&gt;examples/ directory&lt;/a&gt;.
I managed to turn JSON to CBOR on one side of a TCP socket,
and decode it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I enjoyed working with &lt;a class="reference external" href="https://github.com/tailhook/probor"&gt;probor&lt;/a&gt;,
which is a protocol built on top of CBOR data format.
I made &lt;a class="reference external" href="https://github.com/tailhook/probor/pull/6"&gt;a submission&lt;/a&gt; to fix the example in the README,
using the code in &lt;a class="reference external" href="https://github.com/tailhook/probor/tree/master/rust/examples"&gt;examples/ directory&lt;/a&gt;.
I managed to turn JSON to CBOR on one side of a TCP socket,
and decode it back to JSON on the other side (using &lt;a class="reference external" href="https://github.com/serde-rs/json"&gt;serde_json&lt;/a&gt;).
I failed, however, transporting that CBOR data over MQTT
(using the oh-so-complex &lt;a class="reference external" href="https://github.com/zonyitoo/mqtt-rs"&gt;mqtt-rs&lt;/a&gt;).&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-03-30</title><link href="http://tshepang.net/rust-week-of-2017-03-30" rel="alternate"></link><published>2017-04-06T00:00:00+02:00</published><updated>2017-04-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-04-06:/rust-week-of-2017-03-30</id><summary type="html">&lt;p&gt;I very enjoyed reading &lt;a class="reference external" href="https://internals.rust-lang.org/t/5016/38"&gt;this (rather lengthy) comment&lt;/a&gt; on a thread
discussing Rust CStr/Cstring APIs.
It shows great depth of knowledge and shows no fear of expressing
strong opinions... I loves it.
As for the argument itself,
I don't know enough to have a qualified opinion,
though the opposition …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I very enjoyed reading &lt;a class="reference external" href="https://internals.rust-lang.org/t/5016/38"&gt;this (rather lengthy) comment&lt;/a&gt; on a thread
discussing Rust CStr/Cstring APIs.
It shows great depth of knowledge and shows no fear of expressing
strong opinions... I loves it.
As for the argument itself,
I don't know enough to have a qualified opinion,
though the opposition is quite strong against the proposal
(to deprecate those APIs).&lt;/p&gt;
&lt;p&gt;I also made &lt;a class="reference external" href="https://github.com/Byron/open-rs/pull/7"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/azerupi/mdBook/pull/239"&gt;contributions&lt;/a&gt;,
and submitted &lt;a class="reference external" href="https://github.com/azerupi/mdBook/issues/240"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/tailhook/probor/issues/5"&gt;complaints&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-03-23</title><link href="http://tshepang.net/rust-week-of-2017-03-23" rel="alternate"></link><published>2017-03-29T00:00:00+02:00</published><updated>2017-03-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-03-29:/rust-week-of-2017-03-23</id><summary type="html">&lt;p&gt;Because I'm not serious,
I made just &lt;a class="reference external" href="https://github.com/azerupi/mdBook/pull/238"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Because I'm not serious,
I made just &lt;a class="reference external" href="https://github.com/azerupi/mdBook/pull/238"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-03-16</title><link href="http://tshepang.net/rust-week-of-2017-03-16" rel="alternate"></link><published>2017-03-23T00:00:00+02:00</published><updated>2017-03-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-03-23:/rust-week-of-2017-03-16</id><summary type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/pyfisch/cbor/pull/27"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/pyfisch/cbor/pull/28"&gt;contributions&lt;/a&gt; this past week.
Meanwhile,
a friend of mine has announced &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/60gst2/beta_version_of_a_gentle_introduction_to_rust"&gt;a Rust guide&lt;/a&gt; he's been working on.
I made &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/commits?author=tshepang"&gt;some small contributions&lt;/a&gt; in its early days.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/pyfisch/cbor/pull/27"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/pyfisch/cbor/pull/28"&gt;contributions&lt;/a&gt; this past week.
Meanwhile,
a friend of mine has announced &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/60gst2/beta_version_of_a_gentle_introduction_to_rust"&gt;a Rust guide&lt;/a&gt; he's been working on.
I made &lt;a class="reference external" href="https://github.com/stevedonovan/gentle-intro/commits?author=tshepang"&gt;some small contributions&lt;/a&gt; in its early days.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-03-09</title><link href="http://tshepang.net/rust-week-of-2017-03-09" rel="alternate"></link><published>2017-03-13T00:00:00+02:00</published><updated>2017-03-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-03-13:/rust-week-of-2017-03-09</id><summary type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/39271/files#r105578080"&gt;a minor review&lt;/a&gt;,
and I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/40463"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/39271/files#r105578080"&gt;a minor review&lt;/a&gt;,
and I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/40463"&gt;one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-03-02</title><link href="http://tshepang.net/rust-week-of-2017-03-02" rel="alternate"></link><published>2017-03-08T00:00:00+02:00</published><updated>2017-03-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-03-08:/rust-week-of-2017-03-02</id><summary type="html">&lt;p&gt;Not much Rust this week, &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/113"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/114"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/115"&gt;contributions&lt;/a&gt; of the same thing...
the repo was just to big to clone,
which is strange for a project this small.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Not much Rust this week, &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/113"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/114"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/killercup/cargo-edit/pull/115"&gt;contributions&lt;/a&gt; of the same thing...
the repo was just to big to clone,
which is strange for a project this small.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-02-23</title><link href="http://tshepang.net/rust-week-of-2017-02-23" rel="alternate"></link><published>2017-03-02T00:00:00+02:00</published><updated>2017-03-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-03-02:/rust-week-of-2017-02-23</id><summary type="html">&lt;p&gt;I was glad to have the Python equivalent of the &lt;a class="reference external" href="https://crates.io/crates/shlex"&gt;shlex&lt;/a&gt; crate,
which understands shell quoting,
helping in transforming command arguments into
what's suitable to send to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;process::Command::args&lt;/span&gt;&lt;/tt&gt;.
This allows one to avoid the pain experienced by naively doing the
following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;::&lt;span class="n"&gt;is_whitespace …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I was glad to have the Python equivalent of the &lt;a class="reference external" href="https://crates.io/crates/shlex"&gt;shlex&lt;/a&gt; crate,
which understands shell quoting,
helping in transforming command arguments into
what's suitable to send to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;process::Command::args&lt;/span&gt;&lt;/tt&gt;.
This allows one to avoid the pain experienced by naively doing the
following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;::&lt;span class="n"&gt;is_whitespace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;command&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the command is something like
&lt;tt class="docutils literal"&gt;hg commit &lt;span class="pre"&gt;--message&lt;/span&gt; 'git eat world'&lt;/tt&gt;,
then the iterator would expand to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;hg&lt;/li&gt;
&lt;li&gt;commit&lt;/li&gt;
&lt;li&gt;--message&lt;/li&gt;
&lt;li&gt;'git&lt;/li&gt;
&lt;li&gt;eat&lt;/li&gt;
&lt;li&gt;world'&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That will not run, and will fail with a not-obvious error message.
Using shlex, instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shlex&lt;/span&gt;::&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;command&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output should then be like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;hg&lt;/li&gt;
&lt;li&gt;commit&lt;/li&gt;
&lt;li&gt;--message&lt;/li&gt;
&lt;li&gt;git eat world&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ctz/hyper-rustls/pull/5"&gt;Just one contribution&lt;/a&gt; this week,
and it's not even that great... not sure it's an improvement&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-02-16</title><link href="http://tshepang.net/rust-week-of-2017-02-16" rel="alternate"></link><published>2017-02-18T00:00:00+02:00</published><updated>2017-02-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-02-18:/rust-week-of-2017-02-16</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/slog-rs/slog/pull/114"&gt;one contribution&lt;/a&gt;, just like last week.
I also &lt;a class="reference external" href="http://stackoverflow.com/q/42379689/321731"&gt;asked a question&lt;/a&gt; on Stack Overflow...
so surprising that one can't change file owner using stdlib!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/slog-rs/slog/pull/114"&gt;one contribution&lt;/a&gt;, just like last week.
I also &lt;a class="reference external" href="http://stackoverflow.com/q/42379689/321731"&gt;asked a question&lt;/a&gt; on Stack Overflow...
so surprising that one can't change file owner using stdlib!&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-02-09</title><link href="http://tshepang.net/rust-week-of-2017-02-09" rel="alternate"></link><published>2017-02-10T00:00:00+02:00</published><updated>2017-02-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-02-10:/rust-week-of-2017-02-09</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/faradayio/boondock/pull/11"&gt;one contribution&lt;/a&gt; this time. Damn!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/faradayio/boondock/pull/11"&gt;one contribution&lt;/a&gt; this time. Damn!&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-02-02</title><link href="http://tshepang.net/rust-week-of-2017-02-02" rel="alternate"></link><published>2017-02-09T00:00:00+02:00</published><updated>2017-02-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-02-09:/rust-week-of-2017-02-02</id><summary type="html">&lt;p&gt;I very much enjoyed reading about &lt;a class="reference external" href="http://aturon.github.io/blog/2016/09/07/futures-design"&gt;the design of Rust futures&lt;/a&gt;.
It makes me highly appreciate the smarts of those involved,
and how lucky we are to have people building excellent abstractions like such.
In addition, it also nicely summarises Rust traits.
&lt;a class="reference external" href="https://github.com/softprops/shiplift/issues/50"&gt;I wrote a tiny bit about the feature …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I very much enjoyed reading about &lt;a class="reference external" href="http://aturon.github.io/blog/2016/09/07/futures-design"&gt;the design of Rust futures&lt;/a&gt;.
It makes me highly appreciate the smarts of those involved,
and how lucky we are to have people building excellent abstractions like such.
In addition, it also nicely summarises Rust traits.
&lt;a class="reference external" href="https://github.com/softprops/shiplift/issues/50"&gt;I wrote a tiny bit about the feature&lt;/a&gt; myself some time ago.&lt;/p&gt;
&lt;p&gt;I reported &lt;a class="reference external" href="https://github.com/alexcrichton/futures-rs/pull/384"&gt;one issue&lt;/a&gt; and made &lt;a class="reference external" href="https://github.com/alexcrichton/futures-rs/pull/385"&gt;two&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-05-22"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-01-27</title><link href="http://tshepang.net/rust-week-of-2017-01-27" rel="alternate"></link><published>2017-02-02T00:00:00+02:00</published><updated>2017-02-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-02-02:/rust-week-of-2017-01-27</id><summary type="html">&lt;p&gt;This week I submitted &lt;a class="reference external" href="https://github.com/softprops/shiplift/issues/45"&gt;one complaint&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/46"&gt;and&lt;/a&gt; &lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/47"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/49"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/39405"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This week I submitted &lt;a class="reference external" href="https://github.com/softprops/shiplift/issues/45"&gt;one complaint&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/46"&gt;and&lt;/a&gt; &lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/47"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/softprops/shiplift/pull/49"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/39405"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-01-20</title><link href="http://tshepang.net/rust-week-of-2017-01-20" rel="alternate"></link><published>2017-01-26T00:00:00+02:00</published><updated>2017-01-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-01-26:/rust-week-of-2017-01-20</id><summary type="html">&lt;p&gt;I enjoyed reading this post about bad C ideas that are seen in other languages,
including Rust.
I talked a bit about it &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/823671209338568704"&gt;on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally did set up my Emacs for code completion (&lt;a class="reference external" href="https://bitbucket.org/tshepang/custom/commits/717749"&gt;init.el changes&lt;/a&gt;),
thanks to &lt;a class="reference external" href="https://github.com/racer-rust/emacs-racer"&gt;an easy guide&lt;/a&gt;.
I tried many months back and failed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I enjoyed reading this post about bad C ideas that are seen in other languages,
including Rust.
I talked a bit about it &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/823671209338568704"&gt;on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally did set up my Emacs for code completion (&lt;a class="reference external" href="https://bitbucket.org/tshepang/custom/commits/717749"&gt;init.el changes&lt;/a&gt;),
thanks to &lt;a class="reference external" href="https://github.com/racer-rust/emacs-racer"&gt;an easy guide&lt;/a&gt;.
I tried many months back and failed for some reasons I do not remember.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I made &lt;a class="reference external" href="https://github.com/alexcrichton/curl-rust/pull/147"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-01-06</title><link href="http://tshepang.net/rust-week-of-2017-01-06" rel="alternate"></link><published>2017-01-13T00:00:00+02:00</published><updated>2017-01-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-01-13:/rust-week-of-2017-01-06</id><summary type="html">&lt;p&gt;I asked &lt;a class="reference external" href="http://stackoverflow.com/q/41551036/321731"&gt;two&lt;/a&gt; &lt;a class="reference external" href="http://stackoverflow.com/q/41614923/321731"&gt;questions&lt;/a&gt; on Stack Overflow.
The first led me to use the nifty &lt;a class="reference external" href="https://docs.rs/lazy_static"&gt;lazy_static&lt;/a&gt; macro for the first time,
The second led me to submit &lt;a class="reference external" href="https://github.com/sfackler/hyper-native-tls/issues/1"&gt;a complaint&lt;/a&gt;
(which got fixed within 3 minutes by the way).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I am looking forward to two projects:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.jwilm.io/announcing-alacritty"&gt;Alacritty&lt;/a&gt;, a fast terminal emulator …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I asked &lt;a class="reference external" href="http://stackoverflow.com/q/41551036/321731"&gt;two&lt;/a&gt; &lt;a class="reference external" href="http://stackoverflow.com/q/41614923/321731"&gt;questions&lt;/a&gt; on Stack Overflow.
The first led me to use the nifty &lt;a class="reference external" href="https://docs.rs/lazy_static"&gt;lazy_static&lt;/a&gt; macro for the first time,
The second led me to submit &lt;a class="reference external" href="https://github.com/sfackler/hyper-native-tls/issues/1"&gt;a complaint&lt;/a&gt;
(which got fixed within 3 minutes by the way).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I am looking forward to two projects:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.jwilm.io/announcing-alacritty"&gt;Alacritty&lt;/a&gt;, a fast terminal emulator&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Wilfred/remacs"&gt;Remacs&lt;/a&gt;, Emacs gradually implemented in Rust&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;As for contributions, I &lt;a class="reference external" href="https://github.com/rust-lang-nursery/lazy-static.rs/pull/57"&gt;made&lt;/a&gt; &lt;a class="reference external" href="https://github.com/sfackler/hyper-openssl/pull/2"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/hyperium/hyper/pull/997"&gt;three&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2017-01-13</title><link href="http://tshepang.net/rust-week-of-2017-01-13" rel="alternate"></link><published>2017-01-13T00:00:00+02:00</published><updated>2017-01-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-01-13:/rust-week-of-2017-01-13</id><summary type="html">&lt;p&gt;I asked two questions on &lt;a class="reference external" href="http://stackoverflow.com/q/41637995/321731"&gt;Stack&lt;/a&gt; &lt;a class="reference external" href="http://stackoverflow.com/q/41723327/321731"&gt;Overflow&lt;/a&gt;,
opened &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/39126"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/curl-rust/issues/143"&gt;issues&lt;/a&gt;,
and made just &lt;a class="reference external" href="https://github.com/alexcrichton/curl-rust/pull/142"&gt;one contribution&lt;/a&gt;,&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I asked two questions on &lt;a class="reference external" href="http://stackoverflow.com/q/41637995/321731"&gt;Stack&lt;/a&gt; &lt;a class="reference external" href="http://stackoverflow.com/q/41723327/321731"&gt;Overflow&lt;/a&gt;,
opened &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/39126"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/curl-rust/issues/143"&gt;issues&lt;/a&gt;,
and made just &lt;a class="reference external" href="https://github.com/alexcrichton/curl-rust/pull/142"&gt;one contribution&lt;/a&gt;,&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-12-30</title><link href="http://tshepang.net/rust-week-of-2016-12-30" rel="alternate"></link><published>2017-01-03T00:00:00+02:00</published><updated>2017-01-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2017-01-03:/rust-week-of-2016-12-30</id><summary type="html">&lt;p&gt;We need more quality code reviews like &lt;a class="reference external" href="http://blog.mbrt.it/2016-12-01-ripgrep-code-review"&gt;this one&lt;/a&gt; for ripgrep.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I used &lt;a class="reference external" href="https://docs.rs/reqwest"&gt;reqwest&lt;/a&gt; for the first time,
and was made sad because using HTTP headers is as hard as doing the
same for &lt;a class="reference external" href="https://docs.rs/hyper"&gt;hyper&lt;/a&gt;,
especially given that this is supposed to be a more easy library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auth_bearer …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;We need more quality code reviews like &lt;a class="reference external" href="http://blog.mbrt.it/2016-12-01-ripgrep-code-review"&gt;this one&lt;/a&gt; for ripgrep.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I used &lt;a class="reference external" href="https://docs.rs/reqwest"&gt;reqwest&lt;/a&gt; for the first time,
and was made sad because using HTTP headers is as hard as doing the
same for &lt;a class="reference external" href="https://docs.rs/hyper"&gt;hyper&lt;/a&gt;,
especially given that this is supposed to be a more easy library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auth_bearer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Authorization&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Bearer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;some token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reqwest&lt;/span&gt;::&lt;span class="n"&gt;Client&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auth_bearer&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It can imagine a more nice API:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reqwest&lt;/span&gt;::&lt;span class="n"&gt;Client&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auth_bearer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reqwest&lt;/span&gt;::&lt;span class="n"&gt;Header&lt;/span&gt;::&lt;span class="n"&gt;Bearer&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auth_bearer&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I did not think much about this, so maybe there are issues with the desired.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/serde-rs/json/pull/182"&gt;one contribution&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-12-23</title><link href="http://tshepang.net/rust-week-of-2016-12-23" rel="alternate"></link><published>2016-12-29T00:00:00+02:00</published><updated>2016-12-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-12-29:/rust-week-of-2016-12-23</id><summary type="html">&lt;p&gt;I enjoyed going through the tutorial on &lt;a class="reference external" href="https://siciarz.net/24-days-rust-structured-logging"&gt;slog&lt;/a&gt;,
which helped reduce the complexity I experienced some time ago when
I first looked.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38681"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/slog-rs/json/pull/3"&gt;two&lt;/a&gt; contributions this time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I enjoyed going through the tutorial on &lt;a class="reference external" href="https://siciarz.net/24-days-rust-structured-logging"&gt;slog&lt;/a&gt;,
which helped reduce the complexity I experienced some time ago when
I first looked.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38681"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/slog-rs/json/pull/3"&gt;two&lt;/a&gt; contributions this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-12-16</title><link href="http://tshepang.net/rust-week-of-2016-12-16" rel="alternate"></link><published>2016-12-18T00:00:00+02:00</published><updated>2016-12-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-12-18:/rust-week-of-2016-12-16</id><summary type="html">&lt;p&gt;I like how easy it seems to create custom template filters,
as seen in &lt;a class="reference external" href="https://siciarz.net/24-days-rust-tera"&gt;this post about tera&lt;/a&gt;.
I also like the utility of the derive_builder crate,
as described in &lt;a class="reference external" href="https://siciarz.net/24-days-rust-derive_builder"&gt;another post&lt;/a&gt; (from the same blog).&lt;/p&gt;
&lt;p&gt;In terms of contributions, I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38467"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I like how easy it seems to create custom template filters,
as seen in &lt;a class="reference external" href="https://siciarz.net/24-days-rust-tera"&gt;this post about tera&lt;/a&gt;.
I also like the utility of the derive_builder crate,
as described in &lt;a class="reference external" href="https://siciarz.net/24-days-rust-derive_builder"&gt;another post&lt;/a&gt; (from the same blog).&lt;/p&gt;
&lt;p&gt;In terms of contributions, I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38467"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-12-09</title><link href="http://tshepang.net/rust-week-of-2016-12-09" rel="alternate"></link><published>2016-12-15T00:00:00+02:00</published><updated>2016-12-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-12-15:/rust-week-of-2016-12-09</id><summary type="html">&lt;p&gt;I played some with serde-yaml and rust-yaml.
I last looked at YAML some years ago, and looking again,
I am surprised by its complexity.&lt;/p&gt;
&lt;p&gt;As far as contributions go, there were &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38395"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/Keats/tera/pull/92"&gt;two&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I played some with serde-yaml and rust-yaml.
I last looked at YAML some years ago, and looking again,
I am surprised by its complexity.&lt;/p&gt;
&lt;p&gt;As far as contributions go, there were &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/38395"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/Keats/tera/pull/92"&gt;two&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-12-02</title><link href="http://tshepang.net/rust-week-of-2016-12-02" rel="alternate"></link><published>2016-12-09T00:00:00+02:00</published><updated>2016-12-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-12-09:/rust-week-of-2016-12-02</id><summary type="html">&lt;p&gt;A mere &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml/pull/35"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml/pull/36"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;A mere &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml/pull/35"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dtolnay/serde-yaml/pull/36"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-11-25</title><link href="http://tshepang.net/rust-week-of-2016-11-25" rel="alternate"></link><published>2016-12-01T00:00:00+02:00</published><updated>2016-12-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-12-01:/rust-week-of-2016-11-25</id><summary type="html">&lt;p&gt;I been wanting to write a Rust reStructuredText parser for the longest
time, and surprised to find that &lt;a class="reference external" href="https://github.com/flying-sheep/rust-rst"&gt;one has been around for months&lt;/a&gt;. I
do not have the skills enough to build such a thing, so am glad
someone beat me to it.&lt;/p&gt;
&lt;p&gt;In terms of contributions, there were …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I been wanting to write a Rust reStructuredText parser for the longest
time, and surprised to find that &lt;a class="reference external" href="https://github.com/flying-sheep/rust-rst"&gt;one has been around for months&lt;/a&gt;. I
do not have the skills enough to build such a thing, so am glad
someone beat me to it.&lt;/p&gt;
&lt;p&gt;In terms of contributions, there were &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3357"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3358"&gt;two&lt;/a&gt; this week.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-11-18</title><link href="http://tshepang.net/rust-week-of-2016-11-18" rel="alternate"></link><published>2016-11-24T00:00:00+02:00</published><updated>2016-11-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-11-24:/rust-week-of-2016-11-18</id><summary type="html">&lt;p&gt;I was surprised by the ease of use of &lt;a class="reference external" href="https://crates.io/crates/libflate"&gt;libflate&lt;/a&gt; when decompressing a
gzip'ed file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libflate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;fs&lt;/span&gt;::&lt;span class="n"&gt;File&lt;/span&gt;::&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;file.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libflate&lt;/span&gt;::&lt;span class="n"&gt;gzip&lt;/span&gt;::&lt;span class="n"&gt;Decoder&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;do_something_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it, &lt;tt class="docutils literal"&gt;file&lt;/tt&gt; is now like a normal …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was surprised by the ease of use of &lt;a class="reference external" href="https://crates.io/crates/libflate"&gt;libflate&lt;/a&gt; when decompressing a
gzip'ed file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libflate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;fs&lt;/span&gt;::&lt;span class="n"&gt;File&lt;/span&gt;::&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;file.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libflate&lt;/span&gt;::&lt;span class="n"&gt;gzip&lt;/span&gt;::&lt;span class="n"&gt;Decoder&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;do_something_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it, &lt;tt class="docutils literal"&gt;file&lt;/tt&gt; is now like a normal file!&lt;/p&gt;
&lt;p&gt;Another module I used for the first time is &lt;a class="reference external" href="https://crates.io/crates/regex"&gt;regex&lt;/a&gt;, which seems to
have such a well-designed API actually.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I made just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37956"&gt;one contribution&lt;/a&gt; this week.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-11-11</title><link href="http://tshepang.net/rust-week-of-2016-11-11" rel="alternate"></link><published>2016-11-17T00:00:00+02:00</published><updated>2016-11-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-11-17:/rust-week-of-2016-11-11</id><summary type="html">&lt;p&gt;I enjoyed reading an excellent and detailed &lt;a class="reference external" href="https://scribbles.pascalhertleif.de/elegant-apis-in-rust.html"&gt;Rust API design
guide&lt;/a&gt;. In terms of contributions, I submitted &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/749"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37821"&gt;two&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I enjoyed reading an excellent and detailed &lt;a class="reference external" href="https://scribbles.pascalhertleif.de/elegant-apis-in-rust.html"&gt;Rust API design
guide&lt;/a&gt;. In terms of contributions, I submitted &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/749"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37821"&gt;two&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-11-04</title><link href="http://tshepang.net/rust-week-of-2016-11-04" rel="alternate"></link><published>2016-11-10T00:00:00+02:00</published><updated>2016-11-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-11-10:/rust-week-of-2016-11-04</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs/pull/37"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37680"&gt;contributions&lt;/a&gt; this week.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs/pull/37"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37680"&gt;contributions&lt;/a&gt; this week.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-10-28</title><link href="http://tshepang.net/rust-week-of-2016-10-28" rel="alternate"></link><published>2016-11-03T00:00:00+02:00</published><updated>2016-11-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-11-03:/rust-week-of-2016-10-28</id><summary type="html">&lt;p&gt;I find the following to be among the most exciting projects in the
world of Rust:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://internals.rust-lang.org/t/4275"&gt;Cretonne&lt;/a&gt;, an alternative to LLVM&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jamey.thesharps.us/2016/10/corrode-update-support-from-mozilla-and.html"&gt;Corrode&lt;/a&gt;, a C to Rust translator&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I made just &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/issues/13"&gt;one contribution&lt;/a&gt; this week, and submitted &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/issues/14"&gt;one issue&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I find the following to be among the most exciting projects in the
world of Rust:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://internals.rust-lang.org/t/4275"&gt;Cretonne&lt;/a&gt;, an alternative to LLVM&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jamey.thesharps.us/2016/10/corrode-update-support-from-mozilla-and.html"&gt;Corrode&lt;/a&gt;, a C to Rust translator&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I made just &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/issues/13"&gt;one contribution&lt;/a&gt; this week, and submitted &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/issues/14"&gt;one issue&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-10-21</title><link href="http://tshepang.net/rust-week-of-2016-10-21" rel="alternate"></link><published>2016-10-27T00:00:00+02:00</published><updated>2016-10-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-10-27:/rust-week-of-2016-10-21</id><summary type="html">&lt;p&gt;I very much enjoyed reading &lt;a class="reference external" href="https://blog.rust-lang.org/2016/10/20/Rust-1.12.1.html"&gt;the announcement for 1.12.1&lt;/a&gt;, the first
patch release of Rust. Reading it is a good reminder of the great work
of those involved, and I am grateful.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/tailhook/rotor/pull/28"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/GuillaumeGomez/sysinfo/pull/22"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/pull/11"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/pull/12"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I very much enjoyed reading &lt;a class="reference external" href="https://blog.rust-lang.org/2016/10/20/Rust-1.12.1.html"&gt;the announcement for 1.12.1&lt;/a&gt;, the first
patch release of Rust. Reading it is a good reminder of the great work
of those involved, and I am grateful.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/tailhook/rotor/pull/28"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/GuillaumeGomez/sysinfo/pull/22"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/pull/11"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/borntyping/rust-psutil/pull/12"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-10-14</title><link href="http://tshepang.net/rust-week-of-2016-10-14" rel="alternate"></link><published>2016-10-21T00:00:00+02:00</published><updated>2016-10-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-10-21:/rust-week-of-2016-10-14</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I asked &lt;a class="reference external" href="http://stackoverflow.com/q/40119477/321731"&gt;a Nickel-related question&lt;/a&gt;, after searching and failing.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.burntsushi.net/ripgrep"&gt;This post about ripgrep&lt;/a&gt; is a masterpiece!&lt;/li&gt;
&lt;li&gt;Also, &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37314"&gt;just one contribution&lt;/a&gt; this week.&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I asked &lt;a class="reference external" href="http://stackoverflow.com/q/40119477/321731"&gt;a Nickel-related question&lt;/a&gt;, after searching and failing.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.burntsushi.net/ripgrep"&gt;This post about ripgrep&lt;/a&gt; is a masterpiece!&lt;/li&gt;
&lt;li&gt;Also, &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37314"&gt;just one contribution&lt;/a&gt; this week.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-10-07</title><link href="http://tshepang.net/rust-week-of-2016-10-07" rel="alternate"></link><published>2016-10-13T00:00:00+02:00</published><updated>2016-10-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-10-13:/rust-week-of-2016-10-07</id><summary type="html">&lt;p&gt;I am impressed by &lt;a class="reference external" href="https://docs.rs/curl-rust"&gt;the documentation of curl-rust&lt;/a&gt;. It's better than
for all Rust crates I've seen yet, if memory serves well. I am
grateful for the painstaking work it must have been for whoever was
responsible... it's a massive API. It could do with more examples
though.&lt;/p&gt;
&lt;p&gt;In terms …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am impressed by &lt;a class="reference external" href="https://docs.rs/curl-rust"&gt;the documentation of curl-rust&lt;/a&gt;. It's better than
for all Rust crates I've seen yet, if memory serves well. I am
grateful for the painstaking work it must have been for whoever was
responsible... it's a massive API. It could do with more examples
though.&lt;/p&gt;
&lt;p&gt;In terms of contributions, I made &lt;a class="reference external" href="https://github.com/hyperium/hyper/pull/932"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-09-30</title><link href="http://tshepang.net/rust-week-of-2016-09-30" rel="alternate"></link><published>2016-10-06T00:00:00+02:00</published><updated>2016-10-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-10-06:/rust-week-of-2016-09-30</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/nickel-org/nickel.rs/pull/385"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dpc/slog-rs/pull/56"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dpc/slog-rs/pull/57"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/diesel-rs/diesel/pull/456"&gt;contributions&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37008"&gt;this&lt;/a&gt; week.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/nickel-org/nickel.rs/pull/385"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dpc/slog-rs/pull/56"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dpc/slog-rs/pull/57"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/diesel-rs/diesel/pull/456"&gt;contributions&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/37008"&gt;this&lt;/a&gt; week.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-09-23</title><link href="http://tshepang.net/rust-week-of-2016-09-23" rel="alternate"></link><published>2016-09-29T00:00:00+02:00</published><updated>2016-09-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-09-29:/rust-week-of-2016-09-23</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/kaj/nickel-jwt-session/pull/10"&gt;one contribution&lt;/a&gt; this week, but I've been continuing coding
in the field of web development, using Nickel and JWT. It's been fun,
and the project should be open to the public in a week or two.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/kaj/nickel-jwt-session/pull/10"&gt;one contribution&lt;/a&gt; this week, but I've been continuing coding
in the field of web development, using Nickel and JWT. It's been fun,
and the project should be open to the public in a week or two.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-09-16</title><link href="http://tshepang.net/rust-week-of-2016-09-16" rel="alternate"></link><published>2016-09-22T00:00:00+02:00</published><updated>2016-09-22T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-09-22:/rust-week-of-2016-09-16</id><summary type="html">&lt;p&gt;I looked at &lt;a class="reference external" href="https://crates.io/crates/bcrypt"&gt;bcrypt&lt;/a&gt;, which helps with secure password storage. I
don't quite understand how it works, but I've seen that it prevents
brute-force attacks... there is lots of CPU usage during hashing and
verification.&lt;/p&gt;
&lt;p&gt;I continued playing with Nickel (&lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-09-02"&gt;started few weeks ago&lt;/a&gt;), and am
liking it more, largely …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I looked at &lt;a class="reference external" href="https://crates.io/crates/bcrypt"&gt;bcrypt&lt;/a&gt;, which helps with secure password storage. I
don't quite understand how it works, but I've seen that it prevents
brute-force attacks... there is lots of CPU usage during hashing and
verification.&lt;/p&gt;
&lt;p&gt;I continued playing with Nickel (&lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-09-02"&gt;started few weeks ago&lt;/a&gt;), and am
liking it more, largely due discovering a less-magical way of doing
things where you'd use functions instead of a macro named
&lt;tt class="docutils literal"&gt;middleware&lt;/tt&gt;. I've also been playing with &lt;a class="reference external" href="https://github.com/kaj/nickel-jwt-session"&gt;nickel-jwt-session&lt;/a&gt;,
which offers such a convenient API to use for working with &lt;a class="reference external" href="https://jwt.io"&gt;JSON Web
Tokens&lt;/a&gt;. I even made &lt;a class="reference external" href="https://github.com/kaj/nickel-jwt-session/pull/8"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/kaj/nickel-jwt-session/pull/9"&gt;small&lt;/a&gt; contributions to the project.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-09-09</title><link href="http://tshepang.net/rust-week-of-2016-09-09" rel="alternate"></link><published>2016-09-14T00:00:00+02:00</published><updated>2016-09-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-09-14:/rust-week-of-2016-09-09</id><summary type="html">&lt;p&gt;I used &lt;a class="reference external" href="https://crates.io/crates/postgres"&gt;the postgres&lt;/a&gt; crate for the first time. I played with Diesel
before (ORM), but it has some strange &lt;tt class="docutils literal"&gt;unresolved import&lt;/tt&gt; issue, so
will maybe look at it later.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36480"&gt;just one contribution&lt;/a&gt; this time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I used &lt;a class="reference external" href="https://crates.io/crates/postgres"&gt;the postgres&lt;/a&gt; crate for the first time. I played with Diesel
before (ORM), but it has some strange &lt;tt class="docutils literal"&gt;unresolved import&lt;/tt&gt; issue, so
will maybe look at it later.&lt;/p&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36480"&gt;just one contribution&lt;/a&gt; this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-09-02</title><link href="http://tshepang.net/rust-week-of-2016-09-02" rel="alternate"></link><published>2016-09-06T00:00:00+02:00</published><updated>2016-09-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-09-06:/rust-week-of-2016-09-02</id><summary type="html">&lt;p&gt;Had a look at &lt;a class="reference external" href="http://diesel.rs"&gt;Diesel&lt;/a&gt; and at &lt;a class="reference external" href="http://nickel.rs"&gt;Nickel&lt;/a&gt;. I wish they had better
documentation... I cannot say with good confidence that I understand
them.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36314"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Had a look at &lt;a class="reference external" href="http://diesel.rs"&gt;Diesel&lt;/a&gt; and at &lt;a class="reference external" href="http://nickel.rs"&gt;Nickel&lt;/a&gt;. I wish they had better
documentation... I cannot say with good confidence that I understand
them.&lt;/p&gt;
&lt;p&gt;Regarding contributions, I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36314"&gt;just one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-08-19</title><link href="http://tshepang.net/rust-week-of-2016-08-19" rel="alternate"></link><published>2016-08-25T00:00:00+02:00</published><updated>2016-08-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-08-25:/rust-week-of-2016-08-19</id><summary type="html">&lt;p&gt;There &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35948"&gt;were&lt;/a&gt; a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35949"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3020"&gt;submissions&lt;/a&gt;, including &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3036"&gt;one that took entirely
many hours&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35948"&gt;were&lt;/a&gt; a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35949"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3020"&gt;submissions&lt;/a&gt;, including &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3036"&gt;one that took entirely
many hours&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-08-12</title><link href="http://tshepang.net/rust-week-of-2016-08-12" rel="alternate"></link><published>2016-08-18T00:00:00+02:00</published><updated>2016-08-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-08-18:/rust-week-of-2016-08-12</id><summary type="html">&lt;p&gt;I enjoyed a useful (and tiny) library that helps align text
nicely. Following is an example of its usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent&lt;/span&gt;::&lt;span class="n"&gt;unindent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;        A long text is beginning here and not in the previous line,&lt;/span&gt;
&lt;span class="s"&gt;        because it wouldn&amp;#39;t fit in comfort.&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I enjoyed a useful (and tiny) library that helps align text
nicely. Following is an example of its usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent&lt;/span&gt;::&lt;span class="n"&gt;unindent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;        A long text is beginning here and not in the previous line,&lt;/span&gt;
&lt;span class="s"&gt;        because it wouldn&amp;#39;t fit in comfort.&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unindent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I submitted to &lt;a class="reference external" href="https://github.com/dtolnay/indoc/pull/4"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dtolnay/indoc/pull/5"&gt;improvements&lt;/a&gt; to its documentation. I also
contributed &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/3015"&gt;a style improvement&lt;/a&gt; to Cargo, the Rust package manager.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-08-05</title><link href="http://tshepang.net/rust-week-of-2016-08-05" rel="alternate"></link><published>2016-08-12T00:00:00+02:00</published><updated>2016-08-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-08-12:/rust-week-of-2016-08-05</id><summary type="html">&lt;p&gt;I made a tiny &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35595#discussion-diff-74476391"&gt;review&lt;/a&gt;. I also made &lt;a class="reference external" href="https://github.com/servo/rust-url/pull/218"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35597"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35598"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made a tiny &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35595#discussion-diff-74476391"&gt;review&lt;/a&gt;. I also made &lt;a class="reference external" href="https://github.com/servo/rust-url/pull/218"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35597"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/35598"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-07-29</title><link href="http://tshepang.net/rust-week-of-2016-07-29" rel="alternate"></link><published>2016-08-04T00:00:00+02:00</published><updated>2016-08-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-08-04:/rust-week-of-2016-07-29</id><summary type="html">&lt;p&gt;There were just &lt;a class="reference external" href="https://github.com/maidsafe/safe_vault/pull/540"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/servo/rust-url/pull/217"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There were just &lt;a class="reference external" href="https://github.com/maidsafe/safe_vault/pull/540"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/servo/rust-url/pull/217"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-08-26</title><link href="http://tshepang.net/rust-week-of-2016-08-26" rel="alternate"></link><published>2016-08-01T00:00:00+02:00</published><updated>2016-08-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-08-01:/rust-week-of-2016-08-26</id><summary type="html">&lt;p&gt;I did learn how to use a TCP socket to communicate between 2
processes. I found the API quite pleasing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TcpListener&lt;/span&gt;::&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost:80&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incoming&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_to_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// do stuff with `content`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36134"&gt;a change&lt;/a&gt; that makes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I did learn how to use a TCP socket to communicate between 2
processes. I found the API quite pleasing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TcpListener&lt;/span&gt;::&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost:80&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incoming&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_to_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// do stuff with `content`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/36134"&gt;a change&lt;/a&gt; that makes the example in the docs more
simple.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-07-22</title><link href="http://tshepang.net/rust-week-of-2016-07-22" rel="alternate"></link><published>2016-07-28T00:00:00+02:00</published><updated>2016-07-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-07-28:/rust-week-of-2016-07-22</id><summary type="html">&lt;p&gt;I made a &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/47"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/48"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/49"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/608"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/609"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made a &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/47"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/48"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/flate2-rs/pull/49"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/608"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/kbknapp/clap-rs/pull/609"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-07-15</title><link href="http://tshepang.net/rust-week-of-2016-07-15" rel="alternate"></link><published>2016-07-21T00:00:00+02:00</published><updated>2016-07-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-07-21:/rust-week-of-2016-07-15</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://internals.rust-lang.org/t/3711"&gt;I learnt some stuff about API design&lt;/a&gt;, and enjoyed reading about
experiences of &lt;a class="reference external" href="http://www.integer32.com/playground/devops/2016/07/18/alternate-playground-implementation.html"&gt;developing a medium-sized project&lt;/a&gt;. I also
contributed a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34848"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34849"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34850"&gt;changes&lt;/a&gt; to Rust.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://internals.rust-lang.org/t/3711"&gt;I learnt some stuff about API design&lt;/a&gt;, and enjoyed reading about
experiences of &lt;a class="reference external" href="http://www.integer32.com/playground/devops/2016/07/18/alternate-playground-implementation.html"&gt;developing a medium-sized project&lt;/a&gt;. I also
contributed a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34848"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34849"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34850"&gt;changes&lt;/a&gt; to Rust.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-07-08</title><link href="http://tshepang.net/rust-week-of-2016-07-08" rel="alternate"></link><published>2016-07-14T00:00:00+02:00</published><updated>2016-07-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-07-14:/rust-week-of-2016-07-08</id><summary type="html">&lt;p&gt;I created my first custom type, a struct with 2 members and one
method. It made my code more clean... when you see your functions
accept way too many arguments, chances are those are related, making
it time for a bit of refactoring. It was fun.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;This week, I only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I created my first custom type, a struct with 2 members and one
method. It made my code more clean... when you see your functions
accept way too many arguments, chances are those are related, making
it time for a bit of refactoring. It was fun.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;This week, I only made &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/pull/28"&gt;one submission&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-07-01</title><link href="http://tshepang.net/rust-week-of-2016-07-01" rel="alternate"></link><published>2016-07-03T00:00:00+02:00</published><updated>2016-07-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-07-03:/rust-week-of-2016-07-01</id><summary type="html">&lt;p&gt;Made &lt;a class="reference external" href="https://github.com/servo/servo/pull/12266"&gt;my first contribution to Servo&lt;/a&gt;, the most exciting software
project on the planet. I also did a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34636"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust-www/pull/433"&gt;other&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/2"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/3"&gt;doc&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/4"&gt;submissions&lt;/a&gt; to other projects.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Made &lt;a class="reference external" href="https://github.com/servo/servo/pull/12266"&gt;my first contribution to Servo&lt;/a&gt;, the most exciting software
project on the planet. I also did a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34636"&gt;few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust-www/pull/433"&gt;other&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/2"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/3"&gt;doc&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/dropbox/rust-subprocess-communicate/pull/4"&gt;submissions&lt;/a&gt; to other projects.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-06-24</title><link href="http://tshepang.net/rust-week-of-2016-06-24" rel="alternate"></link><published>2016-06-30T00:00:00+02:00</published><updated>2016-06-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-06-30:/rust-week-of-2016-06-24</id><summary type="html">&lt;p&gt;I struggled hard enough with a &lt;tt class="docutils literal"&gt;does not live long enough&lt;/tt&gt; that I
decided to ask for help, and the &lt;a class="reference external" href="http://stackoverflow.com/q/38023291/321731"&gt;solution to my problem&lt;/a&gt; was
actually quite simple.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/hyperium/hyper/pull/846"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/lettre/lettre/pull/76"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/pull/27"&gt;fixes&lt;/a&gt; to various projects, and reported &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/issues/26"&gt;an
issue&lt;/a&gt; that promptly fixed on yet another. &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34584"&gt;I also ran rustfmt …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I struggled hard enough with a &lt;tt class="docutils literal"&gt;does not live long enough&lt;/tt&gt; that I
decided to ask for help, and the &lt;a class="reference external" href="http://stackoverflow.com/q/38023291/321731"&gt;solution to my problem&lt;/a&gt; was
actually quite simple.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/hyperium/hyper/pull/846"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/lettre/lettre/pull/76"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/pull/27"&gt;fixes&lt;/a&gt; to various projects, and reported &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/issues/26"&gt;an
issue&lt;/a&gt; that promptly fixed on yet another. &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34584"&gt;I also ran rustfmt&lt;/a&gt; on
some part of Rust.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-06-17</title><link href="http://tshepang.net/rust-week-of-2016-06-17" rel="alternate"></link><published>2016-06-23T00:00:00+02:00</published><updated>2016-06-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-06-23:/rust-week-of-2016-06-17</id><summary type="html">&lt;p&gt;I found &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini"&gt;a so nice library&lt;/a&gt; that handles a favorite file format of
mine, INI. I even made &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/pull/25"&gt;some tiny doc improvements for it&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I was surprised to find that &lt;a class="reference external" href="http://stackoverflow.com/q/37918670/321731"&gt;there is no easy/clear way to interleave
stdout and stderr with the standard library&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I found &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini"&gt;a so nice library&lt;/a&gt; that handles a favorite file format of
mine, INI. I even made &lt;a class="reference external" href="https://github.com/zonyitoo/rust-ini/pull/25"&gt;some tiny doc improvements for it&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I was surprised to find that &lt;a class="reference external" href="http://stackoverflow.com/q/37918670/321731"&gt;there is no easy/clear way to interleave
stdout and stderr with the standard library&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-06-10</title><link href="http://tshepang.net/rust-week-of-2016-06-10" rel="alternate"></link><published>2016-06-16T00:00:00+02:00</published><updated>2016-06-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-06-16:/rust-week-of-2016-06-10</id><summary type="html">&lt;p&gt;I was made sad by the complexity of involving STDIN when using
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::process&lt;/span&gt;&lt;/tt&gt; module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;o_to_0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;Command&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;Stdio&lt;/span&gt;::&lt;span class="n"&gt;piped&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_mut&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;stdin …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I was made sad by the complexity of involving STDIN when using
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::process&lt;/span&gt;&lt;/tt&gt; module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;o_to_0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;Command&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;Stdio&lt;/span&gt;::&lt;span class="n"&gt;piped&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_mut&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_bytes&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I wonder if this can be more easy, in other languages and/or libraries.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/uutils/coreutils/pull/899"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34314"&gt;submissions&lt;/a&gt;, and gave some commentary &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34114"&gt;on another&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-06-03</title><link href="http://tshepang.net/rust-week-of-2016-06-03" rel="alternate"></link><published>2016-06-09T00:00:00+02:00</published><updated>2016-06-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-06-09:/rust-week-of-2016-06-03</id><summary type="html">&lt;p&gt;I did more Rust coding than most weeks this time around, busy with the
project &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-05-27"&gt;I mentioned last week&lt;/a&gt;. My favorite parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I love the fact that &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs"&gt;inotify-rs&lt;/a&gt; (&lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-07-31"&gt;first mention&lt;/a&gt;) collects
events in the background, so that when you are done with whatever
task you were busy with, you can …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I did more Rust coding than most weeks this time around, busy with the
project &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-05-27"&gt;I mentioned last week&lt;/a&gt;. My favorite parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I love the fact that &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs"&gt;inotify-rs&lt;/a&gt; (&lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-07-31"&gt;first mention&lt;/a&gt;) collects
events in the background, so that when you are done with whatever
task you were busy with, you can check if there is anything new to
act upon (e.g. a new file was created in a watched directory). This
allows one to do away with using threads, reducing code complexity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Rust error handling is so nice, and forces one to think better about
code. As an example, when you doing any I/O, you mostly want to do
that in a separate function so that you can return a &lt;tt class="docutils literal"&gt;Result&lt;/tt&gt;
type, something like &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Result&amp;lt;(),&lt;/span&gt; &lt;span class="pre"&gt;std::io::Error&amp;gt;&lt;/span&gt;&lt;/tt&gt;. This forces you
to isolate just the I/O handling part from the other parts of the
logic, where you'd for maybe just want to return a &lt;tt class="docutils literal"&gt;bool&lt;/tt&gt; type.
In my case, I would not get any I/O error, but I would get failure
from running an external process (see &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::process&lt;/span&gt;&lt;/tt&gt; module) where
the exit status was not 0. That meant I/O error failure case and the
process error case had to be handled in separate places.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In the example I gave above, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Result&amp;lt;(),&lt;/span&gt; &lt;span class="pre"&gt;std::io::Error&amp;gt;&lt;/span&gt;&lt;/tt&gt;, this
means that we don't care about the success return value. On the
calling side, we have an option to use a &lt;tt class="docutils literal"&gt;match&lt;/tt&gt; statement to
handle the result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do_something_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a convenient syntax to deal with such case, where you don't
care about one of values... &lt;tt class="docutils literal"&gt;if let&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;do_something_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So elegant!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34185"&gt;just one contribution&lt;/a&gt; this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-05-27</title><link href="http://tshepang.net/rust-week-of-2016-05-27" rel="alternate"></link><published>2016-06-02T00:00:00+02:00</published><updated>2016-06-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-06-02:/rust-week-of-2016-05-27</id><summary type="html">&lt;p&gt;Being a fanboy, I found the discussion &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/4kqhqz"&gt;Why aren't you using Rust at
work?&lt;/a&gt; rather depressing. It's also relevant to me since I am
currently writing some internal tool at work, and wonder how far it
will go before re-writing in something &lt;em&gt;more acceptable&lt;/em&gt;, like
Python. To be fair, there …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Being a fanboy, I found the discussion &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/4kqhqz"&gt;Why aren't you using Rust at
work?&lt;/a&gt; rather depressing. It's also relevant to me since I am
currently writing some internal tool at work, and wonder how far it
will go before re-writing in something &lt;em&gt;more acceptable&lt;/em&gt;, like
Python. To be fair, there was also &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/4kqhqz//d3hx9l0"&gt;some great praise&lt;/a&gt; of the ecosystem.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I read the intro of &lt;a class="reference external" href="https://github.com/sfackler/rust-postgres/blob/master/README.md"&gt;rust-postgres&lt;/a&gt; and even made &lt;a class="reference external" href="https://github.com/sfackler/rust-postgres/pull/186"&gt;a small
contribution&lt;/a&gt;. I also made a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/34033"&gt;doc contribution&lt;/a&gt; to stdlib.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I was surprised that &lt;a class="reference external" href="http://stackoverflow.com/questions/37550208"&gt;there is no Rust set type that preserves
insertion order&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Something I learned about running system commands, imagine you had a
complex command like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh some-hostname &amp;quot;uname --all &amp;amp;&amp;amp; free --human&amp;quot;
&lt;/pre&gt;
&lt;p&gt;Running such in Rust would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;process&lt;/span&gt;::&lt;span class="n"&gt;Command&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ssh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some-hostname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;uname --all &amp;amp;&amp;amp; free --human&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;problem&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-05-20</title><link href="http://tshepang.net/rust-week-of-2016-05-20" rel="alternate"></link><published>2016-05-26T00:00:00+02:00</published><updated>2016-05-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-05-26:/rust-week-of-2016-05-20</id><summary type="html">&lt;p&gt;I just did two submissions, which also happen to be my first
contributions to the respective projects,
&lt;a class="reference external" href="https://github.com/uutils/coreutils/pull/888"&gt;Rust coreutils&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/danburkert/fs2-rs/pull/7"&gt;fs2&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I just did two submissions, which also happen to be my first
contributions to the respective projects,
&lt;a class="reference external" href="https://github.com/uutils/coreutils/pull/888"&gt;Rust coreutils&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/danburkert/fs2-rs/pull/7"&gt;fs2&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-05-13</title><link href="http://tshepang.net/rust-week-of-2016-05-13" rel="alternate"></link><published>2016-05-19T00:00:00+02:00</published><updated>2016-05-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-05-19:/rust-week-of-2016-05-13</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33633"&gt;Just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33634"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33635"&gt;changes&lt;/a&gt; this week, including &lt;a class="reference external" href="https://github.com/rust-lang/blog.rust-lang.org/pull/98"&gt;one for the blog&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33633"&gt;Just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33634"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33635"&gt;changes&lt;/a&gt; this week, including &lt;a class="reference external" href="https://github.com/rust-lang/blog.rust-lang.org/pull/98"&gt;one for the blog&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-05-06</title><link href="http://tshepang.net/rust-week-of-2016-05-06" rel="alternate"></link><published>2016-05-12T00:00:00+02:00</published><updated>2016-05-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-05-12:/rust-week-of-2016-05-06</id><summary type="html">&lt;p&gt;I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33603"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33604"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33605"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33606"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33603"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33604"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33605"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33606"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-04-29</title><link href="http://tshepang.net/rust-week-of-2016-04-29" rel="alternate"></link><published>2016-05-05T00:00:00+02:00</published><updated>2016-05-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-05-05:/rust-week-of-2016-04-29</id><summary type="html">&lt;p&gt;Still not serious, so I only managed &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33442"&gt;one submission&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Still not serious, so I only managed &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33442"&gt;one submission&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-04-22</title><link href="http://tshepang.net/rust-week-of-2016-04-22" rel="alternate"></link><published>2016-04-28T00:00:00+02:00</published><updated>2016-04-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-04-28:/rust-week-of-2016-04-22</id><summary type="html">&lt;p&gt;Because I'm still not serious, I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33265"&gt;just one&lt;/a&gt; (desperate)
submission this week :(&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Because I'm still not serious, I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33265"&gt;just one&lt;/a&gt; (desperate)
submission this week :(&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-04-15</title><link href="http://tshepang.net/rust-week-of-2016-04-15" rel="alternate"></link><published>2016-04-21T00:00:00+02:00</published><updated>2016-04-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-04-21:/rust-week-of-2016-04-15</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33141"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33142"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33143"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33141"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33142"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/33143"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-04-08</title><link href="http://tshepang.net/rust-week-of-2016-04-08" rel="alternate"></link><published>2016-04-14T00:00:00+02:00</published><updated>2016-04-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-04-14:/rust-week-of-2016-04-08</id><summary type="html">&lt;p&gt;My only contribution is this &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32964"&gt;1-character change&lt;/a&gt;. I need to get
serious about this.&lt;/p&gt;
&lt;p&gt;In other news, I was surprised by the success of &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/719556389828476929"&gt;this tweet of mine&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
title of the moment: Learning Rust With Entirely Too Many Linked Lists
&lt;a class="reference external" href="http://cglab.ca/~abeinges/blah/too-many-lists/book"&gt;http://cglab.ca/~abeinges/blah/too-many-lists/book&lt;/a&gt; … #rustlang&lt;/blockquote&gt;
&lt;p&gt;It has …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My only contribution is this &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32964"&gt;1-character change&lt;/a&gt;. I need to get
serious about this.&lt;/p&gt;
&lt;p&gt;In other news, I was surprised by the success of &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/719556389828476929"&gt;this tweet of mine&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
title of the moment: Learning Rust With Entirely Too Many Linked Lists
&lt;a class="reference external" href="http://cglab.ca/~abeinges/blah/too-many-lists/book"&gt;http://cglab.ca/~abeinges/blah/too-many-lists/book&lt;/a&gt; … #rustlang&lt;/blockquote&gt;
&lt;p&gt;It has over 6000 views, according to Twitter analytics.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-04-01</title><link href="http://tshepang.net/rust-week-of-2016-04-01" rel="alternate"></link><published>2016-04-06T00:00:00+02:00</published><updated>2016-04-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-04-06:/rust-week-of-2016-04-01</id><summary type="html">&lt;p&gt;I submitted just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32761"&gt;one change&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32761"&gt;one change&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-03-25</title><link href="http://tshepang.net/rust-week-of-2016-03-25" rel="alternate"></link><published>2016-03-30T00:00:00+02:00</published><updated>2016-03-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-03-30:/rust-week-of-2016-03-25</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32603"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32605"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32606"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32607"&gt;changes&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32608"&gt;this&lt;/a&gt; time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32603"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32605"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32606"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32607"&gt;changes&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32608"&gt;this&lt;/a&gt; time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-03-18</title><link href="http://tshepang.net/rust-week-of-2016-03-18" rel="alternate"></link><published>2016-03-23T00:00:00+02:00</published><updated>2016-03-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-03-23:/rust-week-of-2016-03-18</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32440"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32441"&gt;changes&lt;/a&gt; this time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32440"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32441"&gt;changes&lt;/a&gt; this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-03-11</title><link href="http://tshepang.net/rust-week-of-2016-03-11" rel="alternate"></link><published>2016-03-17T00:00:00+02:00</published><updated>2016-03-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-03-17:/rust-week-of-2016-03-11</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang-nursery/glob/pull/49"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/tar-rs/pull/59"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang-nursery/glob/pull/49"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/alexcrichton/tar-rs/pull/59"&gt;contributions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-03-04</title><link href="http://tshepang.net/rust-week-of-2016-03-04" rel="alternate"></link><published>2016-03-10T00:00:00+02:00</published><updated>2016-03-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-03-10:/rust-week-of-2016-03-04</id><summary type="html">&lt;p&gt;I was hoping to do better than &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-02-26"&gt;last week&lt;/a&gt;, but it was even
worse... &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/2467"&gt;just one contribution&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I was hoping to do better than &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2016-02-26"&gt;last week&lt;/a&gt;, but it was even
worse... &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/2467"&gt;just one contribution&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-02-26</title><link href="http://tshepang.net/rust-week-of-2016-02-26" rel="alternate"></link><published>2016-03-03T00:00:00+02:00</published><updated>2016-03-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-03-03:/rust-week-of-2016-02-26</id><summary type="html">&lt;p&gt;I enjoyed &lt;a class="reference external" href="https://llogiq.github.io/2016/02/28/java-rust.html"&gt;Comparing Rust and Java&lt;/a&gt;, the first such comparison I
remember reading. It's also special in that the author hates none of
the two.&lt;/p&gt;
&lt;p&gt;In terms of contributions, I am embarassed that I submitted a mere
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32028"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32029"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I enjoyed &lt;a class="reference external" href="https://llogiq.github.io/2016/02/28/java-rust.html"&gt;Comparing Rust and Java&lt;/a&gt;, the first such comparison I
remember reading. It's also special in that the author hates none of
the two.&lt;/p&gt;
&lt;p&gt;In terms of contributions, I am embarassed that I submitted a mere
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32028"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/32029"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-02-19</title><link href="http://tshepang.net/rust-week-of-2016-02-19" rel="alternate"></link><published>2016-02-25T00:00:00+02:00</published><updated>2016-02-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-02-25:/rust-week-of-2016-02-19</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31893"&gt;Just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31894"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31896"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31897"&gt;submissions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31893"&gt;Just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31894"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31896"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31897"&gt;submissions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-02-12</title><link href="http://tshepang.net/rust-week-of-2016-02-12" rel="alternate"></link><published>2016-02-18T00:00:00+02:00</published><updated>2016-02-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-02-18:/rust-week-of-2016-02-12</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31762"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31763"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31764"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31765"&gt;changes&lt;/a&gt; this time.
I also enjoyed reading &lt;a class="reference external" href="http://www.matusiak.eu/numerodix/blog/2016/1/10/two-weeks-rust/"&gt;Two Weeks of Rust&lt;/a&gt;, a blog post resulting
from building something non-trivial using the language.&lt;/p&gt;
&lt;p&gt;In terms of learning, I've always been wondering why one does not need
&lt;tt class="docutils literal"&gt;mut&lt;/tt&gt; when reading values from an iterator via a &lt;tt class="docutils literal"&gt;for loop …&lt;/tt&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31762"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31763"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31764"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31765"&gt;changes&lt;/a&gt; this time.
I also enjoyed reading &lt;a class="reference external" href="http://www.matusiak.eu/numerodix/blog/2016/1/10/two-weeks-rust/"&gt;Two Weeks of Rust&lt;/a&gt;, a blog post resulting
from building something non-trivial using the language.&lt;/p&gt;
&lt;p&gt;In terms of learning, I've always been wondering why one does not need
&lt;tt class="docutils literal"&gt;mut&lt;/tt&gt; when reading values from an iterator via a &lt;tt class="docutils literal"&gt;for loop&lt;/tt&gt; , but
does not when reading them using &lt;tt class="docutils literal"&gt;next&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;env&lt;/span&gt;::&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// iterator over CLI arguments&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// versus&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;env&lt;/span&gt;::&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// iterator over CLI arguments&lt;/span&gt;
&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I think with the &lt;tt class="docutils literal"&gt;for loop&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;it&lt;/tt&gt; cannot be used
anymore, and that's why it can get away with being immutable. I'm not
100% yet... this feels like a lousy explanation.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-02-05</title><link href="http://tshepang.net/rust-week-of-2016-02-05" rel="alternate"></link><published>2016-02-11T00:00:00+02:00</published><updated>2016-02-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-02-11:/rust-week-of-2016-02-05</id><summary type="html">&lt;p&gt;As was the case with so many of the previous entries in this series,
I didn't do much this week, submitting a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31582"&gt;mere&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31584"&gt;three&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31585"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As was the case with so many of the previous entries in this series,
I didn't do much this week, submitting a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31582"&gt;mere&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31584"&gt;three&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31585"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>about 'developer of note' series</title><link href="http://tshepang.net/about-developer-of-note-series" rel="alternate"></link><published>2016-02-04T23:58:30+02:00</published><updated>2016-02-04T23:58:30+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-02-04:/about-developer-of-note-series</id><summary type="html">&lt;p&gt;I respect a lot of software developers, but many of those are not
going to have an entry in &lt;a class="reference external" href="http://tshepang.net/tags#developer-of-note-ref"&gt;this series&lt;/a&gt;, and not because they are
lesser in my eyes... I need a news item that would trigger a
post.  Thing is, if you write about someone, you actually need …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I respect a lot of software developers, but many of those are not
going to have an entry in &lt;a class="reference external" href="http://tshepang.net/tags#developer-of-note-ref"&gt;this series&lt;/a&gt;, and not because they are
lesser in my eyes... I need a news item that would trigger a
post.  Thing is, if you write about someone, you actually need to have
some content (duh!), and saying &amp;quot;Guide van Rossum rocks for creating
Python, and am grateful!&amp;quot;  is simply not enough, hence a need for a
trigger.  In fact, I used to call this series &lt;em&gt;developer of the
moment&lt;/em&gt;, but at some point felt that the new name is more fitting,
especially since a few of these developers
generated some new triggers along the way.&lt;/p&gt;
</content><category term="developer-of-note"></category></entry><entry><title>Rust week of 2016-01-29</title><link href="http://tshepang.net/rust-week-of-2016-01-29" rel="alternate"></link><published>2016-02-04T00:00:00+02:00</published><updated>2016-02-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-02-04:/rust-week-of-2016-01-29</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31411"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31412"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31413"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31415"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31411"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31412"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31413"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31415"&gt;changes&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-01-22</title><link href="http://tshepang.net/rust-week-of-2016-01-22" rel="alternate"></link><published>2016-01-27T00:00:00+02:00</published><updated>2016-01-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-01-27:/rust-week-of-2016-01-22</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31241"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31245"&gt;a few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31246"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31247"&gt;changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/31242"&gt;requested clarification&lt;/a&gt; on one documentation issue&lt;/li&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31244"&gt;results of running rustfmt&lt;/a&gt;  on a bit of code&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31241"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31245"&gt;a few&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31246"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31247"&gt;changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/31242"&gt;requested clarification&lt;/a&gt; on one documentation issue&lt;/li&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31244"&gt;results of running rustfmt&lt;/a&gt;  on a bit of code&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Asus Zenbook UX305FA</title><link href="http://tshepang.net/asus-zenbook-ux305fa" rel="alternate"></link><published>2016-01-21T00:00:00+02:00</published><updated>2016-01-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-01-21:/asus-zenbook-ux305fa</id><summary type="html">&lt;p&gt;On 2015-12-14, I got me the UX305. It's the base level model in the
range, with 4GB RAM, 128GB SSD, an FHD screen, and Intel Core M
CPU (M-5Y10c). It it great value at R10k ($600 in USA), so it didn't
feel too much of an indulgence, given I still …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On 2015-12-14, I got me the UX305. It's the base level model in the
range, with 4GB RAM, 128GB SSD, an FHD screen, and Intel Core M
CPU (M-5Y10c). It it great value at R10k ($600 in USA), so it didn't
feel too much of an indulgence, given I still have the &lt;a class="reference external" href="http://tshepang.net/sony-vaio-pro-13-svp13212sgbi"&gt;Vaio Pro
13&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Like the older laptop, I had to change 2 lines in /usr/share/alsa/alsa.conf:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
defaults.ctl.card 1
defaults.pcm.card 1
&lt;/pre&gt;
&lt;p&gt;What makes the Vaio Pro 13 better:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The charger does not have a USB charging port&lt;/li&gt;
&lt;li&gt;The laptop is less pretty (so boring), and I'm not a fan of the
purple look&lt;/li&gt;
&lt;li&gt;The power button is not a button, but one of the keys on the
keyboard, which makes it too easy to press by mistake... happened to
me a few times&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;Insert&lt;/tt&gt; key is hidden behind the &lt;tt class="docutils literal"&gt;Fn&lt;/tt&gt; key, which is
awkward since I use the Ctrl+Shift+Insert combo to (middle-)paste&lt;/li&gt;
&lt;li&gt;The SD card slot is not full-depth, so you will see the SD card
(adaptor) protrude from the side&lt;/li&gt;
&lt;li&gt;I'm used to the charging port being on the left&lt;/li&gt;
&lt;li&gt;No keyboard back-light&lt;/li&gt;
&lt;li&gt;The SSD is not as fast, and so is the CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given all above, this is overall a better laptop:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No (noisy) fan&lt;/li&gt;
&lt;li&gt;Gentle corners (though a bit too gentle, making this a less pretty
laptop)&lt;/li&gt;
&lt;li&gt;Power consumption is very low, and I could easily get 8 hours of battery
life with a moderate workload&lt;/li&gt;
&lt;li&gt;I loves the touchpad: it's more smooth and large&lt;/li&gt;
&lt;li&gt;The keyboard also feels a lot better; it's such pleasure to use!&lt;/li&gt;
&lt;li&gt;The body is also a lot more rigid, so no annoying flexibility at the
bottom of the touchpad. The rigidity also ensures that there are no
keyboard marks on the screen.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="hardware"></category></entry><entry><title>Rust week of 2016-01-15</title><link href="http://tshepang.net/rust-week-of-2016-01-15" rel="alternate"></link><published>2016-01-15T00:00:00+02:00</published><updated>2016-01-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-01-15:/rust-week-of-2016-01-15</id><summary type="html">&lt;p&gt;I discovered that &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30920"&gt;a change&lt;/a&gt; I made last week didn't work, so
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30940"&gt;submitted something that works&lt;/a&gt; this time around.&lt;/p&gt;
&lt;p&gt;I also &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31088"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31090"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31092"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31093"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I discovered that &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30920"&gt;a change&lt;/a&gt; I made last week didn't work, so
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30940"&gt;submitted something that works&lt;/a&gt; this time around.&lt;/p&gt;
&lt;p&gt;I also &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31088"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31090"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31092"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/31093"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-01-08</title><link href="http://tshepang.net/rust-week-of-2016-01-08" rel="alternate"></link><published>2016-01-14T00:00:00+02:00</published><updated>2016-01-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-01-14:/rust-week-of-2016-01-08</id><summary type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30909"&gt;submitted&lt;/a&gt; a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30910"&gt;number&lt;/a&gt; of &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30911"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30912"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30914"&gt;changes&lt;/a&gt;. I am
particularly proud of the code &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30920"&gt;submission&lt;/a&gt; I made to rustdoc to strip
away the annoying whitespace appended before the final closing brace.&lt;/p&gt;
&lt;p&gt;In other news, Rust by Example has &lt;a class="reference external" href="http://rustbyexample.com/std/box.html"&gt;a very illustrative example&lt;/a&gt;
regarding Box type and size …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30909"&gt;submitted&lt;/a&gt; a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30910"&gt;number&lt;/a&gt; of &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30911"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30912"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30914"&gt;changes&lt;/a&gt;. I am
particularly proud of the code &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30920"&gt;submission&lt;/a&gt; I made to rustdoc to strip
away the annoying whitespace appended before the final closing brace.&lt;/p&gt;
&lt;p&gt;In other news, Rust by Example has &lt;a class="reference external" href="http://rustbyexample.com/std/box.html"&gt;a very illustrative example&lt;/a&gt;
regarding Box type and size of memory usage of data, and it led me to
submit &lt;a class="reference external" href="https://github.com/rust-lang/rust-by-example/pull/696"&gt;a tiny improvement&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2016-01-01</title><link href="http://tshepang.net/rust-week-of-2016-01-01" rel="alternate"></link><published>2016-01-05T00:00:00+02:00</published><updated>2016-01-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2016-01-05:/rust-week-of-2016-01-01</id><summary type="html">&lt;p&gt;I found &lt;a class="reference external" href="https://internals.rust-lang.org/t/thoughts-on-rust-stdlib-and-c-interfacing/3036"&gt;an interesting discussion&lt;/a&gt; regarding trade-offs of using C
libraries instead of writing ones in Rust. I also submitted one doc
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30702"&gt;change&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/rust-lang/rust-www/pull/202"&gt;helped review&lt;/a&gt; the new Rust FAQ..&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I found &lt;a class="reference external" href="https://internals.rust-lang.org/t/thoughts-on-rust-stdlib-and-c-interfacing/3036"&gt;an interesting discussion&lt;/a&gt; regarding trade-offs of using C
libraries instead of writing ones in Rust. I also submitted one doc
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30702"&gt;change&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/rust-lang/rust-www/pull/202"&gt;helped review&lt;/a&gt; the new Rust FAQ..&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>what I like about Rust</title><link href="http://tshepang.net/what-i-like-about-rust" rel="alternate"></link><published>2015-12-31T13:16:46+02:00</published><updated>2015-12-31T13:16:46+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-31:/what-i-like-about-rust</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Ambitious: the aim of being memory safe without the use of a garbage
collector, allowing it to achieve C++ execution speeds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Naming conventions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;name_with_underscores&lt;/tt&gt; for variable and function names&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HttpRequest&lt;/tt&gt; instead of &lt;tt class="docutils literal"&gt;HTTPRequest&lt;/tt&gt; for type names&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Error reporting: compile errors are the best I've seen (though I've
only really seen …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Ambitious: the aim of being memory safe without the use of a garbage
collector, allowing it to achieve C++ execution speeds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Naming conventions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;name_with_underscores&lt;/tt&gt; for variable and function names&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;HttpRequest&lt;/tt&gt; instead of &lt;tt class="docutils literal"&gt;HTTPRequest&lt;/tt&gt; for type names&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Error reporting: compile errors are the best I've seen (though I've
only really seen those of C and C++); they are even color-coded!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;2 short keywords:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;fn&lt;/tt&gt; for function declarations&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;use&lt;/tt&gt;, instead of &lt;tt class="docutils literal"&gt;using&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;import&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I love that I don't need to add (the tedious) parenthesis around the
&lt;em&gt;condition expression&lt;/em&gt; in an &lt;em&gt;if&lt;/em&gt;, &lt;em&gt;while&lt;/em&gt;, and &lt;em&gt;match&lt;/em&gt; statements:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// always executes&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The semicolon rule: I initially found it surprising that omitting a
semicolon after a value is shorthand for returning. I appreciate it
now... it's quite nifty, and I in fact now find &lt;tt class="docutils literal"&gt;return&lt;/tt&gt;
statements ugly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Traits: they are an elegant way of providing abstract interfaces,
and are therefore used in generic programming. As an example, a
function can be made to accept different data types, so long as
those types implement the given trait (or traits). Gorgeous!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The &lt;tt class="docutils literal"&gt;match&lt;/tt&gt; statement is kool: exhaustiveness check, no
fall-through, and nice syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Allowing a trailing comma after a list of items, which is really
great for copy-pasting and diffs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Packaging conventions: by default, the build tool, Cargo, ensures that all
build sources (which may include documentation) are placed in &lt;cite&gt;src/&lt;/cite&gt;
in the root of a source distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A fast-paced and time-based release cycle: a stable release will be
made every 6 weeks, which is very ambitious for a programming
language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Development process:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No one, including the Core Team, pushes anything to the Rust tree. Each
person gets their changes reviewed first, and they mostly get
approved by someone else.&lt;/li&gt;
&lt;li&gt;Merging the changes to the tree is nearly always done via a continuous
integration system, which first ensures that each change passes all
tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Allows one to redefine variables, even with different types:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ten&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is convenient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The amount of iterations its design went through during its pre-1.0
development, which included numerous breaking changes,
was... impressive. That's an indication that what resulted is a far
better design than we could have had. The sheer amount of effort
taken, which was such a unique experience for me, makes me feel
grateful (I watched the activity for about a year before 1.0 was
released). I am also grateful for the resilient users who kept up
with the pain of the frequent changes, for they helped keep the
language relevant and exciting, while also providing feedback.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-12-25</title><link href="http://tshepang.net/rust-week-of-2015-12-25" rel="alternate"></link><published>2015-12-30T00:00:00+02:00</published><updated>2015-12-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-30:/rust-week-of-2015-12-25</id><summary type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30644"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30645"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30648"&gt;submissions&lt;/a&gt; this time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30644"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30645"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30648"&gt;submissions&lt;/a&gt; this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-12-18</title><link href="http://tshepang.net/rust-week-of-2015-12-18" rel="alternate"></link><published>2015-12-24T00:00:00+02:00</published><updated>2015-12-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-24:/rust-week-of-2015-12-18</id><summary type="html">&lt;p&gt;I submitted a &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/2226"&gt;small change&lt;/a&gt; to Cargo.
I also submitted two &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30537"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30546"&gt;changes&lt;/a&gt; for Rust.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted a &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/2226"&gt;small change&lt;/a&gt; to Cargo.
I also submitted two &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30537"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30546"&gt;changes&lt;/a&gt; for Rust.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-12-11</title><link href="http://tshepang.net/rust-week-of-2015-12-11" rel="alternate"></link><published>2015-12-17T00:00:00+02:00</published><updated>2015-12-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-17:/rust-week-of-2015-12-11</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30437"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30441"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30442"&gt;tiny&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30443"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30444"&gt;fixes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30437"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30441"&gt;five&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30442"&gt;tiny&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30443"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30444"&gt;fixes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-12-04</title><link href="http://tshepang.net/rust-week-of-2015-12-04" rel="alternate"></link><published>2015-12-09T00:00:00+02:00</published><updated>2015-12-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-09:/rust-week-of-2015-12-04</id><summary type="html">&lt;p&gt;I submitted two &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30272"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30274"&gt;changes&lt;/a&gt;, and reviewed &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30273"&gt;one&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted two &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30272"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30274"&gt;changes&lt;/a&gt;, and reviewed &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30273"&gt;one&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-11-27</title><link href="http://tshepang.net/rust-week-of-2015-11-27" rel="alternate"></link><published>2015-12-03T00:00:00+02:00</published><updated>2015-12-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-12-03:/rust-week-of-2015-11-27</id><summary type="html">&lt;p&gt;I added &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30188"&gt;missing&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30190"&gt;examples&lt;/a&gt; to stdlib documentation.
I also learned a bit about &lt;a class="reference external" href="https://github.com/lifthrasiir/rust-chrono"&gt;Chrono&lt;/a&gt;, seemingly the most comprehensive
date and time library for Rust. I used to determine what the next
release date for Rust is, using the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;NaiveDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Local&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I added &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30188"&gt;missing&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30190"&gt;examples&lt;/a&gt; to stdlib documentation.
I also learned a bit about &lt;a class="reference external" href="https://github.com/lifthrasiir/rust-chrono"&gt;Chrono&lt;/a&gt;, seemingly the most comprehensive
date and time library for Rust. I used to determine what the next
release date for Rust is, using the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;NaiveDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Local&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Rust 1.0 release&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NaiveDate&lt;/span&gt;::&lt;span class="n"&gt;from_ymd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// 1.0 was released on a Friday, but nowadays they happen Thursdays&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;release_date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checked_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;::&lt;span class="n"&gt;weeks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;::&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;release_date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Local&lt;/span&gt;::&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;naive_local&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;release_date&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-11-20</title><link href="http://tshepang.net/rust-week-of-2015-11-20" rel="alternate"></link><published>2015-11-25T00:00:00+02:00</published><updated>2015-11-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-11-25:/rust-week-of-2015-11-20</id><summary type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30061"&gt;some improvements&lt;/a&gt; to new Rust stdlib APIS,
&lt;a class="reference external" href="https://doc.rust-lang.org/nightly/std/time/struct.Instant.html"&gt;std::time::Instant&lt;/a&gt; and &lt;a class="reference external" href="https://doc.rust-lang.org/nightly/std/time/struct.SystemTime.html"&gt;std::time::SystemTime&lt;/a&gt;.  I also
submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30065"&gt;the result&lt;/a&gt; of running rustfmt on
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;syntax::parser::lexer&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30061"&gt;some improvements&lt;/a&gt; to new Rust stdlib APIS,
&lt;a class="reference external" href="https://doc.rust-lang.org/nightly/std/time/struct.Instant.html"&gt;std::time::Instant&lt;/a&gt; and &lt;a class="reference external" href="https://doc.rust-lang.org/nightly/std/time/struct.SystemTime.html"&gt;std::time::SystemTime&lt;/a&gt;.  I also
submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/30065"&gt;the result&lt;/a&gt; of running rustfmt on
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;syntax::parser::lexer&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-11-13</title><link href="http://tshepang.net/rust-week-of-2015-11-13" rel="alternate"></link><published>2015-11-19T00:00:00+02:00</published><updated>2015-11-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-11-19:/rust-week-of-2015-11-13</id><summary type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/Aatch/ramp/pull/57"&gt;fixes&lt;/a&gt; for small nits on Ramp, the Rust Arithmetic in
Multiple Precision library. The project was brought to my attention
for being Crate of the Week (&lt;a class="reference external" href="http://this-week-in-rust.org/blog/2015/11/09/this-week-in-rust-104"&gt;source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I also &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/29936"&gt;asked for some clarity&lt;/a&gt; on a section in the
Reference named &lt;a class="reference external" href="https://doc.rust-lang.org/reference.html#behavior-considered-undefined"&gt;Behavior considered undefined&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/Aatch/ramp/pull/57"&gt;fixes&lt;/a&gt; for small nits on Ramp, the Rust Arithmetic in
Multiple Precision library. The project was brought to my attention
for being Crate of the Week (&lt;a class="reference external" href="http://this-week-in-rust.org/blog/2015/11/09/this-week-in-rust-104"&gt;source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I also &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/29936"&gt;asked for some clarity&lt;/a&gt; on a section in the
Reference named &lt;a class="reference external" href="https://doc.rust-lang.org/reference.html#behavior-considered-undefined"&gt;Behavior considered undefined&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-11-06</title><link href="http://tshepang.net/rust-week-of-2015-11-06" rel="alternate"></link><published>2015-11-10T00:00:00+02:00</published><updated>2015-11-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-11-10:/rust-week-of-2015-11-06</id><summary type="html">&lt;p&gt;I made some &lt;a class="reference external" href="https://github.com/rust-lang-nursery/rustc-serialize/pull/136"&gt;small improvements&lt;/a&gt; to rustc-serialize docs.  I also
looked at parsing JSON, and &lt;a class="reference external" href="https://doc.rust-lang.org/num/rustc_serialize/json/index.html"&gt;it doesn't look too bad&lt;/a&gt;.  I am mostly
interested in the &lt;tt class="docutils literal"&gt;from_str&lt;/tt&gt; method, and was surprised to find that
it's pretty much the same as that of (the more modern) &lt;a class="reference external" href="https://serde-rs.github.io/serde/serde_json/serde_json"&gt;serde_json&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made some &lt;a class="reference external" href="https://github.com/rust-lang-nursery/rustc-serialize/pull/136"&gt;small improvements&lt;/a&gt; to rustc-serialize docs.  I also
looked at parsing JSON, and &lt;a class="reference external" href="https://doc.rust-lang.org/num/rustc_serialize/json/index.html"&gt;it doesn't look too bad&lt;/a&gt;.  I am mostly
interested in the &lt;tt class="docutils literal"&gt;from_str&lt;/tt&gt; method, and was surprised to find that
it's pretty much the same as that of (the more modern) &lt;a class="reference external" href="https://serde-rs.github.io/serde/serde_json/serde_json"&gt;serde_json&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-10-30</title><link href="http://tshepang.net/rust-week-of-2015-10-30" rel="alternate"></link><published>2015-11-06T00:00:00+02:00</published><updated>2015-11-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-11-06:/rust-week-of-2015-10-30</id><summary type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29651"&gt;one submission&lt;/a&gt; this time around. Yep! I did however spend
time pondering the magical forward type inference that I first
experienced &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-05-29"&gt;back in May&lt;/a&gt;, this time sparked by &lt;a class="reference external" href="https://github.com/carllerche/mio/blob/getting-started/doc/getting-started.md#writing-the-echo-server"&gt;this example&lt;/a&gt;;
see this line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
let address = &amp;quot;0.0.0.0:6567&amp;quot;.parse().unwrap();
&lt;/pre&gt;
&lt;p&gt;You actually have to read further to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29651"&gt;one submission&lt;/a&gt; this time around. Yep! I did however spend
time pondering the magical forward type inference that I first
experienced &lt;a class="reference external" href="http://tshepang.net/rust-week-of-2015-05-29"&gt;back in May&lt;/a&gt;, this time sparked by &lt;a class="reference external" href="https://github.com/carllerche/mio/blob/getting-started/doc/getting-started.md#writing-the-echo-server"&gt;this example&lt;/a&gt;;
see this line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
let address = &amp;quot;0.0.0.0:6567&amp;quot;.parse().unwrap();
&lt;/pre&gt;
&lt;p&gt;You actually have to read further to figure the type that URL is going
to be parsed as:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
let server = TcpListener::bind(&amp;amp;address).unwrap();
&lt;/pre&gt;
&lt;p&gt;It would be less surprising if we had the following instead:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
let address = SocketAddr::from_str(&amp;quot;0.0.0.0:6567&amp;quot;.unwrap();
let server = TcpListener::bind(&amp;amp;address).unwrap();
&lt;/pre&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-10-23</title><link href="http://tshepang.net/rust-week-of-2015-10-23" rel="alternate"></link><published>2015-10-29T00:00:00+02:00</published><updated>2015-10-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-10-29:/rust-week-of-2015-10-23</id><summary type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29458"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29459"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29460"&gt;submissions&lt;/a&gt; this time around.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29458"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29459"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29460"&gt;submissions&lt;/a&gt; this time around.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-10-16</title><link href="http://tshepang.net/rust-week-of-2015-10-16" rel="alternate"></link><published>2015-10-21T00:00:00+02:00</published><updated>2015-10-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-10-21:/rust-week-of-2015-10-16</id><summary type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29197"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29198"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29199"&gt;changes&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29200"&gt;one&lt;/a&gt; rustfmt-assisted formatting.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29197"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29198"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29199"&gt;changes&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29200"&gt;one&lt;/a&gt; rustfmt-assisted formatting.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-10-09</title><link href="http://tshepang.net/rust-week-of-2015-10-09" rel="alternate"></link><published>2015-10-15T00:00:00+02:00</published><updated>2015-10-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-10-15:/rust-week-of-2015-10-09</id><summary type="html">&lt;p&gt;My laziness continues, so I got &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29058"&gt;only&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29059"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29060"&gt;submissions&lt;/a&gt; this time.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;My laziness continues, so I got &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29058"&gt;only&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29059"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/29060"&gt;submissions&lt;/a&gt; this time.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-10-02</title><link href="http://tshepang.net/rust-week-of-2015-10-02" rel="alternate"></link><published>2015-10-08T00:00:00+02:00</published><updated>2015-10-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-10-08:/rust-week-of-2015-10-02</id><summary type="html">&lt;p&gt;I submitted just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28905"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28906"&gt;changes&lt;/a&gt; this time around.
I also &lt;a class="reference external" href="https://internals.rust-lang.org/t/can-we-change-the-term-item-to-something-else/2752"&gt;complained&lt;/a&gt; about the language term, &lt;em&gt;item&lt;/em&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I submitted just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28905"&gt;two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28906"&gt;changes&lt;/a&gt; this time around.
I also &lt;a class="reference external" href="https://internals.rust-lang.org/t/can-we-change-the-term-item-to-something-else/2752"&gt;complained&lt;/a&gt; about the language term, &lt;em&gt;item&lt;/em&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-09-25</title><link href="http://tshepang.net/rust-week-of-2015-09-25" rel="alternate"></link><published>2015-09-30T00:00:00+02:00</published><updated>2015-09-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-09-30:/rust-week-of-2015-09-25</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I reviewed a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28743"&gt;doc submission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27273"&gt;My submission&lt;/a&gt; from over 2 months ago has finally been
accepted. Interesting how small changes can be so controversial.&lt;/li&gt;
&lt;li&gt;I submitted five &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28745"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28749"&gt;improvements&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28770"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28771"&gt;of&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28772"&gt;which&lt;/a&gt; I created a week or two ago&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I reviewed a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28743"&gt;doc submission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27273"&gt;My submission&lt;/a&gt; from over 2 months ago has finally been
accepted. Interesting how small changes can be so controversial.&lt;/li&gt;
&lt;li&gt;I submitted five &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28745"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28749"&gt;improvements&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28770"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28771"&gt;of&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28772"&gt;which&lt;/a&gt; I created a week or two ago&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-09-18</title><link href="http://tshepang.net/rust-week-of-2015-09-18" rel="alternate"></link><published>2015-09-24T00:00:00+02:00</published><updated>2015-09-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-09-24:/rust-week-of-2015-09-18</id><summary type="html">&lt;p&gt;As is normally the case, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28616"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28617"&gt;a&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28618"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28619"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28620"&gt;small&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28621"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28622"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As is normally the case, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28616"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28617"&gt;a&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28618"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28619"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28620"&gt;small&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28621"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28622"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-09-11</title><link href="http://tshepang.net/rust-week-of-2015-09-11" rel="alternate"></link><published>2015-09-17T00:00:00+02:00</published><updated>2015-09-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-09-17:/rust-week-of-2015-09-11</id><summary type="html">&lt;p&gt;As was the case with last week, I didn't put much effort this week...
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28470"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28471"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28473"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28474"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As was the case with last week, I didn't put much effort this week...
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28470"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28471"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28473"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28474"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-09-04</title><link href="http://tshepang.net/rust-week-of-2015-09-04" rel="alternate"></link><published>2015-09-10T00:00:00+02:00</published><updated>2015-09-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-09-10:/rust-week-of-2015-09-04</id><summary type="html">&lt;p&gt;As was the case with the past several weeks, I didn't put much effort
this week... &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28323"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28328"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28329"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As was the case with the past several weeks, I didn't put much effort
this week... &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28323"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28328"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28329"&gt;submissions&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-08-28</title><link href="http://tshepang.net/rust-week-of-2015-08-28" rel="alternate"></link><published>2015-09-03T00:00:00+02:00</published><updated>2015-09-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-09-03:/rust-week-of-2015-08-28</id><summary type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28207"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28209"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28210"&gt;very&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28212"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28213"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28214"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28207"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28209"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28210"&gt;very&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28212"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28213"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28214"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-08-21</title><link href="http://tshepang.net/rust-week-of-2015-08-21" rel="alternate"></link><published>2015-08-26T00:00:00+02:00</published><updated>2015-08-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-08-26:/rust-week-of-2015-08-21</id><summary type="html">&lt;p&gt;This time around, my contributions were just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28027"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28028"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28030"&gt;changes&lt;/a&gt;
and one &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28029"&gt;style fix&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This time around, my contributions were just &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28027"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28028"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28030"&gt;changes&lt;/a&gt;
and one &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/28029"&gt;style fix&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-08-14</title><link href="http://tshepang.net/rust-week-of-2015-08-14" rel="alternate"></link><published>2015-08-20T00:00:00+02:00</published><updated>2015-08-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-08-20:/rust-week-of-2015-08-14</id><summary type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27903"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27904"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27905"&gt;rather&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27920"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27921"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27922"&gt;improvements&lt;/a&gt;.
In addition, I also skimmed through some of &lt;a class="reference external" href="https://doc.rust-lang.org/nightly/nomicon"&gt;The Dark Arts of Advanced
and Unsafe Rust Programming&lt;/a&gt;, a pleasant read that's infused with
good humor.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As usual, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27903"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27904"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27905"&gt;rather&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27920"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27921"&gt;doc&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27922"&gt;improvements&lt;/a&gt;.
In addition, I also skimmed through some of &lt;a class="reference external" href="https://doc.rust-lang.org/nightly/nomicon"&gt;The Dark Arts of Advanced
and Unsafe Rust Programming&lt;/a&gt;, a pleasant read that's infused with
good humor.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-08-07</title><link href="http://tshepang.net/rust-week-of-2015-08-07" rel="alternate"></link><published>2015-08-13T00:00:00+02:00</published><updated>2015-08-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-08-13:/rust-week-of-2015-08-07</id><summary type="html">&lt;p&gt;This time around, I only submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27633"&gt;these&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27648"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27651"&gt;improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Elsewhere, I was surprised by the success of &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/630870886225154048"&gt;this Tweet of mine&lt;/a&gt;:&lt;/p&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
Am so glad #rustlang developers took API naming seriously. A good
example is the call to remove a file from the
filesystem... remove_file.&lt;/blockquote&gt;
&lt;p&gt;It got nearly 5000 Impressions. It's …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This time around, I only submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27633"&gt;these&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27648"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27651"&gt;improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Elsewhere, I was surprised by the success of &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/630870886225154048"&gt;this Tweet of mine&lt;/a&gt;:&lt;/p&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
Am so glad #rustlang developers took API naming seriously. A good
example is the call to remove a file from the
filesystem... remove_file.&lt;/blockquote&gt;
&lt;p&gt;It got nearly 5000 Impressions. It's likely to exceed &lt;a class="reference external" href="https://twitter.com/tshepang_dev/status/624783302193467392"&gt;the other
surprise success&lt;/a&gt;, which now got over 6000 Impressions.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-07-31</title><link href="http://tshepang.net/rust-week-of-2015-07-31" rel="alternate"></link><published>2015-08-06T00:00:00+02:00</published><updated>2015-08-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-08-06:/rust-week-of-2015-07-31</id><summary type="html">&lt;p&gt;I got to use &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs"&gt;inotify-rs&lt;/a&gt; for some task at work (first time I used
Rust for work, yay!), and I found it surprisingly easy to use. It's
not a very pretty API though, and I remember the Python API to be
horrible too. Maybe the nature of inotify disallows beauty …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I got to use &lt;a class="reference external" href="https://github.com/hannobraun/inotify-rs"&gt;inotify-rs&lt;/a&gt; for some task at work (first time I used
Rust for work, yay!), and I found it surprisingly easy to use. It's
not a very pretty API though, and I remember the Python API to be
horrible too. Maybe the nature of inotify disallows beauty, who knows.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I submitted these to the Rust tree:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27495"&gt;Follow idiom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27549"&gt;Be more specific&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27550"&gt;Add missing info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27552"&gt;Some miscellany&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-07-24</title><link href="http://tshepang.net/rust-week-of-2015-07-24" rel="alternate"></link><published>2015-08-01T00:00:00+02:00</published><updated>2015-08-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-08-01:/rust-week-of-2015-07-24</id><summary type="html">&lt;p&gt;I have been &lt;a class="reference external" href="https://internals.rust-lang.org/t/subteam-reports-2015-07-24/2397"&gt;given the honor&lt;/a&gt; of Friend of the Tree by a member of
the Rust Library &lt;a class="reference external" href="http://www.rust-lang.org/team"&gt;team&lt;/a&gt;. I never expected to be considered, given the
far greater work that previous recipients have done. Is kool stuff.&lt;/p&gt;
&lt;p&gt;Regarding my weekly contributions, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27273"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27274"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27276"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27398"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I have been &lt;a class="reference external" href="https://internals.rust-lang.org/t/subteam-reports-2015-07-24/2397"&gt;given the honor&lt;/a&gt; of Friend of the Tree by a member of
the Rust Library &lt;a class="reference external" href="http://www.rust-lang.org/team"&gt;team&lt;/a&gt;. I never expected to be considered, given the
far greater work that previous recipients have done. Is kool stuff.&lt;/p&gt;
&lt;p&gt;Regarding my weekly contributions, I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27273"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27274"&gt;just&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27276"&gt;four&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27398"&gt;changes&lt;/a&gt;.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-07-17</title><link href="http://tshepang.net/rust-week-of-2015-07-17" rel="alternate"></link><published>2015-07-18T00:00:00+02:00</published><updated>2015-07-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-07-18:/rust-week-of-2015-07-17</id><summary type="html">&lt;p&gt;I submitted these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27095"&gt;Tiny style fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27100"&gt;Better names for two variable bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27102"&gt;Improve some VecDeque examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;I submitted these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27095"&gt;Tiny style fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27100"&gt;Better names for two variable bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/27102"&gt;Improve some VecDeque examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-07-10</title><link href="http://tshepang.net/rust-week-of-2015-07-10" rel="alternate"></link><published>2015-07-11T00:00:00+02:00</published><updated>2015-07-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-07-11:/rust-week-of-2015-07-10</id><summary type="html">&lt;p&gt;I submitted these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26973"&gt;Two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26976"&gt;improvements&lt;/a&gt; to documentation that explains errors&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26979"&gt;removed&lt;/a&gt; some redundant info from I/O docs&lt;/li&gt;
&lt;li&gt;I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26974"&gt;this one&lt;/a&gt; last week, and forgot to submit it&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;I submitted these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26973"&gt;Two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26976"&gt;improvements&lt;/a&gt; to documentation that explains errors&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26979"&gt;removed&lt;/a&gt; some redundant info from I/O docs&lt;/li&gt;
&lt;li&gt;I did &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26974"&gt;this one&lt;/a&gt; last week, and forgot to submit it&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-07-03</title><link href="http://tshepang.net/rust-week-of-2015-07-03" rel="alternate"></link><published>2015-07-06T00:00:00+02:00</published><updated>2015-07-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-07-06:/rust-week-of-2015-07-03</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26785"&gt;made&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26786"&gt;a&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26787"&gt;bunch&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26788"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26789"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26791"&gt;rather&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26792"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26795"&gt;changes&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26796"&gt;to&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26800"&gt;the&lt;/a&gt; &lt;a class="reference external" href="http://doc.rust-lang.org/reference.html"&gt;Rust Reference&lt;/a&gt;, including &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26799"&gt;this bold one&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26808"&gt;another change&lt;/a&gt;, whose preparation forced me to learn more
closure stuff than I cared for:
&lt;strong&gt;FnOnce&lt;/strong&gt;, &lt;strong&gt;FnMut&lt;/strong&gt;, and &lt;strong&gt;Fn&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;I added some &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26814"&gt;examples&lt;/a&gt; of array usage to API docs&lt;/li&gt;
&lt;li&gt;I also …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26785"&gt;made&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26786"&gt;a&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26787"&gt;bunch&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26788"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26789"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26791"&gt;rather&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26792"&gt;small&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26795"&gt;changes&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26796"&gt;to&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26800"&gt;the&lt;/a&gt; &lt;a class="reference external" href="http://doc.rust-lang.org/reference.html"&gt;Rust Reference&lt;/a&gt;, including &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26799"&gt;this bold one&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I made &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26808"&gt;another change&lt;/a&gt;, whose preparation forced me to learn more
closure stuff than I cared for:
&lt;strong&gt;FnOnce&lt;/strong&gt;, &lt;strong&gt;FnMut&lt;/strong&gt;, and &lt;strong&gt;Fn&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;I added some &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26814"&gt;examples&lt;/a&gt; of array usage to API docs&lt;/li&gt;
&lt;li&gt;I also made &lt;a class="reference external" href="https://github.com/rust-lang/rfcs/pull/1189"&gt;some improvements&lt;/a&gt; to the RFC on coercions&lt;/li&gt;
&lt;li&gt;Back to the Reference, I made two &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26834"&gt;additional&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26835"&gt;improvements&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-06-26</title><link href="http://tshepang.net/rust-week-of-2015-06-26" rel="alternate"></link><published>2015-07-01T00:00:00+02:00</published><updated>2015-07-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-07-01:/rust-week-of-2015-06-26</id><summary type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1754"&gt;removed a sentence&lt;/a&gt; that is not needed from Cargo documentation.
I also added &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1755"&gt;ability to read from $EMAIL environment variable&lt;/a&gt; to the
&lt;tt class="docutils literal"&gt;cargo new&lt;/tt&gt; command, and &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1756"&gt;fixed a small issue&lt;/a&gt; in the test suite..&lt;/p&gt;
&lt;p&gt;In the Rust tree:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26621"&gt;fixed&lt;/a&gt; one oversight where someone missed removing some obsolete
doc …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1754"&gt;removed a sentence&lt;/a&gt; that is not needed from Cargo documentation.
I also added &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1755"&gt;ability to read from $EMAIL environment variable&lt;/a&gt; to the
&lt;tt class="docutils literal"&gt;cargo new&lt;/tt&gt; command, and &lt;a class="reference external" href="https://github.com/rust-lang/cargo/pull/1756"&gt;fixed a small issue&lt;/a&gt; in the test suite..&lt;/p&gt;
&lt;p&gt;In the Rust tree:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26621"&gt;fixed&lt;/a&gt; one oversight where someone missed removing some obsolete
doc and annotations while they were removing obsolete code&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26622"&gt;fixed&lt;/a&gt; some bad code indents&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26627"&gt;added&lt;/a&gt; an example for reading from stdin&lt;/li&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26724"&gt;removed&lt;/a&gt; a misleading sentence&lt;/li&gt;
&lt;li&gt;I then &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26725"&gt;fixed&lt;/a&gt; a typo&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-06-19</title><link href="http://tshepang.net/rust-week-of-2015-06-19" rel="alternate"></link><published>2015-06-23T00:00:00+02:00</published><updated>2015-06-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-06-23:/rust-week-of-2015-06-19</id><summary type="html">&lt;p&gt;Work done on &lt;a class="reference external" href="https://doc.rust-lang.org/book/documentation.html"&gt;the Documentation chapter&lt;/a&gt; of the official Rust book:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I submitted a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26506"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26508"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26509"&gt;changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I also found &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/26507"&gt;misuse of the word, *thing*&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elsewhere:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26514"&gt;some small fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I also &lt;a class="reference external" href="https://internals.rust-lang.org/t/lets-have-a-documentation-policy/2279"&gt;want Rust to have a documentation policy&lt;/a&gt;. This led to
being pointed to API conventions doc, which …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Work done on &lt;a class="reference external" href="https://doc.rust-lang.org/book/documentation.html"&gt;the Documentation chapter&lt;/a&gt; of the official Rust book:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I submitted a &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26506"&gt;number&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26508"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26509"&gt;changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I also found &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/26507"&gt;misuse of the word, *thing*&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elsewhere:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26514"&gt;some small fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I also &lt;a class="reference external" href="https://internals.rust-lang.org/t/lets-have-a-documentation-policy/2279"&gt;want Rust to have a documentation policy&lt;/a&gt;. This led to
being pointed to API conventions doc, which needed &lt;a class="reference external" href="https://github.com/rust-lang/rfcs/pull/1171"&gt;some markup fixes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Places that Go can't go</title><link href="http://tshepang.net/places-that-go-cant-go" rel="alternate"></link><published>2015-06-19T00:00:00+02:00</published><updated>2015-06-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-06-19:/places-that-go-cant-go</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;You know I think the things that Rust has to offer, particularly that
there are places that it can go that Go can't, or at least today in Go
you can't go easily... (interrupted with laughter)&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Unintentional humor from &lt;a class="reference external" href="http://devchat.tv/js-jabber/161-jsj-rust-with-david-herman"&gt;some podcast&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;You know I think the things that Rust has to offer, particularly that
there are places that it can go that Go can't, or at least today in Go
you can't go easily... (interrupted with laughter)&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Unintentional humor from &lt;a class="reference external" href="http://devchat.tv/js-jabber/161-jsj-rust-with-david-herman"&gt;some podcast&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="Rust"></category><category term="quote"></category><category term="humor"></category><category term="non-Rust"></category></entry><entry><title>Rust week of 2015-06-12</title><link href="http://tshepang.net/rust-week-of-2015-06-12" rel="alternate"></link><published>2015-06-18T00:00:00+02:00</published><updated>2015-06-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-06-18:/rust-week-of-2015-06-12</id><summary type="html">&lt;p&gt;I'm the documentation guy, so:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26259"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26260"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26261"&gt;changes&lt;/a&gt; to the API documentation&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26373"&gt;Two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26410"&gt;changes&lt;/a&gt; to the README (first time)&lt;/li&gt;
&lt;li&gt;One &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26367"&gt;change&lt;/a&gt; to the Style Guide (also first time)&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;I'm the documentation guy, so:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26259"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26260"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26261"&gt;changes&lt;/a&gt; to the API documentation&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26373"&gt;Two&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26410"&gt;changes&lt;/a&gt; to the README (first time)&lt;/li&gt;
&lt;li&gt;One &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26367"&gt;change&lt;/a&gt; to the Style Guide (also first time)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-06-05</title><link href="http://tshepang.net/rust-week-of-2015-06-05" rel="alternate"></link><published>2015-06-11T00:00:00+02:00</published><updated>2015-06-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-06-11:/rust-week-of-2015-06-05</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26105"&gt;a change&lt;/a&gt; to remove a sentence that is not clear in
the chapter on Generics in Rust Book.&lt;/li&gt;
&lt;li&gt;Reading the (excellent) &lt;a class="reference external" href="https://doc.rust-lang.org/reference.html#traits"&gt;Traits section of The Rust Reference&lt;/a&gt; led
me to submit the following improvements:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26111"&gt;One that removes jarring whitespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Two more for improving readability:&lt;ul&gt;
&lt;li&gt;One by &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26112"&gt;making use …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26105"&gt;a change&lt;/a&gt; to remove a sentence that is not clear in
the chapter on Generics in Rust Book.&lt;/li&gt;
&lt;li&gt;Reading the (excellent) &lt;a class="reference external" href="https://doc.rust-lang.org/reference.html#traits"&gt;Traits section of The Rust Reference&lt;/a&gt; led
me to submit the following improvements:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26111"&gt;One that removes jarring whitespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Two more for improving readability:&lt;ul&gt;
&lt;li&gt;One by &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26112"&gt;making use of bullets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Another by &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26113"&gt;avoiding needless abbreviations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet another &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26116"&gt;that adds a link&lt;/a&gt; to the wonderful treatment of the
trait concept. It was however not accepted, and replaced with &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26118"&gt;one
that adds the definition inline&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There was also &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/26195"&gt;a typo fix&lt;/a&gt; :)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-05-29</title><link href="http://tshepang.net/rust-week-of-2015-05-29" rel="alternate"></link><published>2015-05-30T00:00:00+02:00</published><updated>2015-05-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-05-30:/rust-week-of-2015-05-29</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I was surprised by the somewhat magical Rust type inference:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;assert_eq&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A more explicit &lt;tt class="docutils literal"&gt;parse&lt;/tt&gt; call would be
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;string.parse::&amp;lt;i32&amp;gt;()&lt;/span&gt;&lt;/tt&gt;, but the type to be parsed into is
inferred by the …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I was surprised by the somewhat magical Rust type inference:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;assert_eq&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A more explicit &lt;tt class="docutils literal"&gt;parse&lt;/tt&gt; call would be
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;string.parse::&amp;lt;i32&amp;gt;()&lt;/span&gt;&lt;/tt&gt;, but the type to be parsed into is
inferred by the &lt;tt class="docutils literal"&gt;0&lt;/tt&gt; that is returned in the &lt;tt class="docutils literal"&gt;Err(_)&lt;/tt&gt; arm of the
match, which is an i32. This is some far-reaching shit!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I submitted &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25912"&gt;changes&lt;/a&gt; to improve some of &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; documentaton.
I also &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25876"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25907"&gt;a&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25920"&gt;whole&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25922"&gt;bunch&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25923"&gt;of&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25936"&gt;smaller&lt;/a&gt;  &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25948"&gt;changes&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Linux threads are not deterministic</title><link href="http://tshepang.net/linux-threads-are-not-deterministic" rel="alternate"></link><published>2015-05-25T00:00:00+02:00</published><updated>2015-05-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-05-25:/linux-threads-are-not-deterministic</id><summary type="html">&lt;p&gt;By deterministic, I am referring to their scheduling. Here's an
example in Rust:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;sync&lt;/span&gt;::&lt;span class="n"&gt;mpsc&lt;/span&gt;::&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;thread_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;thread_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;::&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;move&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;t{} tx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;By deterministic, I am referring to their scheduling. Here's an
example in Rust:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;sync&lt;/span&gt;::&lt;span class="n"&gt;mpsc&lt;/span&gt;::&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;thread_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;thread_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;::&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;move&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;t{} tx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;thread_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rx from t{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What I'm doing there is create 4 child threads, from which I send messages
that are to be captured by the main thread.&lt;/p&gt;
&lt;p&gt;I built and ran it with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rustc --opt-level 0 main.rs &amp;amp;&amp;amp; ./main
&lt;/pre&gt;
&lt;p&gt;Following is output from one sample run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
t1 tx
t0 tx
t2 tx
t3 tx
rx from t1
rx from t0
rx from t3
rx from t2
&lt;/pre&gt;
&lt;p&gt;Following is what I get with another run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
t0 tx
t1 tx
rx from t1
t2 tx
rx from t2
t3 tx
rx from t3
rx from t0
&lt;/pre&gt;
&lt;p&gt;If it was all deterministic (i.e. predictable), &lt;tt class="docutils literal"&gt;t0 tx&lt;/tt&gt; would always
come before &lt;tt class="docutils literal"&gt;t1 tx&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;rx from t0&lt;/tt&gt; before &lt;tt class="docutils literal"&gt;rx from t1&lt;/tt&gt;, and so
on.&lt;/p&gt;
&lt;p&gt;I think this is done for performance reasons, where the kernel just
looks for an available slot, running each thread on a best-effort
basis. My guess is that a more real-time kernel would be more
predictable.&lt;/p&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-05-22</title><link href="http://tshepang.net/rust-week-of-2015-05-22" rel="alternate"></link><published>2015-05-25T00:00:00+02:00</published><updated>2015-05-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-05-25:/rust-week-of-2015-05-22</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I bumped onto &lt;a class="reference external" href="http://stackoverflow.com/q/30413090/321731"&gt;an oddity regarding 'pow' method&lt;/a&gt;... there is no fallback.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I found that converting a char to a String (or &amp;amp;str) is &lt;a class="reference external" href="http://stackoverflow.com/a/28003842/321731"&gt;not as obvious as I hoped&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I read some of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::path&lt;/span&gt;&lt;/tt&gt; code which resulted in &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25736"&gt;some small changes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I re-discovered the convenience function, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Iterator::cloned …&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I bumped onto &lt;a class="reference external" href="http://stackoverflow.com/q/30413090/321731"&gt;an oddity regarding 'pow' method&lt;/a&gt;... there is no fallback.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I found that converting a char to a String (or &amp;amp;str) is &lt;a class="reference external" href="http://stackoverflow.com/a/28003842/321731"&gt;not as obvious as I hoped&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I read some of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::path&lt;/span&gt;&lt;/tt&gt; code which resulted in &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25736"&gt;some small changes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I re-discovered the convenience function, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Iterator::cloned&lt;/span&gt;&lt;/tt&gt;, and
submitted two related &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25756"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25758"&gt;improvements&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I added syntax highlighting to the &lt;a class="reference external" href="http://tshepang.net/tags.html#rust-ref"&gt;Rust posts on my blog&lt;/a&gt; that
were missing it. I also updated the code to run on modern Rust.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I got some clarity on the concept of traits by re-reading the
well-written post, &lt;a class="reference external" href="http://blog.rust-lang.org/2015/05/11/traits.html"&gt;Abstraction without overhead: traits in
Rust&lt;/a&gt;.
One feature they have is they allow adding methods to types,
including upstream ones,
example being stdlib types as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;trait&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Invert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Invert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;f64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10_&lt;/span&gt;&lt;span class="k"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;assert_eq&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another example is that one can limit the type of arguments accepted
by a function, though it uses something of an ugly syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;print_inverse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;: &lt;span class="nc"&gt;Invert&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;: &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Inverse: {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&amp;lt;T: Invert&amp;gt;&lt;/tt&gt; means this function will only accept &lt;tt class="docutils literal"&gt;foo&lt;/tt&gt; whose type
implements the &lt;tt class="docutils literal"&gt;Invert&lt;/tt&gt; trait.
You can check by calling it with an &lt;tt class="docutils literal"&gt;i32&lt;/tt&gt; value, in which it will
succeed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print_inverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10_&lt;/span&gt;&lt;span class="k"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Inverse: 0.1
&lt;/pre&gt;
&lt;p&gt;Any other type will fail:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print_inverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10_&lt;/span&gt;&lt;span class="k"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
the trait `Invert` is not implemented for the type `f64` [E0277]
&lt;/pre&gt;
&lt;p&gt;This allows for a feature named generics, where one can use multiple
types for the same function. For example, that error will disappear
if you got this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Invert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;f64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>various Rust ways of displaying stuff to the screen</title><link href="http://tshepang.net/various-rust-ways-of-displaying-stuff-to-the-screen" rel="alternate"></link><published>2015-05-25T00:00:00+02:00</published><updated>2015-05-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-05-25:/various-rust-ways-of-displaying-stuff-to-the-screen</id><summary type="html">&lt;p&gt;Here is a simple way of doing it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;b&amp;quot;some output&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I do however get this warning when I build it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs
main.rs:4:5: 4:42 warning: unused result which must be used, #[warn(unused_must_use …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Here is a simple way of doing it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;b&amp;quot;some output&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I do however get this warning when I build it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs
main.rs:4:5: 4:42 warning: unused result which must be used, #[warn(unused_must_use)] on by default
main.rs:4     io::stdout().write_ln(b&amp;quot;some output&amp;quot;);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/pre&gt;
&lt;p&gt;Let's kill it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;b&amp;quot;some output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What I did is is call &lt;tt class="docutils literal"&gt;unwrap&lt;/tt&gt; which basically asks our operation
to &lt;tt class="docutils literal"&gt;panic!&lt;/tt&gt; in case of some error. Think of it as a shortcut of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;b&amp;quot;some output&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;panic&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some docs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/io/trait.Write.html#method.write_all"&gt;std::io::Writer::write_line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap"&gt;core::result::Result::unwrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/macro.panic!.html"&gt;std::panic!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;What if we wanted to do some string formatting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some {}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;write_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_bytes&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But there is a shortcut for the code above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;writeln&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is an even shorter shortcut:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;second_word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Question to self: do we get a &lt;tt class="docutils literal"&gt;panic!&lt;/tt&gt; if &lt;tt class="docutils literal"&gt;println&lt;/tt&gt; gets an I/O error?&lt;/p&gt;
&lt;p&gt;Some docs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/macro.format!.html"&gt;std::format!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/macro.writeln!.html"&gt;std::writeln!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.rust-lang.org/std/macro.println!.html"&gt;std::println!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;So, why bother with all these many ways when there's a simple
&lt;tt class="docutils literal"&gt;println!&lt;/tt&gt;? Flexibility. One example I can think of is writing to
stderr. There is no simple macro for that (&lt;tt class="docutils literal"&gt;println!&lt;/tt&gt; is for
stdout). Short of implementing &lt;a class="reference external" href="http://stackoverflow.com/a/27590832/321731"&gt;our own macro&lt;/a&gt;, We'd have to do
something like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;writeln&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;::&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can test that it really goes to stderr by running it like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ./main &amp;gt; /dev/null
some output
&lt;/pre&gt;
</content><category term="Rust"></category></entry><entry><title>Rust week of 2015-05-15</title><link href="http://tshepang.net/rust-week-of-2015-05-15" rel="alternate"></link><published>2015-05-23T00:00:00+02:00</published><updated>2015-05-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-05-23:/rust-week-of-2015-05-15</id><summary type="html">&lt;p&gt;This is the first of what I intend to be a weekly series of posts
related to my favorite programming language.  I here take Rust weeks
to begin each Friday, since Stable releases of the Rust distribution
(language and included libraries) are to be released on that week day.
This …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the first of what I intend to be a weekly series of posts
related to my favorite programming language.  I here take Rust weeks
to begin each Friday, since Stable releases of the Rust distribution
(language and included libraries) are to be released on that week day.
This is also a great excuse to write more regularly.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I read a high quality post titled &lt;a class="reference external" href="http://chrismorgan.info/blog/rust-ownership-the-hard-way.html"&gt;Rust ownership, the hard way&lt;/a&gt;.
I learned quite a bit going through it, like the meaning of
&lt;tt class="docutils literal"&gt;#[derive(Clone, Copy)]&lt;/tt&gt;, which I see a lot but never knew what it
meant.
I also learned that there are 7 ways to introduce a variable
binding (taking &lt;tt class="docutils literal"&gt;foo&lt;/tt&gt; as the name of that binding):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
let foo ...
for foo in ... (for loop)
foo =&amp;gt; ... (match block)
if let foo = ... (if block)
while let foo = ... (while loop)
fn func(foo: ... (function argument)
| foo | ... (closure argument)
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25629"&gt;submitted&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25656"&gt;some&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25659"&gt;documentation&lt;/a&gt; &lt;a class="reference external" href="https://github.com/rust-lang/rust/pull/25666"&gt;improvements&lt;/a&gt;. The latter one
was especially time-consuming, but it helped me explore the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::path&lt;/span&gt;&lt;/tt&gt; module. It even led me to bump onto &lt;a class="reference external" href="https://github.com/rust-lang/rust/issues/25673"&gt;a rustdoc bug&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Rust"></category></entry><entry><title>Simple code for a slot machine game</title><link href="http://tshepang.net/simple-code-for-a-slot-machine-game" rel="alternate"></link><published>2015-05-18T00:00:00+02:00</published><updated>2015-05-18T00:00:00+02:00</updated><author><name>Anne Jones</name></author><id>tag:tshepang.net,2015-05-18:/simple-code-for-a-slot-machine-game</id><summary type="html">&lt;p&gt;Basic knowledge in PHP is extremely useful for a computer
programmer. PHP is easy to understand and widely used by computer
programmers around the world. There are &lt;a class="reference external" href="http://www.homeandlearn.co.uk/php/php.html"&gt;plenty of tutorials on the
web&lt;/a&gt; that you can check out in order to have basic knowledge of PHP
and if you’re …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Basic knowledge in PHP is extremely useful for a computer
programmer. PHP is easy to understand and widely used by computer
programmers around the world. There are &lt;a class="reference external" href="http://www.homeandlearn.co.uk/php/php.html"&gt;plenty of tutorials on the
web&lt;/a&gt; that you can check out in order to have basic knowledge of PHP
and if you’re interested in creating a very simple game using this
language, this article is for you.&lt;/p&gt;
&lt;p&gt;Slot machines are one of the oldest and most popular games around the
world. According to figures, slot machine revenue in Macau – the new
mecca of gaming – reached &lt;a class="reference external" href="http://www.macauhub.com.mo/en/2014/01/16/macau%E2%80%99s-gaming-and-gambling-revenues-total-us45-233-billion-in-2013"&gt;more than $1.70 billion last year&lt;/a&gt;, and
is predicted to become a $3 billion industry by the end of 2015.&lt;/p&gt;
&lt;p&gt;Being in a lucrative business means cutthroat competition, which is
why a lot of casino providers today upgrade their services in order to
have the upper hand against competitors. Entertainment hub &lt;a class="reference external" href="https://www.spingenie.com"&gt;Spin
Genie&lt;/a&gt;, along with the biggest gaming providers in the UK, are now
using HTML5 in order to be able to easily port and publish games on
many platforms. If you’re new to coding, use the code below as a
stepping-stone in furthering your programming knowledge.&lt;/p&gt;
&lt;div class="section" id="making-a-three-reeled-slot-machine-game-using-php"&gt;
&lt;h2&gt;Making a three-reeled slot machine game using PHP&lt;/h2&gt;
&lt;p&gt;The code we're going to use is from IBM's Developer Works page. If you
want to learn how to make other games apart from slot machines, you
can go on ahead and click &lt;a class="reference external" href="http://www.ibm.com/developerworks/library/os-php-gamescripts3"&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's begin. First, we must establish the user interface of the game:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$faces = array (&amp;#39;Figure1&amp;#39;, &amp;#39;Figure2&amp;#39;, &amp;#39;Figure3&amp;#39;, &amp;#39;Figure4&amp;#39;, &amp;#39;Figure5&amp;#39;, &amp;#39;Figure6&amp;#39;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can substitute any image you want for the figures: fruits, flags,
your favorite cartoon hero, anything.  Then, you will have to declare
the combinations of winning reels. In a traditional slot machine, 3
images must match a payout line, so write the code like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$payouts = array (&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure1|Figure1|Figure&amp;#39; =&amp;gt; &amp;#39;10&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure2| Figure2|Figure2&amp;#39; =&amp;gt; &amp;#39;20&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure3|Figure3|Figure3&amp;#39; =&amp;gt; &amp;#39;25&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure4|Figure4|Figure4&amp;#39; =&amp;gt; &amp;#39;35&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure5|Figure5|Figure5&amp;#39; =&amp;gt; &amp;#39;50&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;Figure6|Figure6|Figure6&amp;#39; =&amp;gt; &amp;#39;200&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt;);&lt;/span&gt;

&lt;span class="x"&gt;if (isset($payouts[$result1.&amp;#39;|&amp;#39;.$result2.&amp;#39;|&amp;#39;.$result3])) {&lt;/span&gt;
&lt;span class="x"&gt;    // give the payout&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's make the reels spin like a real slot machine. Traditional slots
usually have the first and third reels spin in one direction, while
the second reel spins in the other.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$wheel1 = array();&lt;/span&gt;
&lt;span class="x"&gt;foreach ($faces as $face) {&lt;/span&gt;
&lt;span class="x"&gt;    $wheel1[] = $face;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;$wheel2 = array_reverse($wheel1);&lt;/span&gt;
&lt;span class="x"&gt;$wheel3 = $wheel1;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done! With this, you will be able to create a game that has all the
elements (reel images, moving reels, and payout lines) of a classic
Vegas slot machine.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is a guest post by Anne Jones&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Rust 'collect' function rocks!</title><link href="http://tshepang.net/rust-collect-function-rocks" rel="alternate"></link><published>2015-03-20T00:00:00+02:00</published><updated>2015-03-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-03-20:/rust-collect-function-rocks</id><summary type="html">&lt;p&gt;Here is one way to populate a Vec with some data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, one can simply do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function is also about twice as fast, according to the following
benchmark …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is one way to populate a Vec with some data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, one can simply do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function is also about twice as fast, according to the following
benchmark:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#![feature(test)]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#[bench]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;::&lt;span class="n"&gt;Bencher&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#[bench]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;no_collect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;::&lt;span class="n"&gt;Bencher&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the output of &lt;tt class="docutils literal"&gt;cargo bench&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test collect    ... bench:       164 ns/iter (+/- 7)
test no_collect ... bench:       346 ns/iter (+/- 8)
&lt;/pre&gt;
</content><category term="Rust"></category></entry><entry><title>what makes Rust unique</title><link href="http://tshepang.net/what-makes-rust-unique" rel="alternate"></link><published>2015-01-24T00:00:00+02:00</published><updated>2015-01-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-01-24:/what-makes-rust-unique</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
It's easy to write (a) an unsafe language that has no GC, or (b) a
safe language that relies on GC for safety. It's also easy to write a
language that is in category (b) but lets you drop down to
category (a) in an unsafe dialect. It's a very …&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
It's easy to write (a) an unsafe language that has no GC, or (b) a
safe language that relies on GC for safety. It's also easy to write a
language that is in category (b) but lets you drop down to
category (a) in an unsafe dialect. It's a very difficult problem to
write a safe language that does not rely on GC, and I know of no other
industry language that has done it.&lt;/blockquote&gt;
&lt;p&gt;Part of &lt;a class="reference external" href="https://news.ycombinator.com/item?id=8936061"&gt;a response&lt;/a&gt; by a member of Rust core team.&lt;/p&gt;
</content><category term="quote"></category><category term="Rust"></category></entry><entry><title>links 2015-01-16</title><link href="http://tshepang.net/links-2015-01-16" rel="alternate"></link><published>2015-01-16T00:00:00+02:00</published><updated>2015-01-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-01-16:/links-2015-01-16</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://glenmoyes.com/articles/to_those_learning_3d"&gt;A well-written article&lt;/a&gt; offering tips on being a good 3D artist&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://people.debian.org/~stapelberg//2014/12/23/code-search-taming-the-latency-tail"&gt;an epic battle in improving performance of Debian Code Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://siciarz.net/tag/24daysofrust"&gt;24 days of Rust&lt;/a&gt; is a nice series of 24 posts related to Rust,
each short and concise, which is the way I like it&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://chrismorgan.info/blog/rust-fizzbuzz.html"&gt;Why your first FizzBuzz …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://glenmoyes.com/articles/to_those_learning_3d"&gt;A well-written article&lt;/a&gt; offering tips on being a good 3D artist&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://people.debian.org/~stapelberg//2014/12/23/code-search-taming-the-latency-tail"&gt;an epic battle in improving performance of Debian Code Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://siciarz.net/tag/24daysofrust"&gt;24 days of Rust&lt;/a&gt; is a nice series of 24 posts related to Rust,
each short and concise, which is the way I like it&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://chrismorgan.info/blog/rust-fizzbuzz.html"&gt;Why your first FizzBuzz implementation may not work&lt;/a&gt;
- a very nice Rust mini-tutorial&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mainisusuallyafunction.blogspot.com/2015/01/151-byte-static-linux-binary-in-rust.html"&gt;151-byte static Linux binary in Rust&lt;/a&gt; - interesting experiment&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Rust"></category><category term="links"></category></entry><entry><title>zerofree rocks!</title><link href="http://tshepang.net/zerofree-rocks" rel="alternate"></link><published>2015-01-15T00:00:00+02:00</published><updated>2015-01-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-01-15:/zerofree-rocks</id><summary type="html">&lt;p&gt;At work, we tend to use the same base image for multiple
installations.  I would often copy a whole-disk image of a system as a
matter of convenience, because that way I only need to &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; to the
target, without any additional steps. The problem with this approach
is that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At work, we tend to use the same base image for multiple
installations.  I would often copy a whole-disk image of a system as a
matter of convenience, because that way I only need to &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; to the
target, without any additional steps. The problem with this approach
is that it is slower than taking a tarball of the files (from the
source) and extracting them onto the target. That's because it works
with a lot more data than it needs. For example, say you have a 4GB
disk which is only filled with 1GB data. The first method would mean
that processing a useless 3GB of one and zeroes, but my main concern
is that the whole-disk doesn't compress well. So here's what I tried
after creating a tarball:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Simple file removal and extraction (&lt;tt class="docutils literal"&gt;cd /target &amp;amp;&amp;amp; rm &lt;span class="pre"&gt;-r&lt;/span&gt; * &amp;amp;&amp;amp;
tar xf ~/rootfs.tar&lt;/tt&gt;) didn't work&lt;/li&gt;
&lt;li&gt;Re-formatting the drive (&lt;tt class="docutils literal"&gt;mkfs.ext4 /dev/mmcblkp1&lt;/tt&gt;) and then
extraction didn't work either&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The issue is that with the 2 steps above, there still remains much
data on the partition from previous use. That is, file removal and
creating a filesystem doesn't remove the actual data, but rather just
makes the data inaccessible by conventional means. To the data
compressor (&lt;tt class="docutils literal"&gt;xz&lt;/tt&gt; in this case), that is all valid data. What needs
to happen is for the data that is not allocated to be over-written
with zeroes... enter &lt;a class="reference external" href="https://packages.debian.org/sid/zerofree"&gt;zerofree&lt;/a&gt; which does just that. After it was
done, my compressed image shrinked from ~400MB to ~80MB. The original
was about 2GB.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>ideal static blog generator</title><link href="http://tshepang.net/ideal-static-blog-generator" rel="alternate"></link><published>2015-01-11T10:38:03+02:00</published><updated>2015-01-11T10:38:03+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2015-01-11:/ideal-static-blog-generator</id><summary type="html">&lt;p&gt;Anything not listed below is either stuff I take for granted or simply
missed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText&lt;/a&gt; support is mandatory.
It's the only markup language I like.&lt;/li&gt;
&lt;li&gt;Landing Page should be an Archives View (Post title and date) or a
subset (i.e. Recent Posts).  I would not mind if the latest …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Anything not listed below is either stuff I take for granted or simply
missed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText&lt;/a&gt; support is mandatory.
It's the only markup language I like.&lt;/li&gt;
&lt;li&gt;Landing Page should be an Archives View (Post title and date) or a
subset (i.e. Recent Posts).  I would not mind if the latest Post or
the About Page were displayed, so long as they are followed by this
Archives View.&lt;/li&gt;
&lt;li&gt;Categories should be determined by directory into which a file (the
raw material for a Post) is placed. Specifying this in the metadata
section of the file should of course take precedence.&lt;/li&gt;
&lt;li&gt;Publish date should never be placed at the bottom of a Post. It is
too important a piece metadata to treat this way.&lt;/li&gt;
&lt;li&gt;An option to have clean URLs (i.e. trailing &lt;tt class="docutils literal"&gt;.html&lt;/tt&gt; removed).&lt;/li&gt;
&lt;li&gt;Date-based directory structure should not be mandatory (unlike with
Tinkerer).&lt;/li&gt;
&lt;li&gt;Inline literals and literal blocks (for code) should be
distinguished by background colour; using a different font is just not
good enough.&lt;/li&gt;
&lt;li&gt;Tags (and maybe Categories) should be displayed on each post.&lt;/li&gt;
&lt;li&gt;Blogofile has a strange requirement of having &lt;a class="reference external" href="http://docs.blogofile.com/en/latest/posts.html"&gt;post headers be YAML
format&lt;/a&gt;. Maybe there's a good reason, but I want my generator to
not require anything special in file contents.&lt;/li&gt;
&lt;li&gt;Ability to determine Publish date from file mtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;nice-to-have&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ability to combine multiple tags.&lt;/li&gt;
&lt;li&gt;Ability to show posts linking to current one, but I'm not sure how
useful this would be though.&lt;/li&gt;
&lt;li&gt;A feed icon that is visible from the main page (and maybe Category
pages).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="blogging"></category></entry><entry><title>impressed by the ease of creating Upstart jobs</title><link href="http://tshepang.net/impressed-by-the-ease-of-creating-upstart-jobs" rel="alternate"></link><published>2014-10-30T00:00:00+02:00</published><updated>2014-10-30T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-10-30:/impressed-by-the-ease-of-creating-upstart-jobs</id><summary type="html">&lt;p&gt;At work, we run our systems on Ubuntu, which so far means the init
system is Upstart. I needed to have one binary to start when the
system boots, and because I'm horrified by sysvinit scripts (which
Upstart supports), I decided to give creating an Upstart job a try. I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At work, we run our systems on Ubuntu, which so far means the init
system is Upstart. I needed to have one binary to start when the
system boots, and because I'm horrified by sysvinit scripts (which
Upstart supports), I decided to give creating an Upstart job a try. I
was surprised how easy it was:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
exec /usr/local/bin/executable
start on startup
respawn
&lt;/pre&gt;
&lt;p&gt;I placed a file with above contents in &lt;tt class="docutils literal"&gt;/etc/init/executable.conf&lt;/tt&gt;,
and that's pretty much it. Impressive.&lt;/p&gt;
&lt;p&gt;Here's what happens:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;exec&lt;/tt&gt; instructs Upstart what executable to run&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;start on&lt;/tt&gt; is an instruction on when to start the service&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;respawn&lt;/tt&gt; means the service should re-start if ever it dies for
some reason&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One convenient thing that's happening is that stdout output of the
service gets re-directed to a log file, in this case
&lt;tt class="docutils literal"&gt;/var/log/upstart/executable.log&lt;/tt&gt;. Cool stuff.&lt;/p&gt;
&lt;p&gt;I found help from &lt;a class="reference external" href="http://upstart.ubuntu.com/getting-started.html"&gt;Getting Started&lt;/a&gt; and &lt;a class="reference external" href="http://upstart.ubuntu.com/cookbook"&gt;the Cookbook&lt;/a&gt;.&lt;/p&gt;
</content><category term="non-Debian"></category></entry><entry><title>links 2014-10-07</title><link href="http://tshepang.net/links-2014-10-07" rel="alternate"></link><published>2014-10-07T00:00:00+02:00</published><updated>2014-10-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-10-07:/links-2014-10-07</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.enricozini.org/2014/debian/on-responsibilities"&gt;A nice article&lt;/a&gt; on the need for people with different roles in a
single project: manager and craftsman&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://grodola.blogspot.com/2014/01/psutil-20-porting.html"&gt;A nice article&lt;/a&gt; on revamping psutil API psutil; it's a Python
library that provides easy and cross-platform process control&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.spacemonkey.com/blog/posts/go-space-monkey"&gt;A thorough (and satisfying) article&lt;/a&gt; on why Go rocks, as compared to
Python …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.enricozini.org/2014/debian/on-responsibilities"&gt;A nice article&lt;/a&gt; on the need for people with different roles in a
single project: manager and craftsman&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://grodola.blogspot.com/2014/01/psutil-20-porting.html"&gt;A nice article&lt;/a&gt; on revamping psutil API psutil; it's a Python
library that provides easy and cross-platform process control&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.spacemonkey.com/blog/posts/go-space-monkey"&gt;A thorough (and satisfying) article&lt;/a&gt; on why Go rocks, as compared to
Python... perhaps the best I've read&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://richardhartmann.de/blog/posts/2013/12/14-SteamOS"&gt;SteamOS is based on Debian 7 &amp;quot;wheezy&amp;quot;&lt;/a&gt;; a Debian win&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lists.debian.org/debian-devel-announce/2014/01/msg00006.html"&gt;Debian Developers and Maintainers&lt;/a&gt; are given gratis access to
play Valve games; another Debian win&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="non-Python"></category><category term="non-FLOSS"></category><category term="links"></category></entry><entry><title>project of note: Debian LTS</title><link href="http://tshepang.net/project-of-note-debian-lts" rel="alternate"></link><published>2014-09-11T00:00:00+02:00</published><updated>2014-09-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-09-11:/project-of-note-debian-lts</id><summary type="html">&lt;p&gt;One of the complaints about Debian stable releases is that they reach
End Of Life too early (~3 years). This can result in some people
choosing commercially-backed alternatives like Ubuntu and Red Hat, for
they don't want to be bothered to have to upgrade that frequently (not
everyone cares for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the complaints about Debian stable releases is that they reach
End Of Life too early (~3 years). This can result in some people
choosing commercially-backed alternatives like Ubuntu and Red Hat, for
they don't want to be bothered to have to upgrade that frequently (not
everyone cares for the latest things, and it's not always practical to
do OS upgrades). That's why the &lt;a class="reference external" href="https://wiki.debian.org/LTS"&gt;Debian LTS (Long Term Support)
project&lt;/a&gt;, which extends the life of a stable release to 5 years, excites me.&lt;/p&gt;
&lt;p&gt;It's also super-nice that &lt;a class="reference external" href="http://www.freexian.com/services/debian-lts.html"&gt;contributing to it financially&lt;/a&gt; is made
damn easy, thanks to Freexian, a company run by a great Debian
Developer, &lt;a class="reference external" href="http://raphaelhertzog.com"&gt;Raphaël Hertzog&lt;/a&gt;. The project is now a few months old, and
has achieved moderate success (&lt;a class="reference external" href="http://raphaelhertzog.com/2014/09/10/freexians-first-report-about-debian-long-term-support"&gt;latest status report&lt;/a&gt;).&lt;/p&gt;
</content><category term="project-of-note"></category><category term="Debian"></category></entry><entry><title>more kudos for Pyramid</title><link href="http://tshepang.net/more-kudos-for-pyramid" rel="alternate"></link><published>2014-09-08T00:00:00+02:00</published><updated>2014-09-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-09-08:/more-kudos-for-pyramid</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;... Pyramid is a tremendous volunteer effort that exists only through
the generosity of its contributors.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="https://groups.google.com/d/msg/pylons-discuss/CnUcxdivj1o/khWoxer66osJ"&gt;Steven Piercy appreciating the flagship of the Pylons Project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not sure if there is any one Python web framework as
well-respected. The great Mike Beyers (SQLAlchemy) also &lt;a class="reference external" href="http://tshepang.net/kudos-for-pyramid"&gt;gave his
respects&lt;/a&gt; some months ago.&lt;/p&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;... Pyramid is a tremendous volunteer effort that exists only through
the generosity of its contributors.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="https://groups.google.com/d/msg/pylons-discuss/CnUcxdivj1o/khWoxer66osJ"&gt;Steven Piercy appreciating the flagship of the Pylons Project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not sure if there is any one Python web framework as
well-respected. The great Mike Beyers (SQLAlchemy) also &lt;a class="reference external" href="http://tshepang.net/kudos-for-pyramid"&gt;gave his
respects&lt;/a&gt; some months ago.&lt;/p&gt;
</content><category term="Python"></category><category term="quote"></category><category term="Pyramid"></category></entry><entry><title>loving the SSH multi-hop feature of Emacs</title><link href="http://tshepang.net/loving-the-ssh-multi-hop-feature-of-emacs" rel="alternate"></link><published>2014-09-04T00:00:00+02:00</published><updated>2014-09-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-09-04:/loving-the-ssh-multi-hop-feature-of-emacs</id><summary type="html">&lt;p&gt;I'm at home and want to access some system at work. I cannot access
this system directly, so will have to use a VPN or sshfs, but I don't
know how to set VPN up and sshfs feels rather clunky (I first have to
have some directory I'm going to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm at home and want to access some system at work. I cannot access
this system directly, so will have to use a VPN or sshfs, but I don't
know how to set VPN up and sshfs feels rather clunky (I first have to
have some directory I'm going to mount the thing, and have to remember
the command line syntax). With Emacs, I run the following command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C-x C-f /ssh:work|ssh:10.0.0.107|ssh:10.0.0.148:~/some/files/
&lt;/pre&gt;
&lt;p&gt;What happens there is I ask Emacs to run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;find-file&lt;/span&gt;&lt;/tt&gt;, which opens its
file manager, &lt;strong&gt;Dired&lt;/strong&gt;. It first accesses the server at work, then my
work desktop (&lt;tt class="docutils literal"&gt;10.0.0.107&lt;/tt&gt;), and then some machine (&lt;tt class="docutils literal"&gt;10.0.0.148&lt;/tt&gt;)
which I normally access via my work desktop (it got SSH
keys). Finally, I'm then presented with the view of the files in
&lt;tt class="docutils literal"&gt;~/some/files/&lt;/tt&gt; in that machine, which I can work on (view, edit,
save) like any local file. I was surprised such a feature exists,
thinking I'd have to do ugly things like port forwarding. I do use the
single hop a lot (if that's even the right name):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C-x C-f /ssh:work:~/some/files/
&lt;/pre&gt;
&lt;p&gt;Shortcut for that is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C-x C-f /work:~/some/files/
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;sidenotes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The shortcut doesn't work with multi-hop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I love the fact that Emacs accepts SSH settings, where for example,
instead of specifying the whole &lt;a class="reference external" href="mailto:username&amp;#64;host"&gt;username&amp;#64;host&lt;/a&gt;, it accepts the
aliases in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt;, such that I only have to run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh work
&lt;/pre&gt;
&lt;p&gt;instead of:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh tshepang&amp;#64;hostname
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Emacs"></category></entry><entry><title>trying to understand stack memory</title><link href="http://tshepang.net/trying-to-understand-stack-memory" rel="alternate"></link><published>2014-08-04T00:00:00+02:00</published><updated>2014-08-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-08-04:/trying-to-understand-stack-memory</id><summary type="html">&lt;p&gt;Python is a language that is so high level that concepts like stack
and heap memory are hidden from its users. Not so with lower-level
languages like C. Following examples are implemented in Rust, which is
easier to use than C:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Python is a language that is so high level that concepts like stack
and heap memory are hidden from its users. Not so with lower-level
languages like C. Following examples are implemented in Rust, which is
easier to use than C:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We build and run it like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs &amp;amp;&amp;amp; ./main
0x7fff0c8d16d7
0x7fff0c8d16d6
0x7fff0c8d16d5
&lt;/pre&gt;
&lt;p&gt;In our code, the three variables are each given 1 byte of memory
(&lt;tt class="docutils literal"&gt;i8&lt;/tt&gt; means 8-bit integer). The addresses are given in reverse
order. An explanation I heard is so that the heap grows the opposite
direction to the stack, which helps separate things nicely. I suppose
this would be for performance reasons and/or simpler memory management
code.&lt;/p&gt;
&lt;p&gt;If we use larger types, we'll see each value taking more than just one
address:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;i16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{:p}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs &amp;amp;&amp;amp; ./main
0x7fff2462aed6
0x7fff2462aed4
0x7fff2462aed2
&lt;/pre&gt;
&lt;p&gt;In this case, each of the variables take 2 addresses (&lt;tt class="docutils literal"&gt;i16&lt;/tt&gt; means
16-bit integer). Using &lt;tt class="docutils literal"&gt;i32&lt;/tt&gt; results in each taking 4 addresses:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs &amp;amp;&amp;amp; ./main
0x7ffff7706024
0x7ffff7706020
0x7ffff770601c
&lt;/pre&gt;
&lt;p&gt;And then, finally, &lt;tt class="docutils literal"&gt;i64&lt;/tt&gt; results in each variable taking 8 addresses
(64 bits) of space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rustc main.rs &amp;amp;&amp;amp; ./main
0x7fffd27383b0
0x7fffd27383a8
0x7fffd27383a0
&lt;/pre&gt;
</content><category term="Rust"></category></entry><entry><title>discovering Python @decorators</title><link href="http://tshepang.net/discovering-python-decorators" rel="alternate"></link><published>2014-07-08T00:00:00+02:00</published><updated>2014-07-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-07-08:/discovering-python-decorators</id><summary type="html">&lt;p&gt;There is a project at work where I needed to do the same action on
various functions. It's basically a checkpoint system where I'd write
some state to a file, but only when all the functionality in the given
functions executed successfully. It was a one-line change but I
thought …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There is a project at work where I needed to do the same action on
various functions. It's basically a checkpoint system where I'd write
some state to a file, but only when all the functionality in the given
functions executed successfully. It was a one-line change but I
thought it was a good excuse to create decorators for the first time
in my life.&lt;/p&gt;
&lt;p&gt;Here is an example of a decorator function:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def checkpoint(function):
    wrapper(*args, **kwargs):
        with open(PATH) as f:
            for line in f:
                if function.__name__ in line:
                    return
        value = function(*args, **kwargs)
        with open(PATH, 'a+') as f:
            f.write(function.__name__)
        return value
    return wrapper
&lt;/pre&gt;
&lt;p&gt;All it does is write some text to a file, and avoid running whatever
function will be &lt;em&gt;decorated&lt;/em&gt; by it if there is a match in that
file. This would be an indicator that the function had already been
executed (in a previous run).&lt;/p&gt;
&lt;p&gt;The following snippet sees the use of this decorator:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;#64;checkpoint
def do_this(some_argument):
    # exit(1) on error
    ...

&amp;#64;checkpoint
def do_that(some_other_argument, some_optional_argument=None):
    # exit(1) on error
    ...

if __name__ == '__main__':
    do_this('some value')
    do_that('some other value')
&lt;/pre&gt;
&lt;p&gt;Without the decorator syntax, the same functionality would be achieved
with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def do_this(some_argument):
    # exit(1) on error
    ...
do_this = checkpoint(do_this)

def do_that(some_other_argument, some_optional_argument=None):
    # exit(1) on error
    ...
do_that = checkpoint(do_that)

if __name__ == '__main__':
    do_this('some value')
    do_that('some other value')
&lt;/pre&gt;
&lt;p&gt;The latter format, though it presents less of a cognitive burden,
feels less of an obvious solution, and it's a bit uglier as
well. &lt;a class="reference external" href="http://legacy.python.org/dev/peps/pep-0318"&gt;PEP 380&lt;/a&gt; is a detailed discussion written over 10 years ago
when the syntax was first added to the language.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>a better Python</title><link href="http://tshepang.net/a-better-python" rel="alternate"></link><published>2014-05-10T00:00:00+02:00</published><updated>2014-05-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-05-10:/a-better-python</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://neverworkintheory.org/2014/01/29/stefik-siebert-syntax"&gt;This post&lt;/a&gt; led me to an interesting paper titled &lt;em&gt;An Empirical
Investigation into Programming Language Syntax&lt;/em&gt;. Now, since I'm a
Python sucker, here is what I would change in Python in order to follow
advice from &lt;a class="reference external" href="http://dl.acm.org/authorize?6968137"&gt;that paper&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
  before       after
  ------       -----
   !=          not=
    %          mod
 string        text
try-except  check-error
 finally       always
  raise        alert …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://neverworkintheory.org/2014/01/29/stefik-siebert-syntax"&gt;This post&lt;/a&gt; led me to an interesting paper titled &lt;em&gt;An Empirical
Investigation into Programming Language Syntax&lt;/em&gt;. Now, since I'm a
Python sucker, here is what I would change in Python in order to follow
advice from &lt;a class="reference external" href="http://dl.acm.org/authorize?6968137"&gt;that paper&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
  before       after
  ------       -----
   !=          not=
    %          mod
 string        text
try-except  check-error
 finally       always
  raise        alert
   def       procedure
  print       output
 import        use
int/float     number
&lt;/pre&gt;
&lt;p&gt;The most surprising finding is that both programmers and
non-programmers found &lt;em&gt;while&lt;/em&gt; and &lt;em&gt;for&lt;/em&gt; not intuitive for looping
constructs. The preferred alternatives are &lt;em&gt;repeat&lt;/em&gt; and &lt;em&gt;loop&lt;/em&gt;. Of
these, I prefer &lt;em&gt;loop&lt;/em&gt;, but it does not read as well as &lt;em&gt;while&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
while count &amp;lt; 3:
    count = action()

loop count &amp;lt; 3:
    count = action()
&lt;/pre&gt;
&lt;p&gt;Quorum, the language by those responsible for this paper, went with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
repeat while (count &amp;lt; 3)
    count = action()
end
&lt;/pre&gt;
&lt;p&gt;To mimic that in Python, any of the following two sound fine (I prefer
&lt;em&gt;if&lt;/em&gt; to &lt;em&gt;while&lt;/em&gt;; less syntax is better):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
repeat if count &amp;lt; 3:
    count = action()

loop if count &amp;lt; 3:
    count = action()
&lt;/pre&gt;
&lt;p&gt;That means an infinite loop would be:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
loop if True:
    action()
&lt;/pre&gt;
&lt;p&gt;Or for that special case, a shortcut can just be this simple:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
loop:
    action()
&lt;/pre&gt;
&lt;p&gt;I wonder what cycling through items in a container would look like. In
Python, it looks like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for item in container:
    action(item)
&lt;/pre&gt;
&lt;p&gt;This feels as natural as anything, but then again I been doing Python
for a number of years, so the bias could be heavy. Following is an
attempt:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
loop in range(3):
    action()
&lt;/pre&gt;
&lt;p&gt;It mimics this Python syntax, which I actually don't like, since we
don't always need the items of the container:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for _ in range(3):
    action()
&lt;/pre&gt;
&lt;p&gt;Quorum, the academic language mentioned above, does it like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
repeat 3 times
    action()
end
&lt;/pre&gt;
&lt;p&gt;I don't like that either; feels contrived. The Python way strikes me
as a good compromise, especially given how general it is. I will try
again with the &lt;em&gt;loop&lt;/em&gt; syntax:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
loop item in container:
    action(item)
&lt;/pre&gt;
&lt;p&gt;You have to admit it doesn't read as nice as:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for item in container:
    action(item)
&lt;/pre&gt;
&lt;p&gt;It should be flexible to accommodate more than just one value on each
iteration, so should have an equivalent for this Python code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for index, item in enumerate(container):
    action(index, item)
&lt;/pre&gt;
&lt;p&gt;Here goes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
loop index, item in enumerate(container):
    action(index, item)
&lt;/pre&gt;
&lt;p&gt;Now, for the much-loved Python list comprehensions:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[procedure(item) for item in container]
&lt;/pre&gt;
&lt;p&gt;We would instead have:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[procedure(item) loop item in container]
&lt;/pre&gt;
&lt;p&gt;So, apart from being highly-rated for being intuitive, &lt;em&gt;loop&lt;/em&gt; also
provides a consistent looping construct, whereas Python has 2, &lt;em&gt;while&lt;/em&gt;
and &lt;em&gt;for&lt;/em&gt;, both of which received low points in the
study. Interesting.&lt;/p&gt;
&lt;p&gt;If someone (me?) were to implement these changes to Python, the result
would not be named a Python variant (they are just too drastic), but
more a Python descendent... &lt;strong&gt;a better Python&lt;/strong&gt;.&lt;/p&gt;
</content><category term="Python"></category><category term="non-Python"></category></entry><entry><title>kudos for Pyramid</title><link href="http://tshepang.net/kudos-for-pyramid" rel="alternate"></link><published>2014-05-06T00:00:00+02:00</published><updated>2014-05-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-05-06:/kudos-for-pyramid</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing ever breaks. Nothing ever does what you don't expect,
'cause Pyramid components are like super, super industrial
rock-solid, and I always trust them a 100%.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://pyvideo.org/video/2669/building-the-app"&gt;Mike Bayer at PyCon 2014 in Montreal&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing ever breaks. Nothing ever does what you don't expect,
'cause Pyramid components are like super, super industrial
rock-solid, and I always trust them a 100%.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://pyvideo.org/video/2669/building-the-app"&gt;Mike Bayer at PyCon 2014 in Montreal&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="quote"></category><category term="Python"></category><category term="Pyramid"></category></entry><entry><title>Sony Vaio Pro 13 (SVP13212SGBI)</title><link href="http://tshepang.net/sony-vaio-pro-13-svp13212sgbi" rel="alternate"></link><published>2014-04-24T00:00:00+02:00</published><updated>2014-04-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-04-24:/sony-vaio-pro-13-svp13212sgbi</id><summary type="html">&lt;p&gt;On &lt;strong&gt;2014-02-13&lt;/strong&gt; I went to collect &lt;a class="reference external" href="http://www.youtube.com/watch?v=Xq-ZBke68tA"&gt;the laptop&lt;/a&gt; from &lt;a class="reference external" href="http://www.comx.co.za"&gt;these
guys&lt;/a&gt;, which I paid around R12500 (~$1200) for. It's a 4GB RAM,
128GB SSD, FHD model. I would have happily paid for more RAM and
storage, but this seems the only model available in my home country. I
am glad …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On &lt;strong&gt;2014-02-13&lt;/strong&gt; I went to collect &lt;a class="reference external" href="http://www.youtube.com/watch?v=Xq-ZBke68tA"&gt;the laptop&lt;/a&gt; from &lt;a class="reference external" href="http://www.comx.co.za"&gt;these
guys&lt;/a&gt;, which I paid around R12500 (~$1200) for. It's a 4GB RAM,
128GB SSD, FHD model. I would have happily paid for more RAM and
storage, but this seems the only model available in my home country. I
am glad that it's also not a touch screen... I don't need the
reflection.&lt;/p&gt;
&lt;p&gt;Anyways, there was much pain involved trying to get it to work. I
struggled to get Debian booting, and I don't know what I did wrong
because after a few attempts of trying this and that, things
worked. And man, that SSD is fast: it takes 6-7 seconds to GUI login
screen. Package installation is also insane fast.&lt;/p&gt;
&lt;p&gt;There was much pain trying to get audio to work. Luckily &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Sony_Vaio_Pro_SVP-1x21#Sound"&gt;I got some
help&lt;/a&gt;, where I needed to change two lines in
&lt;cite&gt;/usr/share/alsa/alsa.conf&lt;/cite&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
defaults.ctl.card 1
defaults.pcm.card 1
&lt;/pre&gt;
&lt;p&gt;VLC video didn't work well either, but I
needed only change Video Output to &lt;strong&gt;OpenGL GLX video output (XCB)&lt;/strong&gt;,
and all was well.&lt;/p&gt;
&lt;div class="section" id="performance"&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;p&gt;I am now going to check how this machine compares to &lt;a class="reference external" href="http://tshepang.net/a-bit-of-benchmarking"&gt;these others&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Specs:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ uname --all
Linux thome 3.12-1-amd64 #1 SMP Debian 3.12.9-1 (2014-02-01) x86_64 GNU/Linux
$ cat /proc/cpuinfo | sed --quiet '5p'
model name      : Intel(R) Core(TM) i5-4200U CPU &amp;#64; 1.60GHz
&lt;/pre&gt;
&lt;p&gt;CPython build (changeset &lt;tt class="docutils literal"&gt;b6a1a78818fe&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ make distclean; time (./configure &amp;amp;&amp;amp; make --silent --jobs=4)
[...]
real    1m52.372s
user    3m12.460s
sys     0m6.764s
&lt;/pre&gt;
&lt;p&gt;CPython test suite:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ time ./python -m test --multiprocess=0
[...]
real    3m34.582s
user    5m12.260s
sys     0m20.640s
&lt;/pre&gt;
&lt;p&gt;Linux kernel build (commit &lt;tt class="docutils literal"&gt;6e4664525b1d&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ make distclean &amp;amp;&amp;amp; make defconfig &amp;amp;&amp;amp; time make
[...]
real    11m57.220s
user    11m1.544s
sys     0m38.260s
&lt;/pre&gt;
&lt;p&gt;So the machine still doesn't compare with my work machine, a ~2
year-old desktop. It is faster than my old laptop as expected, and
comparable to the DigitalOcean VPS, no surprises there. The storage is
a lot faster though... I've seen sustained read speeds of ~500MB/s.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="issues"&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The corners of the laptop are rather sharp,
making it a little uncomfortable to handle.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The power button is not so easy to press, and offers very little
'feedback'... it has very shallow movement. Luckily there should not
be a frequent need to use it, but there are times when something is
buggy enough to cause OS hangs and other misbehaviour.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The fan is too quick to kick in, and easily gets noisy. Running the
following commands does not help, at least not in a way I could
notice:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
echo silent | sudo tee  /sys/devices/platform/sony-laptop/thermal_control
&lt;/pre&gt;
&lt;p&gt;I don't know why this happens, given that I have never seen the
temperature rise above 60 °C:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sensors
acpitz-virtual-0
Adapter: Virtual device
temp1:        +48.0°C  (crit = +97.0°C)

coretemp-isa-0000
Adapter: ISA adapter
Physical id 0:  +48.0°C  (high = +100.0°C, crit = +100.0°C)
Core 0:         +46.0°C  (high = +100.0°C, crit = +100.0°C)
Core 1:         +45.0°C  (high = +100.0°C, crit = +100.0°C)
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The screen brightness control is painful. It requires one to press
the combination of the &lt;strong&gt;Fn&lt;/strong&gt; key and &lt;strong&gt;F5&lt;/strong&gt; (dim) and &lt;strong&gt;F6&lt;/strong&gt;
(brighten), which is fine. But one cannot just hold the two latter
keys, but has to repeatedly press them to reach the desired
result. That would not be such a big problem, except that it takes
such a long time to get there... more than 50 presses from the two
extremes!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I still haven't got used to &lt;strong&gt;Pg Up/Dn&lt;/strong&gt; and &lt;strong&gt;Home/End&lt;/strong&gt; being
accessible only via the &lt;strong&gt;Fn&lt;/strong&gt; key. It's so awkward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The touchpad is a great pleasure to use, except when pressing and
dragging. It's a hit-and-miss affair... you have to press quite
hard, and that makes precise control challenging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The flexibility of the body results in keyboard marks on the screen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The worst problem, however, is the flexibility of at the bottom of
the touchpad. Too often the touchpad fails to respond because I've
put the thing at the wrong angle... I mostly use my laptop in bed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="hardware"></category></entry><entry><title>links 2014-03-20</title><link href="http://tshepang.net/links-2014-03-20" rel="alternate"></link><published>2014-03-20T00:00:00+02:00</published><updated>2014-03-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-03-20:/links-2014-03-20</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;developing for Debian can be ugly, and &lt;a class="reference external" href="http://blog.liw.fi/posts/debian-developing-it-wrong"&gt;here are some excellent
suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lkml.org/lkml/2013/11/7/95"&gt;interesting idea on automated collection of Linux kernel
(in)stability issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Btrfs is unfortunately still &lt;a class="reference external" href="http://changelog.complete.org/archives/9123-results-with-btrfs-and-zfs"&gt;not ready for production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.lanedo.com/2013/filesystem-monitoring-linux-kernel"&gt;nice explanation of Linux kernel file monitoring technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow"&gt;excellent post on Stack Overflow infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;developing for Debian can be ugly, and &lt;a class="reference external" href="http://blog.liw.fi/posts/debian-developing-it-wrong"&gt;here are some excellent
suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lkml.org/lkml/2013/11/7/95"&gt;interesting idea on automated collection of Linux kernel
(in)stability issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Btrfs is unfortunately still &lt;a class="reference external" href="http://changelog.complete.org/archives/9123-results-with-btrfs-and-zfs"&gt;not ready for production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.lanedo.com/2013/filesystem-monitoring-linux-kernel"&gt;nice explanation of Linux kernel file monitoring technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow"&gt;excellent post on Stack Overflow infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="non-FLOSS"></category><category term="links"></category></entry><entry><title>project of note: Debian Installer</title><link href="http://tshepang.net/project-of-note-debian-installer" rel="alternate"></link><published>2014-03-20T00:00:00+02:00</published><updated>2014-03-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-03-20:/project-of-note-debian-installer</id><summary type="html">&lt;p&gt;I've looked at pretty installers like that of Ubuntu and Fedora, and
they are all very easy and slick. But whenever I install Debian, I
don't really see how much harder it is to use, though it's a lot
uglier.&lt;/p&gt;
&lt;p&gt;Anyways, what triggered this post is the following tit-bit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;d-i …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I've looked at pretty installers like that of Ubuntu and Fedora, and
they are all very easy and slick. But whenever I install Debian, I
don't really see how much harder it is to use, though it's a lot
uglier.&lt;/p&gt;
&lt;p&gt;Anyways, what triggered this post is the following tit-bit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;d-i [Debian Installer] is the very first thing many of our users
see, and has a huge range of uses, from simple desktop installs to
massive corporate deployments; it's unspeakably important that it
works well, and it's a testament to its design that it's been able
to trundle along without actually very much serious refactoring for
the best part of five years now.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://raphaelhertzog.com/2010/11/25/people-behind-debian-colin-watson/"&gt;an interview of Colin Watson&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In addition, this tool (or rather, a set of tools) also happens to be
rock-solid, and its great reliability and ease-of-use gets admiration
from me on each install... I've done dozens, with not one instance of
data loss.&lt;/p&gt;
</content><category term="Debian"></category><category term="non-Debian"></category><category term="project-of-note"></category><category term="quote"></category></entry><entry><title>XML humor</title><link href="http://tshepang.net/xml-humor" rel="alternate"></link><published>2014-03-09T00:00:00+02:00</published><updated>2014-03-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-03-09:/xml-humor</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey man&lt;/p&gt;
&lt;p&gt;Do you like XML?&lt;/p&gt;
&lt;p&gt;Fuck yeah you do.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Holy shit all of those tags and elements and attributes and comments are all nodes. It's like a motherfucking clusterfuck of polymorphism invading your configuration files goddamn!&lt;/li&gt;
&lt;li&gt;This shit is hierarchical. That is a fucking hard word to spell WHAT …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey man&lt;/p&gt;
&lt;p&gt;Do you like XML?&lt;/p&gt;
&lt;p&gt;Fuck yeah you do.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Holy shit all of those tags and elements and attributes and comments are all nodes. It's like a motherfucking clusterfuck of polymorphism invading your configuration files goddamn!&lt;/li&gt;
&lt;li&gt;This shit is hierarchical. That is a fucking hard word to spell WHAT THE FUCK was James T Kirk thinking when he told Gandalf to make that shit up?&lt;/li&gt;
&lt;li&gt;Are you gonna use a lame-ass specification like YAML or JSON (Jeff's Stupid Object Notation)? Fuck no, you want XML shit yes!&lt;/li&gt;
&lt;li&gt;I hear they used XML to specify a language for specifying XML or some shit. That doesn't make any fucking sense!&lt;/li&gt;
&lt;li&gt;Next you're gonna shit down my ear canal with some bullshit story like they made a programming language capable of converting one XML file to another XML file in XML!? You know what? You can fucking die.&lt;/li&gt;
&lt;li&gt;XML just shits all over regular expressions like it's Deep Blue teabagging Cthulhu.&lt;/li&gt;
&lt;li&gt;Dear motherfucking shit it's so verbose that it even makes Welbog write a big thing about it in his profile and only the best shit makes it into his profile because Bill said so goddamn&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://meta.stackexchange.com/users/52443"&gt;profile of the user on a Stack Exchange site&lt;/a&gt; (&lt;a class="reference external" href="http://meta.stackexchange.com/a/26518/147166"&gt;who keeps changing own username&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="humor"></category><category term="quote"></category></entry><entry><title>developer of note: Brett Cannon</title><link href="http://tshepang.net/developer-of-note-brett-cannon" rel="alternate"></link><published>2014-02-24T00:00:00+02:00</published><updated>2014-02-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-02-24:/developer-of-note-brett-cannon</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://sayspy.blogspot.ca/2013/04/a-decade-of-commits.html"&gt;A core CPython developer&lt;/a&gt;, Dr. Brett Cannon is among the key people
pushing Python 3 forward, examples being:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;He once developed &lt;a class="reference external" href="http://py3ksupport.appspot.com"&gt;a site&lt;/a&gt; that displayed progress of support by major
Python projects.&lt;/li&gt;
&lt;li&gt;He repeatedly gives talks on the topic.&lt;/li&gt;
&lt;li&gt;Most recently, he has developed &lt;a class="reference external" href="https://github.com/brettcannon/caniusepython3"&gt;a tool that checks which
dependencies …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://sayspy.blogspot.ca/2013/04/a-decade-of-commits.html"&gt;A core CPython developer&lt;/a&gt;, Dr. Brett Cannon is among the key people
pushing Python 3 forward, examples being:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;He once developed &lt;a class="reference external" href="http://py3ksupport.appspot.com"&gt;a site&lt;/a&gt; that displayed progress of support by major
Python projects.&lt;/li&gt;
&lt;li&gt;He repeatedly gives talks on the topic.&lt;/li&gt;
&lt;li&gt;Most recently, he has developed &lt;a class="reference external" href="https://github.com/brettcannon/caniusepython3"&gt;a tool that checks which
dependencies of a project lack Python 3 support&lt;/a&gt;. It's weird that
a tool like this is only available now, over 5 years since Python
3.0 was released.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sayspy.blogspot.ca/2012/02/how-i-bootstrapped-importlib.html"&gt;He keeps improving the Python import system&lt;/a&gt;, which is reportedly a
complex beast.&lt;/li&gt;
&lt;li&gt;I am grateful that &lt;a class="reference external" href="http://sayspy.blogspot.ca/2009/03/why-python-is-switching-to-mercurial.html"&gt;he championed the move from Subversion to
Mercurial for CPython development&lt;/a&gt;. I held back participating in
CPython development until this move was complete... Subversion is
that painful to use.&lt;/li&gt;
&lt;li&gt;He created &lt;a class="reference external" href="http://docs.python.org/devguide"&gt;Python Developer’s Guide&lt;/a&gt;, a great guide for those
wishing to help out with core CPython development.&lt;/li&gt;
&lt;li&gt;Personally, &lt;a class="reference external" href="http://sayspy.blogspot.ca/2013/04/why-im-signing-up-for-gittip.html"&gt;he inspired me to take a serious look at Gittip&lt;/a&gt;,
resulting in my participation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a lot more stuff he been doing for Python. Busy, busy guy.&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="Python"></category><category term="Gittip"></category></entry><entry><title>my current desktop setup</title><link href="http://tshepang.net/my-current-desktop-setup" rel="alternate"></link><published>2014-02-16T00:00:00+02:00</published><updated>2014-02-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2014-02-16:/my-current-desktop-setup</id><summary type="html">&lt;p&gt;Following is how my GUI environment is set-up on &lt;a class="reference external" href="http://tshepang.net/sony-vaio-pro-13-svp13212sgbi"&gt;my home machine&lt;/a&gt;
(a laptop) and work machine (a desktop). For the (libre) tools I
frequently use, see &lt;a class="reference external" href="http://tshepang.net/floss-i-use-a-lot"&gt;this post&lt;/a&gt; instead.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;With recent Debian GNOME updates (late 2013), something got broken
enough that I could not login to my account. I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Following is how my GUI environment is set-up on &lt;a class="reference external" href="http://tshepang.net/sony-vaio-pro-13-svp13212sgbi"&gt;my home machine&lt;/a&gt;
(a laptop) and work machine (a desktop). For the (libre) tools I
frequently use, see &lt;a class="reference external" href="http://tshepang.net/floss-i-use-a-lot"&gt;this post&lt;/a&gt; instead.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;With recent Debian GNOME updates (late 2013), something got broken
enough that I could not login to my account. I saw this as a good
opportunity to finally try something other than GNOME as my primary
environment. I have before tinkered with other GUI environments (XFCE,
KDE 3, FluxBox, LXDE, and most recently, Window Maker), but none
lasted very long. But I think this time I will actually abandon GNOME
permanently, after nearly a decade of use.&lt;/p&gt;
&lt;p&gt;I been playing with &lt;a class="reference external" href="http://dwm.suckless.org"&gt;dwm&lt;/a&gt; for the past several weeks, and the experience
has convinced me to stay. I am attracted to the philosophy of
minimalism, though I find they do take things a bit far in requiring
users to tinker with C source code in order to configure it. Luckily
it's not hard, and there's examples out there. It just takes a while
since there isn't a comprehensive guide I could find.&lt;/p&gt;
&lt;p&gt;For my login manager, I use &lt;a class="reference external" href="http://www.freedesktop.org/wiki/Software/LightDM"&gt;LightDM&lt;/a&gt;. I added this line to its
configuration, in &lt;tt class="docutils literal"&gt;[SeatDefaults]&lt;/tt&gt; section:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
greeter-hide-users=false
&lt;/pre&gt;
&lt;p&gt;It removes the need to manually enter my username each time I want to
login.&lt;/p&gt;
&lt;p&gt;Reason I'm not using GDM? I wanted something light, which also
wouldn't pull in dozens of packages that I won't use. For example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo apt-get install --no-install-recommends gdm3
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  bluez dconf-cli evolution-data-server evolution-data-server-common
  gir1.2-accountsservice-1.0 gir1.2-caribou-1.0 gir1.2-gck-1 gir1.2-gcr-3
  gir1.2-gdesktopenums-3.0 gir1.2-gdm3 gir1.2-gkbd-3.0 gir1.2-gmenu-3.0
  gir1.2-gnomebluetooth-1.0 gir1.2-gnomedesktop-3.0 gir1.2-ibus-1.0
  gir1.2-mutter-3.0 gir1.2-nmgtk-1.0 gir1.2-polkit-1.0 gir1.2-soup-2.4
  gir1.2-telepathyglib-0.12 gir1.2-telepathylogger-0.2 gir1.2-xkl-1.0 gjs
  gnome-bluetooth gnome-settings-daemon gnome-shell gnome-shell-common
  gnome-themes-standard gnome-themes-standard-data libbluetooth3 libcamel-1.2-43
  libcaribou-common libcaribou0 libebackend-1.2-6 libebook-1.2-14
  libebook-contacts-1.2-0 libecal-1.2-15 libedata-book-1.2-17 libedata-cal-1.2-20
  libedataserver-1.2-17 libgdata-common libgdata13 libgdm1 libgnome-menu-3-0
  libgoa-1.0-0 libgoa-1.0-common libgweather-3-3 libgweather-common libibus-1.0-5
  libical0 libmission-control-plugins0 libmutter0b liboauth0 libopenobex1
  libpackagekit-glib2-16 libpulse-mainloop-glib0 librest-0.7-0 libsoup-gnome2.4-1
  libtelepathy-glib0 libtelepathy-logger3 libwacom-common libwacom2 mutter-common
  obex-data-server obexd-client telepathy-mission-control-5
Suggested packages:
  evolution evolution-data-server-dbg gnome-orca gnome-user-share telepathy-haze
Recommended packages:
  zenity gvfs-backends gnome-control-center pulseaudio gkbd-capplet gnome-contacts
  gnome-user-guide gtk2-engines-pixbuf gnome-accessibility-themes packagekit
The following NEW packages will be installed:
  bluez dconf-cli evolution-data-server evolution-data-server-common gdm3
  gir1.2-accountsservice-1.0 gir1.2-caribou-1.0 gir1.2-gck-1 gir1.2-gcr-3
  gir1.2-gdesktopenums-3.0 gir1.2-gdm3 gir1.2-gkbd-3.0 gir1.2-gmenu-3.0
  gir1.2-gnomebluetooth-1.0 gir1.2-gnomedesktop-3.0 gir1.2-ibus-1.0
  gir1.2-mutter-3.0 gir1.2-nmgtk-1.0 gir1.2-polkit-1.0 gir1.2-soup-2.4
  gir1.2-telepathyglib-0.12 gir1.2-telepathylogger-0.2 gir1.2-xkl-1.0 gjs
  gnome-bluetooth gnome-settings-daemon gnome-shell gnome-shell-common
  gnome-themes-standard gnome-themes-standard-data libbluetooth3 libcamel-1.2-43
  libcaribou-common libcaribou0 libebackend-1.2-6 libebook-1.2-14
  libebook-contacts-1.2-0 libecal-1.2-15 libedata-book-1.2-17 libedata-cal-1.2-20
  libedataserver-1.2-17 libgdata-common libgdata13 libgdm1 libgnome-menu-3-0
  libgoa-1.0-0 libgoa-1.0-common libgweather-3-3 libgweather-common libibus-1.0-5
  libical0 libmission-control-plugins0 libmutter0b liboauth0 libopenobex1
  libpackagekit-glib2-16 libpulse-mainloop-glib0 librest-0.7-0 libsoup-gnome2.4-1
  libtelepathy-glib0 libtelepathy-logger3 libwacom-common libwacom2 mutter-common
  obex-data-server obexd-client telepathy-mission-control-5
0 upgraded, 67 newly installed, 0 to remove and 45 not upgraded.
Need to get 0 B/31.0 MB of archives.
After this operation, 90.8 MB of additional disk space will be used.
&lt;/pre&gt;
&lt;p&gt;GNOME philosophy tends towards tight integration, leading to things
being not as modular as I would like: how could a display manager end
up depending on a Contacts tool, or the Bluetooth stack. It may
be just how it was built in Debian, but that also means there
were build options that allowed such tight coupling in the first
place. GDM has served me well for years, but I'm not interested in all
those tools it brings with.&lt;/p&gt;
&lt;p&gt;Anyways, enough with that. I added a custom &lt;tt class="docutils literal"&gt;.desktop&lt;/tt&gt; file which will
become selectable on LightDM UI:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat /usr/share/xsessions/custom.desktop
[Desktop Entry]
Name=Custom
Exec=/etc/X11/Xsession
Type=XSession
&lt;/pre&gt;
&lt;p&gt;On selecting the entry labeled &lt;strong&gt;Custom&lt;/strong&gt; that appears on LightDM,
and logging in, the following will get executed (&lt;a class="reference external" href="https://bitbucket.org/tshepang/custom/src/tip/xsession"&gt;~/.xsession&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# apps&lt;/span&gt;
xfce4-terminal --hide-menubar --tab --tab --tab &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
firefox &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
nautilus --no-desktop &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
nm-applet &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
trayer --edge top --align right --widthtype request --distance &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
quodlibet &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;twork&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
   icedove &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# settings&lt;/span&gt;
xset b off
xmodmap -e &lt;span class="s2"&gt;&amp;quot;clear Lock&amp;quot;&lt;/span&gt;
xmodmap -e &lt;span class="s2"&gt;&amp;quot;keycode 66 = Super_L&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# host-specific settings&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;twork&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    xrandr --output VGA-0 --output DVI-0 --right-of VGA-0
&lt;span class="k"&gt;else&lt;/span&gt;
    synclient &lt;span class="nv"&gt;TapButton1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;TapButton2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="nv"&gt;TapButton3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="nv"&gt;MaxDoubleTapTime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
    syndaemon -dti &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# clock&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; date +&lt;span class="s2"&gt;&amp;quot;%F %R&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; acpi -a &lt;span class="p"&gt;|&lt;/span&gt; grep off-line &amp;gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nv"&gt;battery&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; python -c &lt;span class="s2"&gt;&amp;quot;print(\&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;acpi&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;.split(&amp;#39;,&amp;#39;)[1].strip())&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
        xsetroot -name &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$battery&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot; | &amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$datetime&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        xsetroot -name &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$datetime&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    sleep 1m
&lt;span class="k"&gt;done&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;

&lt;span class="nb"&gt;exec&lt;/span&gt; dwm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, this is what my dwm config changes look like (&lt;a class="reference external" href="https://bitbucket.org/tshepang/custom/src/tip/config.def.h"&gt;config.def.h&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
diff --git a/config.def.h b/config.def.h
index 77ff358..78af5d6 100644
--- a/config.def.h
+++ b/config.def.h
&amp;#64;&amp;#64; -14,12 +14,15 &amp;#64;&amp;#64; static const Bool showbar           = True;     /*
False means no bar */
 static const Bool topbar            = True;     /* False means bottom
 bar */

 /* tagging */
-static const char *tags[] = { &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;, &amp;quot;8&amp;quot;,
&amp;quot;9&amp;quot; };
+static const char *tags[] = { &amp;quot;web&amp;quot;, &amp;quot;files&amp;quot;, &amp;quot;terminal&amp;quot;, &amp;quot;misc&amp;quot; };

 static const Rule rules[] = {
-       /* class      instance    title       tags mask     isfloating
        monitor */
-       { &amp;quot;Gimp&amp;quot;,     NULL,       NULL,       0,
        True,        -1 },
-       { &amp;quot;Firefox&amp;quot;,  NULL,       NULL,       1 &amp;lt;&amp;lt; 8,
        False,       -1 },
+  /* class             instance  title  tags mask  isfloating
   monitor */
+  { &amp;quot;Iceweasel&amp;quot;,       NULL,     NULL,  1 &amp;lt;&amp;lt; 0,    False,       -1 },
+  { &amp;quot;trayer&amp;quot;,          NULL,     NULL,  1 &amp;lt;&amp;lt; 0,    False,       -1 },
+  { &amp;quot;Nautilus&amp;quot;,        NULL,     NULL,  1 &amp;lt;&amp;lt; 1,    False,       -1 },
+  { &amp;quot;Xfce4-terminal&amp;quot;,  NULL,     NULL,  1 &amp;lt;&amp;lt; 2,    False,       -1 },
+  { &amp;quot;Quodlibet&amp;quot;,       NULL,     NULL,  1 &amp;lt;&amp;lt; 3,    False,       -1 },
 };

 /* layout(s) */
&amp;#64;&amp;#64; -35,7 +38,7 &amp;#64;&amp;#64; static const Layout layouts[] = {
 };

 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
        { MODKEY,                       KEY,      view,           {.ui
        = 1 &amp;lt;&amp;lt; TAG} }, \
        { MODKEY|ControlMask,           KEY,      toggleview,     {.ui
        = 1 &amp;lt;&amp;lt; TAG} }, \
&amp;#64;&amp;#64; -47,7 +50,7 &amp;#64;&amp;#64; static const Layout layouts[] = {

 /* commands */
 static const char *dmenucmd[] = { &amp;quot;dmenu_run&amp;quot;, &amp;quot;-fn&amp;quot;, font, &amp;quot;-nb&amp;quot;,
 normbgcolor, &amp;quot;-nf&amp;quot;, normfgcolor, &amp;quot;-sb&amp;quot;, selbgcolor, &amp;quot;-sf&amp;quot;,
 selfgcolor, NULL };
-static const char *termcmd[]  = { &amp;quot;uxterm&amp;quot;, NULL };
+static const char *termcmd[]  = { &amp;quot;xfce4-terminal&amp;quot;, &amp;quot;--hide-menubar&amp;quot;
};

 static Key keys[] = {
        /* modifier                     key        function
        argument */
&lt;/pre&gt;
&lt;p&gt;Note that this diff is against the Debian package (version &lt;strong&gt;6.0-6&lt;/strong&gt;). I
could not change the modifier key with the upstream version of dwm.&lt;/p&gt;
&lt;p&gt;You will notice that I'm still using one major GNOME package,
Nautilus, the file browser. It remains &lt;a class="reference external" href="http://tshepang.net/favorite-floss"&gt;my favorite&lt;/a&gt;.&lt;/p&gt;
</content><category term="GNOME"></category><category term="Debian"></category></entry><entry><title>pleasantly surprised by replace-string (Emacs)</title><link href="http://tshepang.net/pleasantly-surprised-by-replace-string-emacs" rel="alternate"></link><published>2013-11-26T00:00:00+02:00</published><updated>2013-11-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-26:/pleasantly-surprised-by-replace-string-emacs</id><summary type="html">&lt;p&gt;If you want to replace some string in Emacs, the primary function to
use is &lt;strong&gt;replace-string&lt;/strong&gt; (I think). If the strings, 'old' and 'new'
are provided, it will, by default, replace all occurrences, regardless
of case, while also preserving case of whatever 'old' was. It's
magical yes, but who doesn't …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to replace some string in Emacs, the primary function to
use is &lt;strong&gt;replace-string&lt;/strong&gt; (I think). If the strings, 'old' and 'new'
are provided, it will, by default, replace all occurrences, regardless
of case, while also preserving case of whatever 'old' was. It's
magical yes, but who doesn't like some magic once in a while,
especially when it's so convenient... and so sane.&lt;/p&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Replacement-and-Case.html#Replacement-and-Case"&gt;official description&lt;/a&gt;)&lt;/p&gt;
</content><category term="Emacs"></category></entry><entry><title>links 2013-11-18</title><link href="http://tshepang.net/links-2013-11-18" rel="alternate"></link><published>2013-11-18T00:00:00+02:00</published><updated>2013-11-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-18:/links-2013-11-18</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://joey.hess.usesthis.com"&gt;an impressively modest computing (and living) setup&lt;/a&gt; - this is
probably the most respected of Debian Developers&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=66;att=0;bug=718323"&gt;a nice explanation&lt;/a&gt; of why a specific Creative Commons license
isn't suitable for Debian (&lt;a class="reference external" href="http://bugs.debian.org/718323"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;since &lt;a class="reference external" href="http://www.etla.fi/en/columns/worth-brand"&gt;it's hard to trust any one of the major brand valuators&lt;/a&gt;, I
will have to rely on &lt;a class="reference external" href="http://www.rankingthebrands.com"&gt;an …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://joey.hess.usesthis.com"&gt;an impressively modest computing (and living) setup&lt;/a&gt; - this is
probably the most respected of Debian Developers&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=66;att=0;bug=718323"&gt;a nice explanation&lt;/a&gt; of why a specific Creative Commons license
isn't suitable for Debian (&lt;a class="reference external" href="http://bugs.debian.org/718323"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;since &lt;a class="reference external" href="http://www.etla.fi/en/columns/worth-brand"&gt;it's hard to trust any one of the major brand valuators&lt;/a&gt;, I
will have to rely on &lt;a class="reference external" href="http://www.rankingthebrands.com"&gt;an aggregator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://rhodesmill.org/brandon/2012/reading-planet-python"&gt;on the limitations of Planet Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jessenoller.com/blog/2009/02/05/ssh-programming-with-paramiko-completely-different"&gt;nice paramiko tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="links"></category></entry><entry><title>hierarchy of individuals in FLOSS projects</title><link href="http://tshepang.net/hierarchy-of-individuals-in-floss-projects" rel="alternate"></link><published>2013-11-16T00:00:00+02:00</published><updated>2013-11-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-11-16:/hierarchy-of-individuals-in-floss-projects</id><summary type="html">&lt;p&gt;From top to bottom:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Author&lt;/p&gt;
&lt;p&gt;Sometimes referred to as primary author, to distinguish between
other people who have contributed to the project, this is the
creator. At times, someone in the lower ranks of the hierarchy
happen to be more active in the project than the Author, in which
case …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;From top to bottom:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Author&lt;/p&gt;
&lt;p&gt;Sometimes referred to as primary author, to distinguish between
other people who have contributed to the project, this is the
creator. At times, someone in the lower ranks of the hierarchy
happen to be more active in the project than the Author, in which
case the Author often makes them Maintainer, explicitly or
not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Maintainer&lt;/p&gt;
&lt;p&gt;This is someone ultimately responsible for the project: handles bug
reports, decides which changes to accept from lower contributors,
and performs releases. Note that there can be more than one, unlike
is the case with Author.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Contributor&lt;/p&gt;
&lt;p&gt;This is someone who submits improvements to project, either
documentation or code. It can be a one-time contribution, but in
case where this is frequent and spans a certain amount of time, she
can move onto becoming a Maintainer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Bug Reporter&lt;/p&gt;
&lt;p&gt;This is someone who suggests improvements to the project. Depending
on the project, any of these are used: a mailing list, an IRC
channel, a social networking service, email, or a dedicated
Issue/Bug tracking system can be used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;User&lt;/p&gt;
&lt;p&gt;What the user is depends on the project, of course. Just to be
clear, in the case of Python project, the user is a software
developer, not the person who ends up using something written in
the language.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The 'individual' in title means I'm ignoring non-human entities, like
companies. I'm also ignoring non-core activities, like marketers or
sysadmins, or even teachers. Those are not going to be easy to fit in
this simple story, and are not common to that many FLOSS (Free/Libre
and Open Source) projects.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;In the case of &lt;a class="reference external" href="http://linux.togaware.com/survivor/wajig.html"&gt;wajig&lt;/a&gt;, I am the Maintainer and Graham Williams is the
Author. In the case of &lt;a class="reference external" href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;, a far more important project, &lt;a class="reference external" href="http://bitprophet.org/blog/2012/09/29/paramiko-and-ssh"&gt;Jeff
Forcier is the Maintainer&lt;/a&gt;. The project was however created by
&lt;a class="reference external" href="http://robey.lag.net"&gt;Robey Pointer&lt;/a&gt;, and &lt;a class="reference external" href="http://robey.lag.net/2009/02/16/paramiko-is-on-github-now.html"&gt;he did not imagine&lt;/a&gt; it would end
up being THE Python SSH library today.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>a bit of benchmarking</title><link href="http://tshepang.net/a-bit-of-benchmarking" rel="alternate"></link><published>2013-10-27T00:00:00+02:00</published><updated>2013-10-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-27:/a-bit-of-benchmarking</id><summary type="html">&lt;p class="first last"&gt;comparing performance of my laptop and my work machine&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I was curious how my home machine performs compared to my work
machine. Each of these have 4 logical processors (and 8GB of RAM), so
are sort of comparable. I also added the &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=25b4887810cc"&gt;DigitalOcean&lt;/a&gt; VPS with
those specs (&lt;a class="reference external" href="https://www.digitalocean.com/pricing"&gt;currently $80 per month&lt;/a&gt;) because... why not.&lt;/p&gt;
&lt;div class="section" id="machine-specs"&gt;
&lt;h2&gt;Machine Specs&lt;/h2&gt;
&lt;p&gt;Each machine runs Debian testing (codename &amp;quot;jessie&amp;quot;). Following is the
output of these commands for each machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
uname --all
cat /proc/cpuinfo | sed --quiet '5p'
&lt;/pre&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU/Linux
model name      : Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux twork 3.10-3-amd64 #1 SMP Debian 3.10.11-1 (2013-09-10) x86_64 GNU/Linux
model name      : AMD Phenom(tm) II X4 970 Processor
&lt;/pre&gt;
&lt;p&gt;DigitalOcean VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Linux tcloud 3.11-1-amd64 #1 SMP Debian 3.11.5-1 (2013-10-17) x86_64 GNU/Linux
model name      : QEMU Virtual CPU version 1.0
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="cpython-benchmarks"&gt;
&lt;h2&gt;CPython benchmarks&lt;/h2&gt;
&lt;p&gt;I ran two benchmarks, both from the latest VCS version of CPython,
development branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ hg identify --id --branch
b6a1a78818fe default
&lt;/pre&gt;
&lt;div class="section" id="build"&gt;
&lt;h3&gt;Build&lt;/h3&gt;
&lt;p&gt;Here's the command I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make distclean; time (./configure &amp;amp;&amp;amp; make --silent --jobs=4)
&lt;/pre&gt;
&lt;div class="section" id="results"&gt;
&lt;h4&gt;Results&lt;/h4&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m11.687s
user    3m18.104s
sys     0m9.964s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m2.707s
user    2m24.200s
sys     0m12.280s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m30.931s
user    3m7.272s
sys     0m16.592s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="test-suite"&gt;
&lt;h3&gt;Test suite&lt;/h3&gt;
&lt;p&gt;Here's the command I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
time ./python -m test --multiprocess=0
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;--multiprocess=0&lt;/strong&gt; means that there will be 6 tests run in parallel;
that is the number logical cores (4 in my case) + 2 (to avoid waiting
too long for tests which are largely idle)&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;Results&lt;/h4&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    3m42.571s
user    7m13.124s
sys     0m33.320s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m29.957s
user    4m9.052s
sys     0m27.364s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m19.174s
user    5m5.444s
sys     0m40.008s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="linux-kernel-build"&gt;
&lt;h2&gt;Linux kernel build&lt;/h2&gt;
&lt;p&gt;Just for kicks, I decided to check how long building Linux would take;
for this, I used latest 'final' release from Linus' git tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git log -1
commit 6e4664525b1db28f8c4e1130957f70a94c19213e
Author: Linus Torvalds &amp;lt;torvalds&amp;#64;linux-foundation.org&amp;gt;
Date:   Mon Sep 2 13:46:10 2013 -0700

Linux 3.11
&lt;/pre&gt;
&lt;p&gt;Here's the commands I used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make distclean &amp;amp;&amp;amp; make defconfig &amp;amp;&amp;amp; time make
&lt;/pre&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;Home machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    6m11.622s
user    21m2.664s
sys     1m15.324s
&lt;/pre&gt;
&lt;p&gt;Work machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    2m40.275s
user    8m55.624s
sys     0m42.860s
&lt;/pre&gt;
&lt;p&gt;VPS:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
real    3m41.240s
user    12m21.120s
sys     1m17.844s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;My work machine is faster than the DigitalOcean offering of comparable
specs, and much faster than my home machine, a laptop.&lt;/p&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://stackoverflow.com/a/556411/321731"&gt;detailed explanation of the output&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content><category term="Python"></category></entry><entry><title>projects with excellent documentation</title><link href="http://tshepang.net/projects-with-excellent-documentation" rel="alternate"></link><published>2013-10-19T00:00:00+02:00</published><updated>2013-10-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-19:/projects-with-excellent-documentation</id><summary type="html">&lt;p&gt;Here is a list of projects whose documentation I found to be
highly-detailed and well-written.&lt;/p&gt;
&lt;div class="section" id="big"&gt;
&lt;h2&gt;big&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://cmgm.stanford.edu/classes/unix/emacs.html"&gt;introductory tutorial of GNU Emacs&lt;/a&gt; (looks a lot better when
run from within Emacs), is written in a very gentle and careful way;
it's among the best tutorials I've seen.  Same applies to …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Here is a list of projects whose documentation I found to be
highly-detailed and well-written.&lt;/p&gt;
&lt;div class="section" id="big"&gt;
&lt;h2&gt;big&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://cmgm.stanford.edu/classes/unix/emacs.html"&gt;introductory tutorial of GNU Emacs&lt;/a&gt; (looks a lot better when
run from within Emacs), is written in a very gentle and careful way;
it's among the best tutorials I've seen.  Same applies to &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs"&gt;the Emacs
manual&lt;/a&gt;, which I'm tempted to call the best I've read yet. It
really, really goes into painstaking detail, and seems to have been
written by professional technical writers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org"&gt;CPython&lt;/a&gt; - this is quite massive, so although quality is generally
high, it varies depending on where you are; &lt;a class="reference external" href="http://docs.python.org/3/library/collections"&gt;an example of
excellence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/docs.html"&gt;sqlite3&lt;/a&gt; - quite extensive, especially for an embeddable DBMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="small"&gt;
&lt;h2&gt;small&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://fedorahosted.org/suds/wiki/Documentation"&gt;Suds&lt;/a&gt; - multiple, well-written examples&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nongnu.org/rdiff-backup/examples.html"&gt;rdiff-backup usage examples&lt;/a&gt; - much smaller than the others listed
here, but nevertheless deserves mention because it's both gentle and
thorough&lt;/li&gt;
&lt;li&gt;While working on giving a product of ours &lt;a class="reference external" href="http://tshepang.net/me-got-meself-another-coding-job"&gt;at work&lt;/a&gt; the ability to
speak &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Socketcan"&gt;SocketCAN&lt;/a&gt;, I really appreciated its &lt;a class="reference external" href="http://www.kernel.org/doc/Documentation/networking/can.txt"&gt;official
documentation&lt;/a&gt;. It is very well-written and thorough (though it
assumes prior knowledge of working with Linux sockets).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="list"></category><category term="Emacs"></category><category term="Python"></category></entry><entry><title>project of note: git-cola</title><link href="http://tshepang.net/project-of-note-git-cola" rel="alternate"></link><published>2013-10-17T00:00:00+02:00</published><updated>2013-10-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-17:/project-of-note-git-cola</id><summary type="html">&lt;p&gt;I use &lt;a class="reference external" href="http://git-cola.github.io"&gt;git-cola&lt;/a&gt; mostly when I want to commit various hunks separately;
it makes that task real easy.&lt;/p&gt;
&lt;p&gt;I was impressed by its equivalent functionality for the git
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--amend&lt;/span&gt;&lt;/tt&gt; option the first time I saw it. If you click on the
&lt;strong&gt;Amend Last Commit&lt;/strong&gt; radio button, it actually displays the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use &lt;a class="reference external" href="http://git-cola.github.io"&gt;git-cola&lt;/a&gt; mostly when I want to commit various hunks separately;
it makes that task real easy.&lt;/p&gt;
&lt;p&gt;I was impressed by its equivalent functionality for the git
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--amend&lt;/span&gt;&lt;/tt&gt; option the first time I saw it. If you click on the
&lt;strong&gt;Amend Last Commit&lt;/strong&gt; radio button, it actually displays the commit
message of that previous commit.  I was surprised to see it,
especially since on clicking that option, I quickly ran to the
command-line to copy that commit message, only to see the message
waiting for me, ready to be edited away.&lt;/p&gt;
&lt;p&gt;Another feature I really like is that if you attempt to commit something
without staging it first, instead of just complaining, if offers to
&lt;em&gt;stage and commit&lt;/em&gt; all in one click. Nice.&lt;/p&gt;
&lt;p&gt;These functionalities are real simple, but they really make for a
pleasant user experience. Pity I haven't seen a tool as easy to use in
the land of Mercurial. There, I use the command-line &lt;tt class="docutils literal"&gt;hg record&lt;/tt&gt;
which isn't as pleasant.&lt;/p&gt;
</content><category term="project-of-note"></category><category term="VCS"></category></entry><entry><title>easing switching between Git and Mercurial</title><link href="http://tshepang.net/easing-switching-between-git-and-mercurial" rel="alternate"></link><published>2013-10-16T00:00:00+02:00</published><updated>2013-10-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-16:/easing-switching-between-git-and-mercurial</id><summary type="html">&lt;p&gt;Each chance I get, I use Mercurial (e.g. personal stuff), and use Git
when I don't have much of a choice (e.g. FLOSS and work). That is, I
use both quite a lot, and too often I find myself running commands for
one while on another's repository... error …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Each chance I get, I use Mercurial (e.g. personal stuff), and use Git
when I don't have much of a choice (e.g. FLOSS and work). That is, I
use both quite a lot, and too often I find myself running commands for
one while on another's repository... error. I therefore decided to
ease the pain my creating &lt;a class="reference external" href="https://bitbucket.org/tshepang/scripts/src/tip/vcs.py"&gt;a script&lt;/a&gt; which checks which VCS system
I'm on, and displays the relevant command.&lt;/p&gt;
&lt;p&gt;Some examples of usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;hg repo&amp;gt;
$ ./vcs.py --log
hg log --no-merges --patch --stat --verbose
$ &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;git repo&amp;gt;
$ ./vcs.py --log
git log --no-merges --patch --stat
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are the relevant BASH aliases:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --branch)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --diff)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --log)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --push)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --status)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --pull)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --commit)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --checkout)&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;vr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$(~/scripts/vcs.py --revert)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes my life so much easier, since I no longer have to care
which VCS I'm on, at least for the most common of commands. I am
pleased with self.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;As a sidenote, if you want to cycle between the changesets (Mercurial
term) or Commits (Git term), use the following search term on your
pager (tested with &lt;a class="reference external" href="http://www.greenwoodsoftware.com/less"&gt;less&lt;/a&gt;, which is Debian/Ubuntu default pager):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(^changeset)|(^commit)
&lt;/pre&gt;
</content><category term="Python"></category><category term="VCS"></category></entry><entry><title>developer of note: Armin Rigo</title><link href="http://tshepang.net/developer-of-note-armin-rigo" rel="alternate"></link><published>2013-10-13T00:00:00+02:00</published><updated>2013-10-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-13:/developer-of-note-armin-rigo</id><summary type="html">&lt;p&gt;Co-founder and lead developer of arguably the most exciting project in
the Python ecosystem, &lt;a class="reference external" href="http://pypy.org"&gt;PyPy&lt;/a&gt;.  He is also credited with doing
the bulk of the work in building its &lt;a class="reference external" href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain"&gt;legendary RPython translation
framework&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;What inspired this post (originally published 2013-03-31) is the
incredible honor given by the great Raymond Hettinger …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Co-founder and lead developer of arguably the most exciting project in
the Python ecosystem, &lt;a class="reference external" href="http://pypy.org"&gt;PyPy&lt;/a&gt;.  He is also credited with doing
the bulk of the work in building its &lt;a class="reference external" href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain"&gt;legendary RPython translation
framework&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;What inspired this post (originally published 2013-03-31) is the
incredible honor given by the great Raymond Hettinger in &lt;a class="reference external" href="http://pyvideo.org/video/1669/keynote-3"&gt;one of his
PyCon US 2013 talks&lt;/a&gt;, where he deems him &amp;quot;probably the smartest
person I have ever met&amp;quot;.  Given that there isn't a shortage of
brilliance in the Python community, that's some serious kudos.&lt;/p&gt;
&lt;p&gt;Also, here is what one of speakers at that conferences said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... Armin Rigo is awesome - he's perhaps the only incredibly
intelligent person involved with programming I've met who seemed
genuinely happy about life (and not grumpy at all).&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://ashfall.github.io/blog/2013/03/23/pycon-2013-down-the-rabbit-hole"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="developer-of-note"></category><category term="Python"></category><category term="quote"></category></entry><entry><title>my first Debian upload</title><link href="http://tshepang.net/my-first-debian-upload" rel="alternate"></link><published>2013-10-13T00:00:00+02:00</published><updated>2013-10-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-13:/my-first-debian-upload</id><summary type="html">&lt;p&gt;Output of my first ever upload to Debian (using &lt;a class="reference external" href="http://packages.debian.org/dput"&gt;dput&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Trying to upload package to ftp-master (ftp.upload.debian.org)
Checking signature on .changes
gpg: Signature made Sun 13 Oct 2013 09:21:35 SAST using RSA key ID 500BF4A2
gpg: Good signature from &amp;quot;Tshepang Lekhonkhobe &amp;lt;tshepang&amp;#64;gmail.com&amp;gt;&amp;quot;
Good …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Output of my first ever upload to Debian (using &lt;a class="reference external" href="http://packages.debian.org/dput"&gt;dput&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Trying to upload package to ftp-master (ftp.upload.debian.org)
Checking signature on .changes
gpg: Signature made Sun 13 Oct 2013 09:21:35 SAST using RSA key ID 500BF4A2
gpg: Good signature from &amp;quot;Tshepang Lekhonkhobe &amp;lt;tshepang&amp;#64;gmail.com&amp;gt;&amp;quot;
Good signature on ../wajig_2.10_amd64.changes.
Checking signature on .dsc
gpg: Signature made Sun 13 Oct 2013 09:21:31 SAST using RSA key ID 500BF4A2
gpg: Good signature from &amp;quot;Tshepang Lekhonkhobe &amp;lt;tshepang&amp;#64;gmail.com&amp;gt;&amp;quot;
Good signature on ../wajig_2.10.dsc.
Uploading to ftp-master (via ftp to ftp.upload.debian.org):
  Uploading wajig_2.10.dsc: done.
  Uploading wajig_2.10.tar.gz: done.
  Uploading wajig_2.10_all.deb: done.
  Uploading wajig_2.10_amd64.changes: done.
Successfully uploaded packages.
&lt;/pre&gt;
&lt;p&gt;(&lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20131013T074831Z.html"&gt;the package was accepted within 30 minutes&lt;/a&gt;)&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;And, yeah, that means &lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=12;bug=723802"&gt;I am now Debian Maintainer&lt;/a&gt;. Other than
giving me more freedom, this helps reduce the workload on &lt;a class="reference external" href="http://dirk.eddelbuettel.com"&gt;Dirk
Eddelbuettel&lt;/a&gt;, who has been uploading wajig for several years
now. He even &lt;a class="reference external" href="http://lists.debian.org/debian-newmaint/2013/09/msg00029.html"&gt;became an Advocate&lt;/a&gt; for &lt;a class="reference external" href="http://lists.debian.org/debian-newmaint/2013/09/msg00028.html"&gt;my application&lt;/a&gt;.  This
process started several weeks ago when a Debian Developer named
&lt;a class="reference external" href="http://mithrandi.net/blog"&gt;Tristan Seligmann&lt;/a&gt; signed my key (before applying to be a
Maintainer, a Debian Developer needs to sign your key as a way of
verifying your identity).&lt;/p&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>my first server</title><link href="http://tshepang.net/my-first-server" rel="alternate"></link><published>2013-10-10T00:00:00+02:00</published><updated>2013-10-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-10:/my-first-server</id><summary type="html">&lt;p&gt;The closest I ever came to needing own server is for hosting &lt;a class="reference external" href="http://tshepang.net/tags.html#blogging-ref"&gt;my
blog&lt;/a&gt;, but I've had plenty of gratis services available to me, latest
being &lt;a class="reference external" href="http://pages.github.com"&gt;GitHub Pages&lt;/a&gt;. When &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=25b4887810cc"&gt;DigitalOcean&lt;/a&gt; &lt;a class="reference external" href="http://thechangelog.com/107"&gt;offered a $10 credit&lt;/a&gt;
(enough to buy two months of the most basic offering... 1 CPU core,
0.5GB RAM …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The closest I ever came to needing own server is for hosting &lt;a class="reference external" href="http://tshepang.net/tags.html#blogging-ref"&gt;my
blog&lt;/a&gt;, but I've had plenty of gratis services available to me, latest
being &lt;a class="reference external" href="http://pages.github.com"&gt;GitHub Pages&lt;/a&gt;. When &lt;a class="reference external" href="https://www.digitalocean.com/?refcode=25b4887810cc"&gt;DigitalOcean&lt;/a&gt; &lt;a class="reference external" href="http://thechangelog.com/107"&gt;offered a $10 credit&lt;/a&gt;
(enough to buy two months of the most basic offering... 1 CPU core,
0.5GB RAM, 20GB storage), I thought why not.&lt;/p&gt;
&lt;p&gt;As for the experience, I was quite impressed by the performance. It's
no wonder why the service receives so much praise from all over the
place; it's quite a lot for that ridiculous $5 fee. I've never
experienced storage this fast... my laptop has a hard-drive and the
SSD on my work machine is unimpressive. The CPU also appears powerful,
though I haven't stressed it yet.&lt;/p&gt;
&lt;p&gt;I've spent the last few hours setting it up, after which I created a
snapshot, which is something to restore from in case of trouble. I
even destroyed and re-created it, just to make sure it works. This was
the second-worst experience playing with this service... it's so damn
slow! And by that, I mean destroying a Droplet (their name for the VM)
takes well over a minute, same as re-creating it. Maybe I'm being too
demanding, maybe it can't be helped, especially given the price, but
it's still slow as fuck.&lt;/p&gt;
&lt;p&gt;What about the worst experience? It's the Console Access, which allows
for recovery in case of issues. It was painful to use since it's so
slow, and kept inserting wrong characters in place of the username. It
also tends to fail with the message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Failed to establish a connection to the console. Please reload.
&lt;/pre&gt;
&lt;p&gt;It's not a big issue anyways, since this will be a rarely-used
feature.&lt;/p&gt;
&lt;p&gt;And no, I still don't know yet what I'll use this for. Maybe I'll host
my blog there, moving it from the GitHub service. Regardless, it's
nice to have a machine accesible from anywhere on the web.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>links 2013-10-04</title><link href="http://tshepang.net/links-2013-10-04" rel="alternate"></link><published>2013-10-04T00:00:00+02:00</published><updated>2013-10-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-10-04:/links-2013-10-04</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lists.debian.org/debian-project/2013/08/msg00011.html"&gt;a nicely summarised survey of fresh Debian contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-gtk-gnome/2013/09/msg00014.html"&gt;excellent response to an unpleasant reply&lt;/a&gt; - &lt;a class="reference external" href="http://tshepang.net/developer-of-note-michael-biebl"&gt;I admire Michael
Biebl&lt;/a&gt;, but don't remember him be this harsh&lt;/li&gt;
&lt;li&gt;I enjoyed watching &lt;a class="reference external" href="http://pyvideo.org/video/2325/skyfield-and-15-years-of-bad-apis"&gt;Skyfield and 15 Years of Bad APIs&lt;/a&gt;, a far more
interesting talk than the earlier &lt;a class="reference external" href="http://pyvideo.org/video/1705/api-design-for-library-authors"&gt;API Design for Library
Authors&lt;/a&gt;. The former …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lists.debian.org/debian-project/2013/08/msg00011.html"&gt;a nicely summarised survey of fresh Debian contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-gtk-gnome/2013/09/msg00014.html"&gt;excellent response to an unpleasant reply&lt;/a&gt; - &lt;a class="reference external" href="http://tshepang.net/developer-of-note-michael-biebl"&gt;I admire Michael
Biebl&lt;/a&gt;, but don't remember him be this harsh&lt;/li&gt;
&lt;li&gt;I enjoyed watching &lt;a class="reference external" href="http://pyvideo.org/video/2325/skyfield-and-15-years-of-bad-apis"&gt;Skyfield and 15 Years of Bad APIs&lt;/a&gt;, a far more
interesting talk than the earlier &lt;a class="reference external" href="http://pyvideo.org/video/1705/api-design-for-library-authors"&gt;API Design for Library
Authors&lt;/a&gt;. The former covers API design only in its 2nd half, and
the latter is exclusively all API talk. The former is also more
polished than the latter, both in terms of video editing, and how
presentable the presentation is.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://tech.dropbox.com/2012/12/welcome-guido/"&gt;great kudos for (the great) Guido van Rossum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names"&gt;Falsehoods Programmers Believe About Names&lt;/a&gt; - interesting&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="links"></category></entry><entry><title>project of note: Valgrind</title><link href="http://tshepang.net/project-of-note-valgrind" rel="alternate"></link><published>2013-09-25T00:00:00+02:00</published><updated>2013-09-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-09-25:/project-of-note-valgrind</id><summary type="html">&lt;p&gt;I have, since using Valgrind (and reading a bit of its documentation)
some years ago, developed much respect for it. It is quite an advanced
tool, and though its primary use is detecting memory leaks, I am here
going to explore its other functionality... calculating the cost of
each line …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have, since using Valgrind (and reading a bit of its documentation)
some years ago, developed much respect for it. It is quite an advanced
tool, and though its primary use is detecting memory leaks, I am here
going to explore its other functionality... calculating the cost of
each line of code in the CPU. This is useful when tuning programs for
performance.&lt;/p&gt;
&lt;p&gt;Following is example code; it accepts 2 arguments, a filename and
text that will be written to that file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;ssize_t&lt;/span&gt; &lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;usage: %s &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;strcpy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="n"&gt;sprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;creat&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;open error: %s (&amp;#39;%s&amp;#39;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;written&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;write error: %s (&amp;#39;%s&amp;#39;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build command (using GCC 4.8.1):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gcc -Wall -pedantic -g play.c -o play
&lt;/pre&gt;
&lt;p&gt;System details:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ uname --all
Linux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU/Linux
$ sudo lshw -class processor
*-cpu
     description: CPU
     product: Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
     vendor: Intel Corp.
     physical id: 4
     bus info: cpu&amp;#64;0
     version: Intel(R) Core(TM) i5-2410M CPU &amp;#64; 2.30GHz
     serial: To Be Filled By O.E.M.
     slot: CPU 1
     size: 2300MHz
     capacity: 4GHz
     width: 64 bits
     clock: 100MHz
     capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr
     pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts
     acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp
     constant_tsc arch_perfmon pebs bts rep_good nopl xtopology
     nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor
     ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2
     x2apic popcnt tsc_deadline_timer xsave avx lahf_lm ida arat epb
     xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
     aes cpufreq
     configuration: cores=2 enabledcores=1 threads=2
&lt;/pre&gt;
&lt;p&gt;Running the resulting binary with &lt;strong&gt;Callgrind&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ valgrind --tool=callgrind --callgrind-out-file=out ./play filename
filecontent
==5308== Callgrind, a call-graph generating cache profiler
==5308== Copyright (C) 2002-2012, and GNU GPL'd, by Josef Weidendorfer
et al.
==5308== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright
info
==5308== Command: ./play filename filecontent
==5308==
==5308== For interactive control, run 'callgrind_control -h'.
==5308==
==5308== Events    : Ir
==5308== Collected : 107520
==5308==
==5308== I   refs:      107,520
$ cat filename
filecontent
&lt;/pre&gt;
&lt;p&gt;And finally, seeing closely the cost of each function call, where
&lt;strong&gt;Ir&lt;/strong&gt; stands for &lt;strong&gt;Instruction cache reads&lt;/strong&gt;, which you can read as
&lt;em&gt;number of CPU instructions&lt;/em&gt;. I have used &lt;tt class="docutils literal"&gt;tree=calling&lt;/tt&gt; option so
that I can see the cost of all operations called by a parent (marked
with a &lt;tt class="docutils literal"&gt;*&lt;/tt&gt;)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ callgrind_annotate --tree=calling out play.c
--------------------------------------------------------------------------------
Profile data file 'out' (creator: callgrind-3.8.1)
--------------------------------------------------------------------------------
I1 cache:
D1 cache:
LL cache:
Timerange: Basic block 0 - 22326
Trigger: Program termination
Profiled target:  ./play filename filecontent (PID 5308, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:
User annotated:   play.c
Auto-annotation:  off

--------------------------------------------------------------------------------
Ir
--------------------------------------------------------------------------------
107,520  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir  file:function
--------------------------------------------------------------------------------

24,113  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x [/lib/x86_64-linux-gnu/ld-2.17.so]
1,053  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-misc.c:_dl_name_match_p (25x) [/lib/x86_64-linux-gnu/ld-2.17.so]
13,423  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:check_match.9345 (88x) [/lib/x86_64-linux-gnu/ld-2.17.so]

18,264  *  /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x [/lib/x86_64-linux-gnu/ld-2.17.so]
38,589  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:do_lookup_x (94x) [/lib/x86_64-linux-gnu/ld-2.17.so]

15,836  *  /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
13  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memmove.c:memcpy&amp;#64;GLIBC_2.2.5 (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
81  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strcasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
6  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcmp.S:strncasecmp (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
7  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/memset.S:memset (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
51,501  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/elf/dl-lookup.c:_dl_lookup_symbol_x (86x) [/lib/x86_64-linux-gnu/ld-2.17.so]
18  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/../memcpy.S:memcpy (1x) [/lib/x86_64-linux-gnu/ld-2.17.so]
67  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/time.c:time (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
67  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/time/../sysdeps/unix/sysv/linux/x86_64/gettimeofday.c:gettimeofday (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
6  &amp;gt;   /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strnlen.S:strnlen (1x) [/lib/x86_64-linux-gnu/libc-2.17.so]
[snip; to be continued]
&lt;/pre&gt;
&lt;p&gt;I have trimmed the output to bring focus to the most interesting
output of all, which is the total cost for each line of my code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[continued]
--------------------------------------------------------------------------------
-- User-annotated source: play.c
--------------------------------------------------------------------------------
Ir

.  #include &amp;lt;string.h&amp;gt;
.  #include &amp;lt;errno.h&amp;gt;
.  #include &amp;lt;stdio.h&amp;gt;
.  #include &amp;lt;fcntl.h&amp;gt;
.  #include &amp;lt;unistd.h&amp;gt;
.
.  int
.  main (int argc, char **argv)
5  {
.      char path[0xFF];
.      char content[0xFF];
.      int fd;
.      ssize_t written;
.
2      if (argc &amp;lt; 3) {
.     fprintf (stderr, &amp;quot;usage: %s &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;\n&amp;quot;, argv[0]);
.     return 1;
.      }
.
7      strcpy (path, argv[1]);
21  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:__strcpy_sse2_unaligned (1x)
799  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
8      sprintf (content, &amp;quot;%s\n&amp;quot;, argv[2]);
1,188  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/stdio-common/sprintf.c:sprintf (1x)
805  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
.
5      fd = creat (path, S_IRWXU);
766  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
7  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:creat (1x)
2      if (fd == -1) {
.     fprintf (stderr, &amp;quot;open error: %s ('%s')\n&amp;quot;, strerror (errno), path);
.     return 1;
.      }
.
10      written = write (fd, content, strlen (content));
7  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/io/../sysdeps/unix/syscall-template.S:write (1x)
14  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/string/../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S:__strlen_sse2_pminub (1x)
1,567  =&amp;gt; /build/eglibc-TepTGA/eglibc-2.17/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
2      if (written == -1) {
.     fprintf (stderr, &amp;quot;write error: %s ('%s')\n&amp;quot;, strerror (errno), path);
.     return 1;
.      }
1      return 0;
2  }

--------------------------------------------------------------------------------
Ir
--------------------------------------------------------------------------------
0  percentage of events annotated
&lt;/pre&gt;
&lt;p&gt;As an aside, note that the indentation is messed up a bit.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;Since I normally work at too high a level to care about CPU
instructions cycles at this detail, I found the exercise eye-opening.&lt;/p&gt;
</content><category term="project-of-note"></category><category term="non-Python"></category></entry><entry><title>mentioning alternatives on a prominent place</title><link href="http://tshepang.net/mentioning-alternatives-on-a-prominent-place" rel="alternate"></link><published>2013-08-27T00:00:00+02:00</published><updated>2013-08-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-27:/mentioning-alternatives-on-a-prominent-place</id><summary type="html">&lt;p&gt;It's an honorable thing to mention alternative and/or competing
technologies on a project website.  It's even more interesting when
this is done on a promiment page. Here's a few of those who do it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ltib.org"&gt;Linux Target Image Builder (LTIB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lzone.de/liferea"&gt;Liferea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://humdi.net/vnstat"&gt;vnStat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wummel.github.io/linkchecker/other.html"&gt;LinkChecker&lt;/a&gt; (linked from main page)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/gittip/www.gittip.com/blob/master/README.md"&gt;Gittip&lt;/a&gt; (project README …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;It's an honorable thing to mention alternative and/or competing
technologies on a project website.  It's even more interesting when
this is done on a promiment page. Here's a few of those who do it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ltib.org"&gt;Linux Target Image Builder (LTIB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lzone.de/liferea"&gt;Liferea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://humdi.net/vnstat"&gt;vnStat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wummel.github.io/linkchecker/other.html"&gt;LinkChecker&lt;/a&gt; (linked from main page)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/gittip/www.gittip.com/blob/master/README.md"&gt;Gittip&lt;/a&gt; (project README file)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonhosted.org/vcs/alternatives.html"&gt;vcs&lt;/a&gt; (a top-level section in the official documentation)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="list"></category></entry><entry><title>packaging my first Qt app</title><link href="http://tshepang.net/packaging-my-first-qt-app" rel="alternate"></link><published>2013-08-27T00:00:00+02:00</published><updated>2013-08-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-27:/packaging-my-first-qt-app</id><summary type="html">&lt;p&gt;Someone asked me to try get some KDE package into Debian. I estimated
that it would take me around 10 hours to get it into good enough shape
before asking some Debian Developer to upload it for me. Here goes
some rough estimates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;hour 1&lt;/strong&gt;: Find documentation on the subject …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Someone asked me to try get some KDE package into Debian. I estimated
that it would take me around 10 hours to get it into good enough shape
before asking some Debian Developer to upload it for me. Here goes
some rough estimates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;hour 1&lt;/strong&gt;: Find documentation on the subject; I got a few after a
quick search, which include the following:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.ubuntu.com/packaging/html"&gt;Ubuntu Packaging Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Debian Packaging Tutorial (from Debian package,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;packaging-tutorial&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 2-3&lt;/strong&gt;: Reading the Debian Packaging Tutorial which led me to
reading &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-source&lt;/span&gt;&lt;/tt&gt; manpage, using &lt;tt class="docutils literal"&gt;dh_make&lt;/tt&gt; to create a
&lt;tt class="docutils literal"&gt;debian/&lt;/tt&gt; skeleton, and modifying the contents of that directory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 4-6&lt;/strong&gt;: Struggling to kill the lintian complaint,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;binary-without-manpage&lt;/span&gt;&lt;/tt&gt;. I went as far as reading the source code
(Perl) that performs the check, but that didn't help much. I could
have saved hours by looking at the &lt;a class="reference external" href="http://www.debian.org/doc/manuals/maint-guide"&gt;Debian New Maintainers' Guide&lt;/a&gt;
earlier. I also added &lt;tt class="docutils literal"&gt;export &lt;span class="pre"&gt;LDFLAGS=-Wl,-z,relro&lt;/span&gt;&lt;/tt&gt; to
&lt;tt class="docutils literal"&gt;debian/rules&lt;/tt&gt; file to kill &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;hardening-no-relro&lt;/span&gt;&lt;/tt&gt; lintian
warning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 7-8&lt;/strong&gt;: Determine what dependencies would be needed by building from
a clean chroot (pbuilder). This was with the help of Debian New
Maintainers' Guide, again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hour 9-10&lt;/strong&gt;: Reading &lt;a class="reference external" href="https://wiki.debian.org/Hardening"&gt;Debian wiki page on Hardening&lt;/a&gt; let me
simplify my packaging further... removing the need to specify
hardening flags explicitly (&lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/commits/f4c7b60157b79847f918e3d8b24a74e6c5bec929"&gt;commit&lt;/a&gt;). I also uploaded the package
to &lt;a class="reference external" href="http://mentors.debian.net"&gt;http://mentors.debian.net&lt;/a&gt;, with the help of
&lt;a class="reference external" href="https://wiki.debian.org/DebianMentorsFaq"&gt;DebianMentorsFaq&lt;/a&gt;. (&lt;strong&gt;2014.03 update&lt;/strong&gt;: it has since been removed
due to lack of activity)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The resulting package now lives at
&lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/src"&gt;https://bitbucket.org/tshepang/ksig/src&lt;/a&gt;. The changes I made, the
actual packaging work, are in &lt;a class="reference external" href="https://bitbucket.org/tshepang/ksig/src/f4c7b60157b79847f918e3d8b24a74e6c5bec929/debian"&gt;this directory&lt;/a&gt;.&lt;/p&gt;
</content><category term="Debian"></category><category term="non-Python"></category></entry><entry><title>links 2013-08-09</title><link href="http://tshepang.net/links-2013-08-09" rel="alternate"></link><published>2013-08-09T00:00:00+02:00</published><updated>2013-08-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-09:/links-2013-08-09</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jashkenas/coffee-script/issues/2864#issuecomment-15159370"&gt;some of the challenges of maintaining a popular FLOSS project&lt;/a&gt; (&lt;a class="reference external" href="http://www.binpress.com/blog/2013/04/14/open-source-cannot-live-on-donations-alone"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/building-gittip/bb770ab13101"&gt;great summary of current status of Gittip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=5916687"&gt;what it would take to build a general purpose search engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.documentfoundation.org/2013/07/22/getting-close-to-libreoffice-4-1"&gt;lots of impressive activity around Libreoffice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://theoatmeal.com/comics/design_hell"&gt;How A Web Design Goes Straight To Hell&lt;/a&gt; - nice humor&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jashkenas/coffee-script/issues/2864#issuecomment-15159370"&gt;some of the challenges of maintaining a popular FLOSS project&lt;/a&gt; (&lt;a class="reference external" href="http://www.binpress.com/blog/2013/04/14/open-source-cannot-live-on-donations-alone"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/building-gittip/bb770ab13101"&gt;great summary of current status of Gittip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=5916687"&gt;what it would take to build a general purpose search engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.documentfoundation.org/2013/07/22/getting-close-to-libreoffice-4-1"&gt;lots of impressive activity around Libreoffice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://theoatmeal.com/comics/design_hell"&gt;How A Web Design Goes Straight To Hell&lt;/a&gt; - nice humor&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Gittip"></category></entry><entry><title>project of note: Sphinx</title><link href="http://tshepang.net/project-of-note-sphinx" rel="alternate"></link><published>2013-08-08T00:00:00+02:00</published><updated>2013-08-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-08-08:/project-of-note-sphinx</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://sphinx-doc.org"&gt;Sphinx&lt;/a&gt; is a tool that is used to generate documentation from
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/ReStructuredText"&gt;reStructuredText&lt;/a&gt; (rST) markup language, and is mainly used in the Python
ecosystem. I honor it much for it is a really powerful system, and I
have come to appreciate it a lot recently, with my work on documentation
of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://sphinx-doc.org"&gt;Sphinx&lt;/a&gt; is a tool that is used to generate documentation from
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/ReStructuredText"&gt;reStructuredText&lt;/a&gt; (rST) markup language, and is mainly used in the Python
ecosystem. I honor it much for it is a really powerful system, and I
have come to appreciate it a lot recently, with my work on documentation
of software that falls under the Pylons project.&lt;/p&gt;
&lt;p&gt;It is a pity that the markup is not as simple as that of the more
popular &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;, but maybe that was out of necessity, since it is
far more advanced: it was initially built as a replacement for the
tools that build CPython documentation, which is quite extensive and
needs lots of rails.&lt;/p&gt;
&lt;p&gt;As an example of that power, have a look at &lt;a class="reference external" href="https://github.com/Pylons/pyramid_tutorials/commit/134190"&gt;these changes I made&lt;/a&gt; for
&lt;a class="reference external" href="http://docs.pylonsproject.org/projects/pyramid_tutorials/en/latest/"&gt;pyramid_tutorials&lt;/a&gt;. In that commit, the feature I used allows you to
include code snippets directly from files, instead of doing the
copy-paste dance, avoiding duplication and rot. This feature is known as
&lt;a class="reference external" href="http://sphinx-doc.org/markup/code.html#directive-literalinclude"&gt;literalinclude&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another feature I recently worked with in the recent past is
&lt;a class="reference external" href="http://sphinx-doc.org/ext/intersphinx.html#confval-intersphinx_mapping"&gt;intersphinx_mapping&lt;/a&gt;. It allows one to generate
references in rST as if those reference were local. For example, if
you wanted to generate a link to the CPython &lt;tt class="docutils literal"&gt;open()&lt;/tt&gt; built-in
function, you would need only specify it as &lt;tt class="docutils literal"&gt;:func:open&lt;/tt&gt;.  This is
as opposed to finding the actual link and specifying it normally.&lt;/p&gt;
&lt;p&gt;One other feature I discovered (but haven't used yet) is &lt;a class="reference external" href="http://sphinx-doc.org/domains.html#info-field-lists"&gt;Info field
lists&lt;/a&gt; feature. To see it in action, visit &lt;a class="reference external" href="https://postgres-py.readthedocs.org/en/latest/#postgres.Postgres.run"&gt;this link&lt;/a&gt;, and then
look at &lt;a class="reference external" href="https://postgres-py.readthedocs.org/en/latest/_modules/postgres.html#Postgres.run"&gt;its markup&lt;/a&gt;. It's gorgeous!&lt;/p&gt;
</content><category term="project-of-note"></category><category term="Python"></category><category term="Pyramid"></category></entry><entry><title>challenges facing Python from other languages</title><link href="http://tshepang.net/challenges-facing-python-from-other-languages" rel="alternate"></link><published>2013-07-23T00:00:00+02:00</published><updated>2013-07-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-23:/challenges-facing-python-from-other-languages</id><summary type="html">&lt;p&gt;The following four points were made in &lt;a class="reference external" href="http://lwn.net/Articles/558172"&gt;this article&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;JavaScript has become a fairly big competitor in the desktop and
server spaces, and particularly in mobile.&lt;/li&gt;
&lt;li&gt;Lua is increasingly used as an embeddable extension language&lt;/li&gt;
&lt;li&gt;Go's concurrency and ability to create easily deployable binaries
that you can just drop on …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;The following four points were made in &lt;a class="reference external" href="http://lwn.net/Articles/558172"&gt;this article&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;JavaScript has become a fairly big competitor in the desktop and
server spaces, and particularly in mobile.&lt;/li&gt;
&lt;li&gt;Lua is increasingly used as an embeddable extension language&lt;/li&gt;
&lt;li&gt;Go's concurrency and ability to create easily deployable binaries
that you can just drop on a system and run.&lt;/li&gt;
&lt;li&gt;R's statistical and graphic abilities&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category><category term="non-Python"></category></entry><entry><title>links 2013-07-17</title><link href="http://tshepang.net/links-2013-07-17" rel="alternate"></link><published>2013-07-17T00:00:00+02:00</published><updated>2013-07-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-07-17:/links-2013-07-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/tusharmakkar08"&gt;my first Bitbucket follower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://thechangelog.com/open-products"&gt;Open Products&lt;/a&gt; is an excellent essay by the admirable Chad
Whitacre, &lt;a class="reference external" href="http://tshepang.net/am-joining-gittip"&gt;Gittip&lt;/a&gt; founder&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://people.gnome.org/~michael/blog/2013-06-13-under-the-hood.html"&gt;impressive Libreoffice clean-up work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/open-source-life/d44a1953749c"&gt;Money and Open Source&lt;/a&gt; - an insightful opinion piece&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bitbucket.org/tusharmakkar08"&gt;my first Bitbucket follower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://thechangelog.com/open-products"&gt;Open Products&lt;/a&gt; is an excellent essay by the admirable Chad
Whitacre, &lt;a class="reference external" href="http://tshepang.net/am-joining-gittip"&gt;Gittip&lt;/a&gt; founder&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://people.gnome.org/~michael/blog/2013-06-13-under-the-hood.html"&gt;impressive Libreoffice clean-up work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/open-source-life/d44a1953749c"&gt;Money and Open Source&lt;/a&gt; - an insightful opinion piece&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category></entry><entry><title>links 2013-06-01</title><link href="http://tshepang.net/links-2013-06-01" rel="alternate"></link><published>2013-06-01T00:00:00+02:00</published><updated>2013-06-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-06-01:/links-2013-06-01</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://julien.danjou.info/blog/2013/rant-about-github-pull-request-workflow-implementation"&gt;a detailed look&lt;/a&gt; at the shortcomings of GitHub Pull Requests workflow&lt;/li&gt;
&lt;li&gt;it is sad seeing projects using Git, instead of Mercurial; it's
sadder still seeing them &lt;a class="reference external" href="http://www.sqlalchemy.org/blog/2013/05/25/sqlalchemy-migrated-to-git"&gt;move from Mercurial to Git&lt;/a&gt;; I am
scared that my favorite VCS is becoming less and less relevant&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pedrokroger.net/using-sphinx-write-technical-books"&gt;Using Sphinx to Write Technical Books …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://julien.danjou.info/blog/2013/rant-about-github-pull-request-workflow-implementation"&gt;a detailed look&lt;/a&gt; at the shortcomings of GitHub Pull Requests workflow&lt;/li&gt;
&lt;li&gt;it is sad seeing projects using Git, instead of Mercurial; it's
sadder still seeing them &lt;a class="reference external" href="http://www.sqlalchemy.org/blog/2013/05/25/sqlalchemy-migrated-to-git"&gt;move from Mercurial to Git&lt;/a&gt;; I am
scared that my favorite VCS is becoming less and less relevant&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pedrokroger.net/using-sphinx-write-technical-books"&gt;Using Sphinx to Write Technical Books&lt;/a&gt; - nice guide&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/past.html"&gt;HTML history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/video.html"&gt;intro to computer video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="VCS"></category></entry><entry><title>developer of note: Barry Warsaw</title><link href="http://tshepang.net/developer-of-note-barry-warsaw" rel="alternate"></link><published>2013-05-28T00:00:00+02:00</published><updated>2013-05-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-28:/developer-of-note-barry-warsaw</id><summary type="html">&lt;p&gt;This guy, both an official Ubuntu developer and a core &lt;a class="reference external" href="http://python.org"&gt;CPython&lt;/a&gt;
developer, is a great example of a FLOSS collaborator. He is always
polite on mailing list discussions, kindly and &lt;a class="reference external" href="https://lists.debian.org/debian-devel/2013/05/msg01357.html"&gt;patiently helps foster
collaboration between Debian and Ubuntu&lt;/a&gt; (there's been some
conflicts between the two camps).  This is on top …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This guy, both an official Ubuntu developer and a core &lt;a class="reference external" href="http://python.org"&gt;CPython&lt;/a&gt;
developer, is a great example of a FLOSS collaborator. He is always
polite on mailing list discussions, kindly and &lt;a class="reference external" href="https://lists.debian.org/debian-devel/2013/05/msg01357.html"&gt;patiently helps foster
collaboration between Debian and Ubuntu&lt;/a&gt; (there's been some
conflicts between the two camps).  This is on top of his superb
technical efforts demonstrated by his highly-detailed guides on
various things, like upgrading various Python projects to run on
Python 3 (&lt;a class="reference external" href="http://www.wefearchange.org/2012/01/debian-package-for-python-2-and-3.html"&gt;example 1&lt;/a&gt;, &lt;a class="reference external" href="http://www.wefearchange.org/2012/01/python-3-porting-fun-redux.html"&gt;example 2&lt;/a&gt;, &lt;a class="reference external" href="http://www.wefearchange.org/2011/12/lessons-in-porting-to-python-3.html"&gt;example 3&lt;/a&gt;).&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category><category term="non-Debian"></category><category term="Python"></category></entry><entry><title>developer of note: Nick Coghlan</title><link href="http://tshepang.net/developer-of-note-nick-coghlan" rel="alternate"></link><published>2013-05-28T00:00:00+02:00</published><updated>2013-05-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-28:/developer-of-note-nick-coghlan</id><summary type="html">&lt;p&gt;This is easily among the most active of all core CPython developers.
His productivity is ridiculous, and I seriously wonder how he manages
to do all he does, especially since &lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/014139.html"&gt;he does it in his free time&lt;/a&gt;. He
also tends to be quite stern, which is extra kool since he …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is easily among the most active of all core CPython developers.
His productivity is ridiculous, and I seriously wonder how he manages
to do all he does, especially since &lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/014139.html"&gt;he does it in his free time&lt;/a&gt;. He
also tends to be quite stern, which is extra kool since he does it
while displaying &lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/013835.html"&gt;great depth of knowledge&lt;/a&gt; and &lt;a class="reference external" href="http://hg.python.org/peps/rev/8a6e3b28dbef"&gt;maturity&lt;/a&gt;.  Also,
his great work has been &lt;a class="reference external" href="http://www.python.org/community/awards/psf-awards/#september-2011"&gt;officially recognized by the Python Software
Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first work that prompted this recognition as &lt;a class="reference external" href="http://tshepang.net/tags#developer-of-note-ref"&gt;developer of note&lt;/a&gt;
is the proposal, &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0413/"&gt;PEP 413&lt;/a&gt;. The idea is that the Python standard
library (stdlib) should release at a quicker rate than the Python
language itself.  This is a nice balance between two camps: those
favoring &lt;em&gt;stability&lt;/em&gt; over quicker availability of features, and those
favoring the opposite.  The PEP (Python Enhancement Proposal) is quite
thorough, and is partly in opposition to the earlier &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0407"&gt;PEP 407&lt;/a&gt;, which
proposes that all of CPython (the language and its stdlib) should
release faster.  Nick Coghlan outlines the disadvantages with that
approach in PEP 413 as well.&lt;/p&gt;
&lt;p&gt;Another PEP he is working on is &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0432"&gt;PEP 432&lt;/a&gt;. Titled &lt;em&gt;Simplifying the
CPython startup sequence&lt;/em&gt;, it's a highly detailed proposal to
re-organise some of CPython code to ease maintenance. His deep
knowledge on the project's internals is also on display.&lt;/p&gt;
&lt;p&gt;Nick also builds and maintains a collection of notes known simply as
&lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/index.html"&gt;Nick Coghlan's Python Notes&lt;/a&gt;. There is much wisdom there (complete
with high quality clear writing), favorite of which is the just-updated
&lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/pep_ideas/core_packaging_api.html#incremental-plans-to-improve-python-packaging"&gt;Incremental Plans to Improve Python Packaging&lt;/a&gt;, a thorough write-up
on the history, current state, and future plans regarding the story of
packaging (and installation) in the Python ecosystem.  He also happens
to be a great champion in pushing for progress on that front.&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>my current plans for wajig</title><link href="http://tshepang.net/my-current-plans-for-wajig" rel="alternate"></link><published>2013-05-27T00:00:00+02:00</published><updated>2013-05-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-27:/my-current-plans-for-wajig</id><summary type="html">&lt;p&gt;Some stuff I might work on in future:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I want to start using &lt;a class="reference external" href="https://github.com/kislyuk/argcomplete"&gt;argcomplete&lt;/a&gt; at some point, a more dynamic
shell completion tool, replacing the current hand-rolled solution.
I find shell programming hard, and argcomplete, which is inspired by
&lt;a class="reference external" href="http://furius.ca/optcomplete/"&gt;optcomplete&lt;/a&gt;, is a brilliant workaround.&lt;/li&gt;
&lt;li&gt;Someone asked me to restore gjig …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Some stuff I might work on in future:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I want to start using &lt;a class="reference external" href="https://github.com/kislyuk/argcomplete"&gt;argcomplete&lt;/a&gt; at some point, a more dynamic
shell completion tool, replacing the current hand-rolled solution.
I find shell programming hard, and argcomplete, which is inspired by
&lt;a class="reference external" href="http://furius.ca/optcomplete/"&gt;optcomplete&lt;/a&gt;, is a brilliant workaround.&lt;/li&gt;
&lt;li&gt;Someone asked me to restore gjig, the GUI tool that &lt;a class="reference external" href="http://tshepang.net/wajig-21-released"&gt;I removed from
wajig&lt;/a&gt; some releases ago. This will be an opportunity to learn
GTK+ again. I did a bit of it, even contributing patches (&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker
project&lt;/a&gt;), but was never quite confident. It's very likely that I
won't work on this... too much work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But ultimately, I would love for the standard Debian packaging tools
to get the point where they make wajig irrelevant. After all, wajig
was created to be a wrapper that helps ease the mess.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Here's the work I did in the past working on wajig, have a look at
&lt;a class="reference external" href="http://tshepang.net/tags#wajig-ref"&gt;its tag&lt;/a&gt;. Off the top of my head:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;improved, simplified packaging&lt;/li&gt;
&lt;li&gt;port to Python 3&lt;/li&gt;
&lt;li&gt;port to argparse (from getopt), which also meant proper handling of
subcommands&lt;/li&gt;
&lt;li&gt;increased usage of python-apt, instead of hand-crafted (and ugly)
code&lt;/li&gt;
&lt;li&gt;a few feature additions&lt;/li&gt;
&lt;li&gt;(lots of) modernising the code&lt;/li&gt;
&lt;li&gt;(lots of) cleaning up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And over 800 commits later, I am glad.&lt;/p&gt;
</content><category term="wajig"></category><category term="Python"></category><category term="Tracker"></category></entry><entry><title>shutil.which() rocks</title><link href="http://tshepang.net/shutilwhich-rocks" rel="alternate"></link><published>2013-05-26T00:00:00+02:00</published><updated>2013-05-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-26:/shutilwhich-rocks</id><summary type="html">&lt;p&gt;Unix/Linux systems have a simple (but useful) tool named &lt;cite&gt;which&lt;/cite&gt;,
whose main purpose is to indicate where in the filesystem a particular
executable is installed. This functionality was added in Python 3.3,
and though simple, I was looking forward to its availability in
Debian, just so I could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Unix/Linux systems have a simple (but useful) tool named &lt;cite&gt;which&lt;/cite&gt;,
whose main purpose is to indicate where in the filesystem a particular
executable is installed. This functionality was added in Python 3.3,
and though simple, I was looking forward to its availability in
Debian, just so I could replace wajig's own equivalent functionality,
which only checked for file presence, and was hard-coded and therefore
inflexible. &lt;a class="reference external" href="http://docs.python.org/3/library/shutil#shutil.which"&gt;shutil.which()&lt;/a&gt;, OTOH, looks for the given executable
name in user's PATH and is more thorough, since it also checks if the
executable name points to something that is actually executable.  So,
making use of this new function resulted in code that is both more
robust and &lt;a class="reference external" href="https://code.google.com/p/wajig/source/detail?r=e419e439e47f880ab17f6394e3faaa8ce3b15fe1"&gt;cleaner&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a sidenote, this functionality &lt;a class="reference external" href="http://bugs.python.org/issue444582"&gt;was first proposed in 2001&lt;/a&gt;!&lt;/p&gt;
</content><category term="Python"></category><category term="wajig"></category></entry><entry><title>job of QA</title><link href="http://tshepang.net/job-of-qa" rel="alternate"></link><published>2013-05-18T00:00:00+02:00</published><updated>2013-05-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-18:/job-of-qa</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;... the job of QA is to determine whether things are working as
intended, not to decide what the intentions should be.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lists.fedoraproject.org/pipermail/devel/2013-May/182298"&gt;part of a thread&lt;/a&gt; on Fedora's main development mailing list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author goes on to give some solid advice which is applicable to
pretty much every notable project out …&lt;/p&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;... the job of QA is to determine whether things are working as
intended, not to decide what the intentions should be.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lists.fedoraproject.org/pipermail/devel/2013-May/182298"&gt;part of a thread&lt;/a&gt; on Fedora's main development mailing list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author goes on to give some solid advice which is applicable to
pretty much every notable project out there:&lt;/p&gt;
&lt;blockquote&gt;
It is not possible, however you organize such a project, for
everyone to have a voice in everything. It is not possible to
subject every decision to some kind of public review process. It
is a statistical certainty that things you disagree with are going
to happen. This is something you need to reconcile yourself to.&lt;/blockquote&gt;
</content><category term="quote"></category><category term="non-Debian"></category></entry><entry><title>links 2013-05-11</title><link href="http://tshepang.net/links-2013-05-11" rel="alternate"></link><published>2013-05-11T00:00:00+02:00</published><updated>2013-05-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-11:/links-2013-05-11</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.python.org/cpython/rev/d5ef330bac50"&gt;Python interpreter finally gets tab completion by default&lt;/a&gt;;
to see wide use, this will have to wait for 3.4 release,
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0429"&gt;which will only arrive early 2014&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="http://debbugs.gnu.org/cgi/bugreport.cgi?bug=14355"&gt;my first bug report for Emacs&lt;/a&gt;,
perhaps my first ever to a pure GNU project;
I say this because GNOME claims …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hg.python.org/cpython/rev/d5ef330bac50"&gt;Python interpreter finally gets tab completion by default&lt;/a&gt;;
to see wide use, this will have to wait for 3.4 release,
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0429"&gt;which will only arrive early 2014&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I submitted &lt;a class="reference external" href="http://debbugs.gnu.org/cgi/bugreport.cgi?bug=14355"&gt;my first bug report for Emacs&lt;/a&gt;,
perhaps my first ever to a pure GNU project;
I say this because GNOME claims to be one, but it's really only by name.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pypy.org/performance.html"&gt;Excellent guide on improving Python performance&lt;/a&gt;;
it's written with PyPy in mind, but has excellent generic advice.&lt;/li&gt;
&lt;li&gt;I enjoyed &lt;a class="reference external" href="http://thechangelog.com/86"&gt;this podcast&lt;/a&gt; where Jeff Atwood talks about his new
project, &lt;a class="reference external" href="http://www.discourse.org"&gt;Discourse&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category><category term="GNOME"></category><category term="links"></category><category term="Emacs"></category></entry><entry><title>project of note: Discourse</title><link href="http://tshepang.net/project-of-note-discourse" rel="alternate"></link><published>2013-05-11T00:00:00+02:00</published><updated>2013-05-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-11:/project-of-note-discourse</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html"&gt;The announcement&lt;/a&gt; by project lead, Jeff Atwood, sold me. This is one
rather incredible guy, a game changer of sorts, most notable for
helping create what is likely &lt;a class="reference external" href="http://stackoverflow.com"&gt;the most important programming resource
on the web&lt;/a&gt;. So whenever he goes and creates something else, I
naturally do pay attention, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html"&gt;The announcement&lt;/a&gt; by project lead, Jeff Atwood, sold me. This is one
rather incredible guy, a game changer of sorts, most notable for
helping create what is likely &lt;a class="reference external" href="http://stackoverflow.com"&gt;the most important programming resource
on the web&lt;/a&gt;. So whenever he goes and creates something else, I
naturally do pay attention, and this &lt;a class="reference external" href="http://www.discourse.org"&gt;Discourse&lt;/a&gt; thing looks amazing,
at least from by limited usage so far.&lt;/p&gt;
</content><category term="non-Python"></category><category term="non-Debian"></category><category term="project-of-note"></category></entry><entry><title>me loving Auto Fill Mode (Emacs)</title><link href="http://tshepang.net/me-loving-auto-fill-mode-emacs" rel="alternate"></link><published>2013-05-10T00:00:00+02:00</published><updated>2013-05-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-05-10:/me-loving-auto-fill-mode-emacs</id><summary type="html">&lt;p&gt;For the past 2 weeks or so, I have been learning Emacs, something I've
been meaning to do for years now. I decided to do it seriously (not
skip a day, sometimes hours at a time), and am really liking it. It's
a very well-designed application with a great amount …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the past 2 weeks or so, I have been learning Emacs, something I've
been meaning to do for years now. I decided to do it seriously (not
skip a day, sometimes hours at a time), and am really liking it. It's
a very well-designed application with a great amount of polish, far
more than any editor I've seen yet (I've used Vim, Geany, Scribes, and
Eclipse).  It also helps that the documentation is so
&lt;a class="reference external" href="http://tshepang.net/projects-with-excellent-documentation"&gt;well-written&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So far, my single most favorite feature is &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Fill"&gt;Auto Fill Mode&lt;/a&gt;, which
allows you to keep typing without caring about line breaks, for they
get automatically get applied for you. Am very sure that this feature
exists elsewhere, but I actually never used it.&lt;/p&gt;
&lt;p&gt;Related to that is the &lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Fill-Commands"&gt;fill-paragraph&lt;/a&gt; command, which is invoked via
the Alt+q shortcut (M-q) in Emacs speak. What it does is reformat the
paragraph as if it was typed while in Auto Fill Mode. Is gorgeous!&lt;/p&gt;
</content><category term="Emacs"></category><category term="Scribes"></category><category term="Geany"></category></entry><entry><title>links 2013-04-25</title><link href="http://tshepang.net/links-2013-04-25" rel="alternate"></link><published>2013-04-25T00:00:00+02:00</published><updated>2013-04-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-25:/links-2013-04-25</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stallman.org/apple"&gt;Apple is a scary company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://soziev.com"&gt;this is one incredible web designer&lt;/a&gt; (&lt;a class="reference external" href="http://delaguardia.com.mx"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.delaguardia.com.mx/pyramid-view-configuration-let-me-count-the-ways.html"&gt;nice and detailed post about Pyramid's powerful View configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meta.stackoverflow.com/a/145813/147166"&gt;how to evaluate competing technologies for use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stallman.org/apple"&gt;Apple is a scary company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://soziev.com"&gt;this is one incredible web designer&lt;/a&gt; (&lt;a class="reference external" href="http://delaguardia.com.mx"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.delaguardia.com.mx/pyramid-view-configuration-let-me-count-the-ways.html"&gt;nice and detailed post about Pyramid's powerful View configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meta.stackoverflow.com/a/145813/147166"&gt;how to evaluate competing technologies for use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="hardware"></category><category term="links"></category><category term="Pyramid"></category></entry><entry><title>the not grateful</title><link href="http://tshepang.net/the-not-grateful" rel="alternate"></link><published>2013-04-24T00:00:00+02:00</published><updated>2013-04-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-24:/the-not-grateful</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Unfortunately, my experience has been that most people gloss over the
philosophical arguments in favour of open source,
and focus instead on the price,
viewing open source as a cheap way to fill a software stack.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://cecinestpasun.com/entries/personal-funding-and-culture-open-source"&gt;Personal funding, and the culture of open source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is sad, but the author …&lt;/p&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Unfortunately, my experience has been that most people gloss over the
philosophical arguments in favour of open source,
and focus instead on the price,
viewing open source as a cheap way to fill a software stack.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://cecinestpasun.com/entries/personal-funding-and-culture-open-source"&gt;Personal funding, and the culture of open source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is sad, but the author should have probably used the term &lt;em&gt;Free software&lt;/em&gt;,
instead of &lt;em&gt;open source&lt;/em&gt;... politics vs. convenience.&lt;/p&gt;
</content><category term="quote"></category></entry><entry><title>project of note: M cross environment</title><link href="http://tshepang.net/project-of-note-m-cross-environment" rel="alternate"></link><published>2013-04-20T00:00:00+02:00</published><updated>2013-04-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-20:/project-of-note-m-cross-environment</id><summary type="html">&lt;p&gt;I spend several hours researching how to build a Qt app (written in C++)
on Debian for users who will run it on Windows.
I also wanted it be just one binary at the end so that deployment is just
a matter of copying and running the one executable.
This …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I spend several hours researching how to build a Qt app (written in C++)
on Debian for users who will run it on Windows.
I also wanted it be just one binary at the end so that deployment is just
a matter of copying and running the one executable.
This means I needed to statically-link the app,
and the sad news is that I first needed a statically-linked Qt.&lt;/p&gt;
&lt;p&gt;If I had actually known of &lt;a class="reference external" href="http://mxe.cc"&gt;M cross environment&lt;/a&gt; (MXE), I would have
shaved nearly all of those 'wasted' hours. I am very grateful to the
developers, especially because building Qt was mainly a matter of
installing &lt;a class="reference external" href="http://mxe.cc/#requirements-debian"&gt;a few build dependencies&lt;/a&gt; and running &lt;tt class="docutils literal"&gt;make qt&lt;/tt&gt;. An hour
or two later, I had a newly cross-compiled Qt waiting for my use. It was
also pleasant that the app, in a form of a &lt;tt class="docutils literal"&gt;.exe&lt;/tt&gt; file, just worked on
Windows 7.&lt;/p&gt;
&lt;p&gt;Having a look around, the build system actually looks elegant, and is a
lot simpler than the scary mess that is &lt;a class="reference external" href="https://live.gnome.org/Jhbuild"&gt;JHBuild&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I have published two guides on Stack Overflow on how this works,
&lt;a class="reference external" href="http://stackoverflow.com/a/13211922/321731"&gt;one for Qt 4&lt;/a&gt; and &lt;a class="reference external" href="http://stackoverflow.com/a/14170591/321731"&gt;another for Qt 5&lt;/a&gt;.&lt;/p&gt;
</content><category term="non-Debian"></category><category term="project-of-note"></category><category term="non-Python"></category></entry><entry><title>am joining Gittip</title><link href="http://tshepang.net/am-joining-gittip" rel="alternate"></link><published>2013-04-13T00:00:00+02:00</published><updated>2013-04-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-13:/am-joining-gittip</id><summary type="html">&lt;p&gt;In &lt;a class="reference external" href="http://sayspy.blogspot.com/2013/04/why-im-signing-up-for-gittip.html"&gt;Why I'm signing up for Gittip&lt;/a&gt;, a core CPython commiter, Brett
Cannon, mentions a great reason to reward FLOSS contributors
financially:&lt;/p&gt;
&lt;blockquote&gt;
... a way for the community to thank someone's family for letting
them share their loved one with open source.  For instance, tips
for me would be a way …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;In &lt;a class="reference external" href="http://sayspy.blogspot.com/2013/04/why-im-signing-up-for-gittip.html"&gt;Why I'm signing up for Gittip&lt;/a&gt;, a core CPython commiter, Brett
Cannon, mentions a great reason to reward FLOSS contributors
financially:&lt;/p&gt;
&lt;blockquote&gt;
... a way for the community to thank someone's family for letting
them share their loved one with open source.  For instance, tips
for me would be a way of thanking my wife for letting me spend the
hours I do contributing to Python in my various ways by letting me
treat my wife to a night out so neither of us has to cook.&lt;/blockquote&gt;
&lt;p&gt;He inspired me to actually go find a bit more about this &lt;a class="reference external" href="https://www.gittip.com"&gt;Gittip&lt;/a&gt;
thing, after which &lt;a class="reference external" href="https://www.gittip.com/tshepang"&gt;I decided to participate&lt;/a&gt; as well.&lt;/p&gt;
&lt;p&gt;In terms of money, I previously fooled around with &lt;a class="reference external" href="http://flattr.com"&gt;flattr&lt;/a&gt; too, but
stopped along the way for some reason (after a few months), so will
see how long this one relationship lasts.&lt;/p&gt;
</content><category term="Python"></category><category term="Gittip"></category></entry><entry><title>me likes subprocess.DEVNULL</title><link href="http://tshepang.net/me-likes-subprocessdevnull" rel="alternate"></link><published>2013-04-11T00:00:00+02:00</published><updated>2013-04-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-11:/me-likes-subprocessdevnull</id><summary type="html">&lt;p&gt;If you want to run an external process from within Python, and are not
interested in any errors that process may emit, there are a few ways
you can go about it.
I will demonstrate this by opening a Python shell in a directory
that isn't version-controlled by &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;So …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;If you want to run an external process from within Python, and are not
interested in any errors that process may emit, there are a few ways
you can go about it.
I will demonstrate this by opening a Python shell in a directory
that isn't version-controlled by &lt;a class="reference external" href="http://mercurial.selenic.com"&gt;Mercurial&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;So, we don't want to see this ugliness:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split())
abort: no repository found in '/home/tshepang/projects/pyramid' (.hg not found)!
255
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;So, here's the simplest solution:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=open(os.devnull))
255
&lt;/pre&gt;
&lt;p&gt;Problem: it leaves the file descriptor open... not good.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;We fix:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; DEVNULL = open(os.devnull)
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=DEVNULL)
255
&amp;gt;&amp;gt;&amp;gt; DEVNULL.close()
&lt;/pre&gt;
&lt;p&gt;Much better, much uglier. (&lt;a class="reference external" href="https://bitbucket.org/tshepang/scripts/src/tip/vcs.py"&gt;example usage&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Something better:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call
&amp;gt;&amp;gt;&amp;gt; with open(os.devnull) as DEVNULL:
...     call('hg status'.split(), stderr=DEVNULL)
255
&lt;/pre&gt;
&lt;p&gt;Looks much nicer, and is more convenient,
unless we wanted to do something similar multiple times,
in which case the previous example would be preferable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Best solution:&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; from subprocess import call, DEVNULL
&amp;gt;&amp;gt;&amp;gt; call('hg status'.split(), stderr=DEVNULL)
255
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This &lt;a class="reference external" href="http://hg.python.org/cpython/rev/eaf93e156dff"&gt;small and wonderful feature&lt;/a&gt; is &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.3.html#subprocess"&gt;new as of Python 3.3&lt;/a&gt;.&lt;/p&gt;
</content><category term="Python"></category><category term="VCS"></category></entry><entry><title>links 2013-04-05</title><link href="http://tshepang.net/links-2013-04-05" rel="alternate"></link><published>2013-04-05T00:00:00+02:00</published><updated>2013-04-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-05:/links-2013-04-05</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I don't care much for C#, but &lt;a class="reference external" href="http://msmvps.com/blogs/jon_skeet/archive/2011/12/05/book-review-fluent-c-rebecca-riordan-sams.aspx"&gt;this 'negative' book review&lt;/a&gt;
by &lt;a class="reference external" href="http://www.yoda.arachsys.com/csharp/"&gt;a luminary&lt;/a&gt; in the .NET community is worthy.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pycon.blip.tv/file/4880330/"&gt;a video&lt;/a&gt; on the awesome Disqus commenting system&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2011-06-03-libreoffice-3-4-0.html"&gt;LibreOffice progress&lt;/a&gt; is quite impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://journal.dedasys.com/2011/07/25/why-i-prefer-text-to-video"&gt;pros of text over video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.curiousefficiency.org/posts/2011/08/scripting-languages-and-suitable.html"&gt;going from simple to complex in teaching/learning programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I don't care much for C#, but &lt;a class="reference external" href="http://msmvps.com/blogs/jon_skeet/archive/2011/12/05/book-review-fluent-c-rebecca-riordan-sams.aspx"&gt;this 'negative' book review&lt;/a&gt;
by &lt;a class="reference external" href="http://www.yoda.arachsys.com/csharp/"&gt;a luminary&lt;/a&gt; in the .NET community is worthy.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pycon.blip.tv/file/4880330/"&gt;a video&lt;/a&gt; on the awesome Disqus commenting system&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2011-06-03-libreoffice-3-4-0.html"&gt;LibreOffice progress&lt;/a&gt; is quite impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://journal.dedasys.com/2011/07/25/why-i-prefer-text-to-video"&gt;pros of text over video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.curiousefficiency.org/posts/2011/08/scripting-languages-and-suitable.html"&gt;going from simple to complex in teaching/learning programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="GNOME"></category><category term="Python"></category><category term="non-Python"></category><category term="links"></category></entry><entry><title>project of note: PostgreSQL</title><link href="http://tshepang.net/project-of-note-postgresql" rel="alternate"></link><published>2013-04-04T00:00:00+02:00</published><updated>2013-04-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-04:/project-of-note-postgresql</id><summary type="html">&lt;p&gt;It is among those rather quite (in terms of controversy) but
highly-respectable projects. It also looks like no other FLOSS DBMS
system compares.  It even bills itself &lt;em&gt;the most advanced open source
database&lt;/em&gt; on &lt;a class="reference external" href="http://www.postgresql.org/"&gt;its main page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've had great respect for the project for years now,
but what prompted …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is among those rather quite (in terms of controversy) but
highly-respectable projects. It also looks like no other FLOSS DBMS
system compares.  It even bills itself &lt;em&gt;the most advanced open source
database&lt;/em&gt; on &lt;a class="reference external" href="http://www.postgresql.org/"&gt;its main page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've had great respect for the project for years now,
but what prompted this post is its &lt;a class="reference external" href="http://www.postgresql.org/support/security/faq/2013-04-04/"&gt;2013-04-04 Security Release FAQ&lt;/a&gt;
(&lt;a class="reference external" href="http://www.piware.de/2013/04/urgent-postgresql-security-updates-for-debianubuntu/"&gt;via&lt;/a&gt;), a highly-detailed and thorough explanation of an important
security issue affecting a few of its releases.
Reading this, one gets the idea that it's some serious developers running
the project, and I deeply appreciate.&lt;/p&gt;
</content><category term="project-of-note"></category></entry><entry><title>me loving the Kiln Harmony concept</title><link href="http://tshepang.net/me-loving-the-kiln-harmony-concept" rel="alternate"></link><published>2013-04-03T00:00:00+02:00</published><updated>2013-04-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-04-03:/me-loving-the-kiln-harmony-concept</id><summary type="html">&lt;p&gt;I tend to work a lot with both Git and Mercurial,
and to ease the pain of forgetting which I'm using at a given moment,
I created a setup I described on &lt;a class="reference external" href="http://tshepang.net/easing-switching-between-git-and-mercurial"&gt;another post&lt;/a&gt;.
An even better solution is having all this sorted out on the server side,
so that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I tend to work a lot with both Git and Mercurial,
and to ease the pain of forgetting which I'm using at a given moment,
I created a setup I described on &lt;a class="reference external" href="http://tshepang.net/easing-switching-between-git-and-mercurial"&gt;another post&lt;/a&gt;.
An even better solution is having all this sorted out on the server side,
so that it doesn't matter which of the two I'm using.
This comes in a form of a product named &lt;a class="reference external" href="http://blog.fogcreek.com/announcing-kiln-harmony-the-future-of-dvcs/"&gt;Kiln Harmony&lt;/a&gt;,
which also turns out to be &lt;a class="reference external" href="https://news.ycombinator.com/item?id=5363085"&gt;a complex beast&lt;/a&gt; behind-the-scenes.
Would be kool to see a FLOSS implementation of this.&lt;/p&gt;
</content><category term="non-FLOSS"></category><category term="VCS"></category></entry><entry><title>developer of note: Vinay Sajip</title><link href="http://tshepang.net/developer-of-note-vinay-sajip" rel="alternate"></link><published>2013-03-31T00:00:00+02:00</published><updated>2013-03-31T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-31:/developer-of-note-vinay-sajip</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://plumberjack.blogspot.com/"&gt;Vinay Sajip&lt;/a&gt; is the maintainer of &lt;a class="reference external" href="http://docs.python.org/library/logging"&gt;logging&lt;/a&gt;, a Python logging
library/module, available in the standard library. What prompted this
post is his tireless improvements, not just to the software itself, but
also the documentation surrounding it (&lt;a class="reference external" href="http://plumberjack.blogspot.com/2011/04/logging-documentation-for-python-27.html"&gt;example&lt;/a&gt;). It's all the more
impressive that he continuously blogs about various ways …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://plumberjack.blogspot.com/"&gt;Vinay Sajip&lt;/a&gt; is the maintainer of &lt;a class="reference external" href="http://docs.python.org/library/logging"&gt;logging&lt;/a&gt;, a Python logging
library/module, available in the standard library. What prompted this
post is his tireless improvements, not just to the software itself, but
also the documentation surrounding it (&lt;a class="reference external" href="http://plumberjack.blogspot.com/2011/04/logging-documentation-for-python-27.html"&gt;example&lt;/a&gt;). It's all the more
impressive that he continuously blogs about various ways to use the
module, and maintains &lt;a class="reference external" href="http://docs.python.org/howto/logging-cookbook"&gt;a bunch of nuggets on advanced usage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One early event, which is likely the first
time I noticed him, is the time when he rebutted some apparently
inaccurate claims against the module, at which he responded in a
&lt;a class="reference external" href="http://plumberjack.blogspot.com/2010/09/python-logging-functionality-facts-vs.html"&gt;highly-detailed post&lt;/a&gt;, which that lent credence to the module. This
inspired me to give it a try, and &lt;a class="reference external" href="http://docs.python.org/howto/logging.html"&gt;it's not that hard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's one other project he works on, &lt;a class="reference external" href="http://sarge.readthedocs.org"&gt;sarge&lt;/a&gt;, which is like
&lt;a class="reference external" href="http://docs.python.org/library/subprocess"&gt;subprocess&lt;/a&gt; on steroids. Have a look at &lt;a class="reference external" href="http://sarge.readthedocs.org/en/latest/overview.html#why-not-just-use-subprocess"&gt;why he created it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lately, he is working on &lt;a class="reference external" href="https://distlib.readthedocs.org/en/latest/"&gt;distlib&lt;/a&gt;,
a library which implements low-level functions that relate to
packaging and distribution of Python software.
This excites me a lot since it's a key piece in the latest attempt
at fixing Python packaging once and for all.&lt;/p&gt;
&lt;p&gt;On top of all this, he is very active on Stack Overflow,
having answered &lt;a class="reference external" href="http://stackoverflow.com/users/118903/vinay-sajip?tab=answers"&gt;hundreds of questions&lt;/a&gt; there. Amazing!&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>links 2013-03-24</title><link href="http://tshepang.net/links-2013-03-24" rel="alternate"></link><published>2013-03-24T00:00:00+02:00</published><updated>2013-03-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-24:/links-2013-03-24</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bash.org/?244321"&gt;great IRC humor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.impressivewebs.com/css-white-space/"&gt;nice CSS white-space explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an &lt;a class="reference external" href="http://simeonfranklin.com/blog/2013/mar/17/my-pycon-2013-poster/"&gt;interesting chart&lt;/a&gt; on the pain beginners may feel when trying to use
Python for particular tasks&lt;/li&gt;
&lt;li&gt;writing a solid feed reader &lt;a class="reference external" href="http://inessential.com/2013/03/18/brians_stupid_feed_tricks"&gt;is not a joke&lt;/a&gt; (&lt;a class="reference external" href="http://www.marco.org/2013/03/19/free-works"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I got deeply excited as I read about
&lt;a class="reference external" href="http://www.linuxfromscratch.org/hints/downloads/files/more_control_and_pkg_man.txt"&gt;a nice scheme of manual package management&lt;/a&gt;,
one …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bash.org/?244321"&gt;great IRC humor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.impressivewebs.com/css-white-space/"&gt;nice CSS white-space explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an &lt;a class="reference external" href="http://simeonfranklin.com/blog/2013/mar/17/my-pycon-2013-poster/"&gt;interesting chart&lt;/a&gt; on the pain beginners may feel when trying to use
Python for particular tasks&lt;/li&gt;
&lt;li&gt;writing a solid feed reader &lt;a class="reference external" href="http://inessential.com/2013/03/18/brians_stupid_feed_tricks"&gt;is not a joke&lt;/a&gt; (&lt;a class="reference external" href="http://www.marco.org/2013/03/19/free-works"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I got deeply excited as I read about
&lt;a class="reference external" href="http://www.linuxfromscratch.org/hints/downloads/files/more_control_and_pkg_man.txt"&gt;a nice scheme of manual package management&lt;/a&gt;,
one of the many &lt;a class="reference external" href="http://www.linuxfromscratch.org/hints/list.html"&gt;LFS hints&lt;/a&gt;. I am looking forward to
the challenge (which may result in me ditching Debian for home use).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="non-Debian"></category><category term="humor"></category><category term="Python"></category><category term="links"></category></entry><entry><title>links 2013-03-14</title><link href="http://tshepang.net/links-2013-03-14" rel="alternate"></link><published>2013-03-14T00:00:00+02:00</published><updated>2013-03-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-14:/links-2013-03-14</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;each feature release of Python comes with a great amount of changes,
but I was particularly impressed by &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.2"&gt;those of 3.2&lt;/a&gt;;
the latest such release &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.3"&gt;isn't too shabby either&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the all-important factor of success in business... &lt;a class="reference external" href="http://blog.kowalczyk.info/article/ahcj/Easy-vs-probable-or-how-to-make-money-with-softw.html"&gt;luck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;one interesting way of measuring Python 3 adoption is download numbers:
&lt;a class="reference external" href="http://blog.briancurtin.com/posts/the-year-of-the-snake.html"&gt;0 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;each feature release of Python comes with a great amount of changes,
but I was particularly impressed by &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.2"&gt;those of 3.2&lt;/a&gt;;
the latest such release &lt;a class="reference external" href="http://docs.python.org/3/whatsnew/3.3"&gt;isn't too shabby either&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the all-important factor of success in business... &lt;a class="reference external" href="http://blog.kowalczyk.info/article/ahcj/Easy-vs-probable-or-how-to-make-money-with-softw.html"&gt;luck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;one interesting way of measuring Python 3 adoption is download numbers:
&lt;a class="reference external" href="http://blog.briancurtin.com/posts/the-year-of-the-snake.html"&gt;0.8 million out of a total of 2 million&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;another sad case of Ubuntu diverging from GNOME...
&lt;a class="reference external" href="http://debarshiray.wordpress.com/2012/10/06/goa-why-it-is-the-way-it-is/"&gt;Online Accounts&lt;/a&gt; (&lt;a class="reference external" href="http://blog.yorba.org/jim/2013/02/the-garden-of-the-forking-paths.html"&gt;via&lt;/a&gt;);
as the author of that quality post says, they may have good reasons for this;
it's just that it looks bad on the surface&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://meta.stackoverflow.com/a/67891/147166"&gt;a detailed defense&lt;/a&gt; on the choice of technology for Stack Exchange chat&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category><category term="GNOME"></category><category term="non-Debian"></category><category term="non-FLOSS"></category><category term="links"></category></entry><entry><title>on growing up</title><link href="http://tshepang.net/on-growing-up" rel="alternate"></link><published>2013-03-01T00:00:00+02:00</published><updated>2013-03-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-03-01:/on-growing-up</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Martijn Faassen used to ask us &amp;quot;how fast is PyPy&amp;quot; so we decided to
name an option enabling all optimizations &amp;quot;--faassen&amp;quot;. Then
&amp;quot;--no-faassen&amp;quot; was naturally added too. Later we decided to grow up
and renamed it to &amp;quot;-O2&amp;quot;, and now &amp;quot;-Ojit&amp;quot;.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://morepypy.blogspot.com/2013/02/10-years-of-pypy.html"&gt;a summary of 10 years of PyPy history&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Amazing …&lt;/p&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Martijn Faassen used to ask us &amp;quot;how fast is PyPy&amp;quot; so we decided to
name an option enabling all optimizations &amp;quot;--faassen&amp;quot;. Then
&amp;quot;--no-faassen&amp;quot; was naturally added too. Later we decided to grow up
and renamed it to &amp;quot;-O2&amp;quot;, and now &amp;quot;-Ojit&amp;quot;.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://morepypy.blogspot.com/2013/02/10-years-of-pypy.html"&gt;a summary of 10 years of PyPy history&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Amazing energy and intellectual prowess the project participants possess,
and &lt;a class="reference external" href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain"&gt;a very respectable project&lt;/a&gt; at that.&lt;/p&gt;
</content><category term="humor"></category><category term="Python"></category><category term="quote"></category></entry><entry><title>great praise for the RPython translation toolchain</title><link href="http://tshepang.net/great-praise-for-the-rpython-translation-toolchain" rel="alternate"></link><published>2013-02-12T00:00:00+02:00</published><updated>2013-02-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-02-12:/great-praise-for-the-rpython-translation-toolchain</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I am a curmudgeon and I find most new developments in software to be
thoroughly uninteresting. RPython is different. It's the most
interesting thing I've seen in well over a decade.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://tratt.net/laurie/blog/entries/fast_enough_vms_in_fast_enough_time"&gt;Fast Enough VMs in Fast Enough Time&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The highly-detailed article is about the adventures of building
a language VM …&lt;/p&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I am a curmudgeon and I find most new developments in software to be
thoroughly uninteresting. RPython is different. It's the most
interesting thing I've seen in well over a decade.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://tratt.net/laurie/blog/entries/fast_enough_vms_in_fast_enough_time"&gt;Fast Enough VMs in Fast Enough Time&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The highly-detailed article is about the adventures of building
a language VM using the &lt;a class="reference external" href="http://doc.pypy.org/en/latest/translation.html"&gt;RPython toolchain&lt;/a&gt;.&lt;/p&gt;
</content><category term="Python"></category><category term="quote"></category></entry><entry><title>nice review of Fedora 18</title><link href="http://tshepang.net/nice-review-of-fedora-18" rel="alternate"></link><published>2013-01-17T00:00:00+02:00</published><updated>2013-01-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-17:/nice-review-of-fedora-18</id><summary type="html">&lt;p&gt;I really enjoyed reading &lt;a class="reference external" href="http://thomas.apestaart.org/log/?p=1514"&gt;this review&lt;/a&gt; of the experience of installing
Fedora 18 and first use. Other than being well-written, I like the fact
that he gives points to each pro and con. I also liked this bit of
opinion, which I totally agree with:&lt;/p&gt;
&lt;blockquote&gt;
Logging in. Being told there …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I really enjoyed reading &lt;a class="reference external" href="http://thomas.apestaart.org/log/?p=1514"&gt;this review&lt;/a&gt; of the experience of installing
Fedora 18 and first use. Other than being well-written, I like the fact
that he gives points to each pro and con. I also liked this bit of
opinion, which I totally agree with:&lt;/p&gt;
&lt;blockquote&gt;
Logging in. Being told there are updates. Holy crap – 218 updates –
for a release that’s a day old. Does the word ‘release’ mean
anything anymore? -5. Seriously, freeze that crap for a few days,
only real security issues or facepalm bugs.&lt;/blockquote&gt;
</content><category term="non-Debian"></category></entry><entry><title>developer of note: Jeff Forcier</title><link href="http://tshepang.net/developer-of-note-jeff-forcier" rel="alternate"></link><published>2013-01-15T00:00:00+02:00</published><updated>2013-01-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-15:/developer-of-note-jeff-forcier</id><summary type="html">&lt;p&gt;The strength of character that &lt;a class="reference external" href="http://bitprophet.org/about/index.html"&gt;Jeff 'bitprophet' Forcier&lt;/a&gt; possesses is
admirable. He is the lead developer of &lt;a class="reference external" href="http://fabfile.org"&gt;fabric&lt;/a&gt;, the most popular
deployment tool written in Python. I honor him here due to how he
handled the issues with &lt;a class="reference external" href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;, the library that fabric uses
heavily. He had to make tough …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The strength of character that &lt;a class="reference external" href="http://bitprophet.org/about/index.html"&gt;Jeff 'bitprophet' Forcier&lt;/a&gt; possesses is
admirable. He is the lead developer of &lt;a class="reference external" href="http://fabfile.org"&gt;fabric&lt;/a&gt;, the most popular
deployment tool written in Python. I honor him here due to how he
handled the issues with &lt;a class="reference external" href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;, the library that fabric uses
heavily. He had to make tough decisions, like embedding that library in
fabric source (due to various issues), and even forking it. All of this
of course involved a lot of work and discussing, and thankfully at the
end, the original 'owner' of that indispensable piece of software
relented and transferred it to this bitprophet character. This means
Jeff now runs 2 of the most important tools in all of the Python
world... &lt;a class="reference external" href="http://bitprophet.org/blog/2012/09/29/paramiko-and-ssh/"&gt;more of the gory details&lt;/a&gt;.&lt;/p&gt;
</content><category term="Python"></category><category term="developer-of-note"></category></entry><entry><title>links 2013-01-02</title><link href="http://tshepang.net/links-2013-01-02" rel="alternate"></link><published>2013-01-02T00:00:00+02:00</published><updated>2013-01-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2013-01-02:/links-2013-01-02</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;Go language looks good for web apps:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/4dep/Go-vs-Python-for-a-simple-web-server.html"&gt;comparison with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/uvw2/Thoughts-on-Go-after-writing-3-websites.html"&gt;evaluation after writing some important apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.t9i.in/2013/01/why-program-in-go/"&gt;combines elegance of Python with speed of C/C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Python import system can be &lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/python_concepts/import_traps.html"&gt;a scary beast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I appreciate this &lt;a class="reference external" href="http://womble.decadent.org.uk/blog/whats-in-the-linux-kernel-for-debian-70-wheezy-part-1.html"&gt;summary of the differences&lt;/a&gt; between upstream
kernel and one included in Debian; would …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;Go language looks good for web apps:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/4dep/Go-vs-Python-for-a-simple-web-server.html"&gt;comparison with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.kowalczyk.info/article/uvw2/Thoughts-on-Go-after-writing-3-websites.html"&gt;evaluation after writing some important apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.t9i.in/2013/01/why-program-in-go/"&gt;combines elegance of Python with speed of C/C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Python import system can be &lt;a class="reference external" href="http://python-notes.boredomandlaziness.org/en/latest/python_concepts/import_traps.html"&gt;a scary beast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I appreciate this &lt;a class="reference external" href="http://womble.decadent.org.uk/blog/whats-in-the-linux-kernel-for-debian-70-wheezy-part-1.html"&gt;summary of the differences&lt;/a&gt; between upstream
kernel and one included in Debian; would be nice to get more of this,
and also on other major software included in Debian&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://superuser.com/a/236605/34953"&gt;highest-voted answer&lt;/a&gt; I ever gave on &lt;a class="reference external" href="http://stackexchange.com/"&gt;Stack Exchange&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category><category term="non-Python"></category><category term="links"></category></entry><entry><title>errors resulting from setting named pipes to be non-blocking</title><link href="http://tshepang.net/errors-resulting-from-setting-named-pipes-to-be-non-blocking" rel="alternate"></link><published>2012-11-18T00:00:00+02:00</published><updated>2012-11-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-18:/errors-resulting-from-setting-named-pipes-to-be-non-blocking</id><summary type="html">&lt;p&gt;Using C, I have been writing to named pipes in a non-blocking
way and have been getting a whole bunch of EAGAIN errors.
I have spent way too long on the web trying to find out why,
and bumped onto &lt;a class="reference external" href="http://developerweb.net/viewtopic.php?pid=25967#p25967"&gt;this excellent answer&lt;/a&gt;.
Looking at the manpage, I see that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using C, I have been writing to named pipes in a non-blocking
way and have been getting a whole bunch of EAGAIN errors.
I have spent way too long on the web trying to find out why,
and bumped onto &lt;a class="reference external" href="http://developerweb.net/viewtopic.php?pid=25967#p25967"&gt;this excellent answer&lt;/a&gt;.
Looking at the manpage, I see that this would give the same value as
EWOULDBLOCK, which is a far more meaningful name in this case.&lt;/p&gt;
&lt;p&gt;This is what will display those errors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error writing to file &amp;#39;%s&amp;#39;: %s (errno %d)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is how to avoid them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;EWOULDBLOCK&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error writing to file &amp;#39;%s&amp;#39;: %s (errno %d)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this kind of confusion, I just wish these two
variables did not refer to the same errno value.&lt;/p&gt;
</content><category term="non-Python"></category></entry><entry><title>links 2012-11-18</title><link href="http://tshepang.net/links-2012-11-18" rel="alternate"></link><published>2012-11-18T00:00:00+02:00</published><updated>2012-11-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-18:/links-2012-11-18</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lwn.net/Articles/523058/"&gt;Challenges for Linux networking&lt;/a&gt;; sad to read of these shortcomings&lt;/li&gt;
&lt;li&gt;refusal to accept a reasonable, popular, and easy-to-implement request,
&lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=647828"&gt;an option to never turn off the screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinguser.com/2012/07/i-miss-qt-or-what-cute-documentation-looks-like/"&gt;great praise for Qt and its docs&lt;/a&gt;; me was led to it when
researching a cross-platform (Linux and Windows) GUI toolkit&lt;/li&gt;
&lt;li&gt;I found …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lwn.net/Articles/523058/"&gt;Challenges for Linux networking&lt;/a&gt;; sad to read of these shortcomings&lt;/li&gt;
&lt;li&gt;refusal to accept a reasonable, popular, and easy-to-implement request,
&lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=647828"&gt;an option to never turn off the screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinguser.com/2012/07/i-miss-qt-or-what-cute-documentation-looks-like/"&gt;great praise for Qt and its docs&lt;/a&gt;; me was led to it when
researching a cross-platform (Linux and Windows) GUI toolkit&lt;/li&gt;
&lt;li&gt;I found using gaming to explain version control unbeatable; that is
the great appeal of &lt;a class="reference external" href="http://www-cs-students.stanford.edu/~blynn/gitmagic/"&gt;Git Magic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category></entry><entry><title>what I do after Debian installation</title><link href="http://tshepang.net/what-i-do-after-debian-installation" rel="alternate"></link><published>2012-11-10T00:00:00+02:00</published><updated>2012-11-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-11-10:/what-i-do-after-debian-installation</id><summary type="html">&lt;p&gt;I think anyone who has never done any OS install before can install
Debian without any issue at all, provided they will not be doing any
partitioning. It is that easy.&lt;/p&gt;
&lt;p&gt;As for me, I do a lot more installations than the average person, so I
semi-automate the setup process …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I think anyone who has never done any OS install before can install
Debian without any issue at all, provided they will not be doing any
partitioning. It is that easy.&lt;/p&gt;
&lt;p&gt;As for me, I do a lot more installations than the average person, so I
semi-automate the setup process with the help of this script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# some convenience&lt;/span&gt;
&lt;span class="nb"&gt;shopt&lt;/span&gt; -s expand_aliases
&lt;span class="nb"&gt;source&lt;/span&gt; ~/nna/conf/bash_aliases

&lt;span class="c1"&gt;# config files&lt;/span&gt;
sudo cp ~/nna/conf/sources.list /etc/apt
sudo cp ~/nna/conf/sudoers /etc

&lt;span class="c1"&gt;# APT&lt;/span&gt;
sudo apt-get update
sudo apt-get --allow-unauthenticated upgrade
sudo apt-get --allow-unauthenticated dist-upgrade
sudo apt-get --allow-unauthenticated install devscripts debhelper build-essential python3-apt gpm

&lt;span class="c1"&gt;# wajig&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/src/wajig &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; iiwajig&lt;span class="o"&gt;)&lt;/span&gt;
ibase &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; inondebian &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; itracker &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; icpython &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ipurge

&lt;span class="c1"&gt;# for Tracker&lt;/span&gt;
sudo sh -c &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;fs.inotify.max_user_watches=100000&amp;#39; &amp;gt;&amp;gt; /etc/sysctl.conf&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# so I can share via a webserver, or easily access from browser&lt;/span&gt;
sudo ln -s ~/.custom_repo /var/www/custom_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Contents of Debian repository list file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/apt/sources.list
deb file:/home/wena/.custom_repo tshepang main
deb http://debian.mirror.ac.za/debian wheezy main contrib non-free
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;tshepang&lt;/tt&gt; codename refers to my custom repository, the one
managed by &lt;a class="reference external" href="http://tshepang.net/project-of-note-reprepro"&gt;reprepro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Contents of &lt;strong&gt;sudo&lt;/strong&gt; setup file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo cat /etc/sudoers
Defaults env_reset
Defaults mail_badpass
Defaults &lt;span class="nv"&gt;secure_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;&lt;/span&gt;
root     &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
%sudo    &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
Defaults !tty_tickets
Defaults &lt;span class="nv"&gt;timestamp_timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The one change from default &lt;strong&gt;sudo&lt;/strong&gt; setup is so that each bash session
can inherit sudo powers from another. It's one case where I trade
&lt;a class="reference external" href="http://ask.debian.net/questions/how-to-have-sudo-powers-shared-between-different-bash-sessions"&gt;security&lt;/a&gt; for convenience. Another such case is increasing the
ask-for-password timeout to 100 minutes, instead of the default 15
minutes.&lt;/p&gt;
&lt;p&gt;And then these aliases, which point to scripts that install some
packages:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ibase&lt;/tt&gt;: basic stuff I got to have, stuff like the components I use
for my desktop apps, some CLI tools, and some documentation&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;inondebian&lt;/tt&gt;: packages that aren't part of Debian, e.g. stuff from
external repositories, or nonm-free stuff from Debian repos&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;itracker&lt;/tt&gt;: I always run the git version of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, so these
tools help me build it&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ipurge&lt;/tt&gt;: stuff that was installed as Recommends dependencies of
the above (e.g. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-bluetooth&lt;/span&gt;&lt;/tt&gt;) or during Debian installation
(e.g. &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;), but that I won't use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The symbolic links is so that those I share a network with (LAN) can
have easy web browser access to some stuff on my machine.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>links 2012-10-23</title><link href="http://tshepang.net/links-2012-10-23" rel="alternate"></link><published>2012-10-23T00:00:00+02:00</published><updated>2012-10-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-10-23:/links-2012-10-23</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I did not expect &lt;a class="reference external" href="http://stackoverflow.com/q/11942654/321731"&gt;this question of mine&lt;/a&gt; to be loved so much. In
fact, I thought it would see some resistance, due to so many
Python-related threading/multiprocessing questions on Stack Overflow,
such that it might be closed as a duplicate.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;This blog post&lt;/a&gt; makes me wanna contribute to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;I did not expect &lt;a class="reference external" href="http://stackoverflow.com/q/11942654/321731"&gt;this question of mine&lt;/a&gt; to be loved so much. In
fact, I thought it would see some resistance, due to so many
Python-related threading/multiprocessing questions on Stack Overflow,
such that it might be closed as a duplicate.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;This blog post&lt;/a&gt; makes me wanna contribute to LibreOffice, which is
made even more appealing by fact that I'm using the language a lot
&lt;a class="reference external" href="http://tshepang.net/me-got-meself-another-coding-job"&gt;at work&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It is a sad fact that for large Python codebases, the pain of porting
to Python 3 is quite high. Here's &lt;a class="reference external" href="http://vperic.blogspot.com/2012/08/bootstrapping-trial-in-python-3.html"&gt;an example for Twisted&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I am a fan of &lt;a class="reference external" href="http://docs.python.org/dev/library/argparse"&gt;argparse&lt;/a&gt;, but &lt;a class="reference external" href="https://github.com/docopt/docopt"&gt;this specific CLI parsing library&lt;/a&gt;
takes an interesting direction.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codinghorror.com/blog/2012/10/judging-websites.html"&gt;great web app design advice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Python"></category></entry><entry><title>links 2012-09-28</title><link href="http://tshepang.net/links-2012-09-28" rel="alternate"></link><published>2012-09-28T00:00:00+02:00</published><updated>2012-09-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-09-28:/links-2012-09-28</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/a/2116517/321731"&gt;A look at the high fragmentation of programming languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;What happens after loading the Linux kernel image into RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;Development process for putting hardware support in Linux-based
systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/03/04/my-new-phone-2012-edition"&gt;Why choose N9 (Meego) over anything Android and iPhone&lt;/a&gt; (&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/08/03/me-and-the-nokia-n9"&gt;and why
not&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/a/2116517/321731"&gt;A look at the high fragmentation of programming languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;What happens after loading the Linux kernel image into RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5117/688"&gt;Development process for putting hardware support in Linux-based
systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/03/04/my-new-phone-2012-edition"&gt;Why choose N9 (Meego) over anything Android and iPhone&lt;/a&gt; (&lt;a class="reference external" href="http://www.kryogenix.org/days/2012/08/03/me-and-the-nokia-n9"&gt;and why
not&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category></entry><entry><title>developer of note: Michael Meeks</title><link href="http://tshepang.net/developer-of-note-michael-meeks" rel="alternate"></link><published>2012-08-09T00:00:00+02:00</published><updated>2012-08-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-08-09:/developer-of-note-michael-meeks</id><summary type="html">&lt;p&gt;Being the most visible LibreOffice (and formerly, OpenOffice.org)
developer for a number of years now, he is also a tireless communicator and
organiser. The switch from OpenOffice.org to LibreOffice was not
exactly a smooth ride, but this guy kept showing a positive attitude
throughout. In &lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;the latest&lt;/a&gt; of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Being the most visible LibreOffice (and formerly, OpenOffice.org)
developer for a number of years now, he is also a tireless communicator and
organiser. The switch from OpenOffice.org to LibreOffice was not
exactly a smooth ride, but this guy kept showing a positive attitude
throughout. In &lt;a class="reference external" href="http://people.gnome.org/~michael/blog/2012-08-08-libreoffice-3-6-0.html"&gt;the latest&lt;/a&gt; of his longer-form blog posts (he
normally writes tiny updates), he exposes the great progress that
LibreOffice has had. This is not the most glamorous of software
projects, but it certainly is among the most important in the world of
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/FLOSS"&gt;FLOSS&lt;/a&gt;, and it's kool to have people keeping it going.&lt;/p&gt;
</content><category term="developer-of-note"></category></entry><entry><title>matplotlib rocks</title><link href="http://tshepang.net/matplotlib-rocks" rel="alternate"></link><published>2012-07-19T00:00:00+02:00</published><updated>2012-07-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-19:/matplotlib-rocks</id><summary type="html">&lt;p&gt;Have a look at this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With &lt;a class="reference external" href="http://matplotlib.org"&gt;matplolib&lt;/a&gt; installed, running the code above should resulted in
the following image:&lt;/p&gt;
&lt;img alt="image resulting from running the code above" src="images/matplotlib-1.png" /&gt;
&lt;p&gt;You will notice that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Have a look at this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With &lt;a class="reference external" href="http://matplotlib.org"&gt;matplolib&lt;/a&gt; installed, running the code above should resulted in
the following image:&lt;/p&gt;
&lt;img alt="image resulting from running the code above" src="images/matplotlib-1.png" /&gt;
&lt;p&gt;You will notice that there's 2 graphs drawn over the same axis, nothing
special. What I really loved about matplotlib is that I did not need to
specify what colors to use for any of the graphs (&lt;a class="reference external" href="http://tshepang.net/plotting-with-matplotlib"&gt;as I did
previously&lt;/a&gt;). The colors were chosen automatically. It was helpful
especially in my case because I needed a way to specify an arbitrary
number of graphs. Without this magical feature, the code would be a lot
uglier.&lt;/p&gt;
&lt;p&gt;Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;number_of_graphs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number_of_graphs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I provide 3 as command line argument, I get this:&lt;/p&gt;
&lt;img alt="image resulting from running the code above" src="images/matplotlib-2.png" /&gt;
&lt;p&gt;This feature left me pleasantly surprised.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Debian 7 will release with wajig 2.7.3</title><link href="http://tshepang.net/debian-7-will-release-with-wajig-273" rel="alternate"></link><published>2012-07-17T00:00:00+02:00</published><updated>2012-07-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-17:/debian-7-will-release-with-wajig-273</id><summary type="html">&lt;p&gt;I once claimed that Debian 7 &amp;quot;wheezy&amp;quot; will release with version 2.7 of
wajig, but soon after, I experienced an exception that occurs if you run a
command like &lt;tt class="docutils literal"&gt;wajig new&lt;/tt&gt; if one of the newly-available packages was
available for the configured foreign architecture, but not for the
native …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I once claimed that Debian 7 &amp;quot;wheezy&amp;quot; will release with version 2.7 of
wajig, but soon after, I experienced an exception that occurs if you run a
command like &lt;tt class="docutils literal"&gt;wajig new&lt;/tt&gt; if one of the newly-available packages was
available for the configured foreign architecture, but not for the
native one (&lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=679969"&gt;bug 679969&lt;/a&gt;). To fix that, I released 2.7.1, but I
submitted a dirty tarball for upload, so had to resubmit, ending up
releasing 2.7.2. Later on, someone noticed that &lt;a class="reference external" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=681309"&gt;a certain subcommand
wasn't recognized&lt;/a&gt;, and I released 2.7.3 which fixes the issue.&lt;/p&gt;
</content><category term="wajig"></category><category term="Debian"></category></entry><entry><title>wajig 2.6 and 2.7</title><link href="http://tshepang.net/wajig-26-and-27" rel="alternate"></link><published>2012-07-02T00:00:00+02:00</published><updated>2012-07-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-07-02:/wajig-26-and-27</id><summary type="html">&lt;p&gt;Version 2.6 of wajig has changes so small that I did not bother writing
about its release, but was nevertheless very important because the
bash-completion now works a lot better than before,
thanks to &lt;a class="reference external" href="http://rrt.sc3d.org/"&gt;Reuben Thomas&lt;/a&gt;.
I also stopped wajig from accepting UPPERCASE subcommands,
since a few people on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Version 2.6 of wajig has changes so small that I did not bother writing
about its release, but was nevertheless very important because the
bash-completion now works a lot better than before,
thanks to &lt;a class="reference external" href="http://rrt.sc3d.org/"&gt;Reuben Thomas&lt;/a&gt;.
I also stopped wajig from accepting UPPERCASE subcommands,
since a few people on the mailing list expressed dislike,
and that includes project founder.&lt;/p&gt;
&lt;p&gt;Version 2.7, the version that will be in the next stable release of
Debian [&lt;a class="reference external" href="http://tshepang.net/debian-7-will-release-with-wajig-273"&gt;update&lt;/a&gt;], Wheezy (Debian 7), fixes two bugs, one of which I
sort of intentionally broke in order to fix some issues with the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--simulate&lt;/span&gt;&lt;/tt&gt; and/or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--teaching&lt;/span&gt;&lt;/tt&gt; options.
Someone &lt;a class="reference external" href="http://bugs.debian.org/670687"&gt;did complain about this&lt;/a&gt; which was good since it's a good
indicator that someone actually cared about the feature.
That motivated me to fix it,
and I ensured that the fix was in before Debian 7 freeze.&lt;/p&gt;
&lt;p&gt;This work is my greatest contribution for this upcoming Debian
release.&lt;/p&gt;
</content><category term="wajig"></category><category term="Debian"></category></entry><entry><title>sorting dictionary items by value</title><link href="http://tshepang.net/sorting-dictionary-items-by-value" rel="alternate"></link><published>2012-06-26T00:00:00+02:00</published><updated>2012-06-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-26:/sorting-dictionary-items-by-value</id><summary type="html">&lt;p&gt;Following should be self-explanatory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second-last command sorts by keys, but that's easy. Sorting by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Following should be self-explanatory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second-last command sorts by keys, but that's easy. Sorting by
value, as shown by the last command above, is what trips many novices,
and I had to spend too much time on the web finding how to do it, and I
still don't really understand how it works, except that it works :)&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>one of the harsh realities of working on a big FLOSS project</title><link href="http://tshepang.net/one-of-the-harsh-realities-of-working-on-a-big-floss-project" rel="alternate"></link><published>2012-06-19T00:00:00+02:00</published><updated>2012-06-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-19:/one-of-the-harsh-realities-of-working-on-a-big-floss-project</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I wasted my own time trying to be nice. One thing that you can get
from Greg's report is that kernel developers have very limited time.
Time is our most precious resource. If being polite wastes time, and
a quick jab is more effective, then those quick jabs become the …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I wasted my own time trying to be nice. One thing that you can get
from Greg's report is that kernel developers have very limited time.
Time is our most precious resource. If being polite wastes time, and
a quick jab is more effective, then those quick jabs become the
efficient process.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/501855/"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="quote"></category></entry><entry><title>when a FLOSS project gets real big</title><link href="http://tshepang.net/when-a-floss-project-gets-real-big" rel="alternate"></link><published>2012-06-19T00:00:00+02:00</published><updated>2012-06-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-19:/when-a-floss-project-gets-real-big</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Developers typically send their changes to the maintainer of the
file that is being changed. Those maintainers, who number around
700, feed those changes up to the 130 subsystem maintainers. From
there, the patches make their way into linux-next, then to Linus
Torvalds, and, eventually the mainline—if they get …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Developers typically send their changes to the maintainer of the
file that is being changed. Those maintainers, who number around
700, feed those changes up to the 130 subsystem maintainers. From
there, the patches make their way into linux-next, then to Linus
Torvalds, and, eventually the mainline—if they get accepted at each
step along the way.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/499952/"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="quote"></category></entry><entry><title>'Advice to Aspiring Nanotechnologists' by Eric Drexler</title><link href="http://tshepang.net/advice-to-aspiring-nanotechnologists-by-eric-drexler" rel="alternate"></link><published>2012-06-10T00:00:00+02:00</published><updated>2012-06-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-10:/advice-to-aspiring-nanotechnologists-by-eric-drexler</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
Software systems will be vital to nanotechnology and to enabling
technologies along the way. A basic introduction to computers and
software will be of value to anyone in any area of science or
technology. Those interested in software related to nanotechnology
should pay special attention to numerical simulation methods for …&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
Software systems will be vital to nanotechnology and to enabling
technologies along the way. A basic introduction to computers and
software will be of value to anyone in any area of science or
technology. Those interested in software related to nanotechnology
should pay special attention to numerical simulation methods for
molecular mechanical and quantum electronic systems, and to the
design of programs for highly parallel computer systems, since this
is the direction hardware will be moving in the coming years.
Parallel systems will help designers develop nanotechnology, and
nanocomputers will later be used to build massively parallel
(trillion processor and up) computer systems. Finally, if powerful
systems are to be useful in molecular design, they will need to be
accessible through fast, clean, intuitive interfaces that let
designers see and manipulate model molecules.&lt;/blockquote&gt;
&lt;p&gt;The great Eric Drexler offers &lt;a class="reference external" href="http://www.kurzweilai.net/engines-of-creation-20-advice-to-aspiring-nanotechnologists"&gt;extensive guidance&lt;/a&gt; for those
considering studying towards molecular nanotech, and that quote is most
relevant to me, since I'm doing software and all.&lt;/p&gt;
&lt;p&gt;The end-notes, where he encourages supreme rigour and discipline, would
scare most away. This appears to be a demanding career.&lt;/p&gt;
</content><category term="future-tech"></category></entry><entry><title>developer of note: Victor Stinner</title><link href="http://tshepang.net/developer-of-note-victor-stinner" rel="alternate"></link><published>2012-06-09T00:00:00+02:00</published><updated>2012-06-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-06-09:/developer-of-note-victor-stinner</id><summary type="html">&lt;p&gt;Depending on the change, contributing to open source
software can be intensely challenging. Referring specifically to
CPython, the reference implementation of my favorite programming
language, you can have hundreds of messages on the mailing
lists, and at times, many more in the issue tracking system, all
discussing the change in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Depending on the change, contributing to open source
software can be intensely challenging. Referring specifically to
CPython, the reference implementation of my favorite programming
language, you can have hundreds of messages on the mailing
lists, and at times, many more in the issue tracking system, all
discussing the change in mind. Such changes are most often accompanied
with a &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0001/"&gt;PEP&lt;/a&gt; (Python Enhancement Proposal), a document
which is basically a design spec for such a change. It also,
helpfully, summarises the arguments against the change, and addresses
them while at it.&lt;/p&gt;
&lt;p&gt;Given all that, it can be quite challenging for any one individual to
champion such important changes, and an example of one such heroic
individual is &lt;a class="reference external" href="http://www.haypocalc.com/wiki/Accueil"&gt;Victor Stinner&lt;/a&gt;, a core CPython developer. He is the
most visible of the guys who helped ensure acceptance of &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0418/"&gt;PEP 418&lt;/a&gt;,
which proposes some time-related additions and improvements to the
standard library's &lt;a class="reference external" href="http://doc.python.org/library/time"&gt;time module&lt;/a&gt;.
The sheer amount of discussion that went around this
particular PEP was ridiculous.
The mailing list discussions were practically endless,
and so were the updates to the PEP, not to mention the amount of
research involved, which was needed in order to have CPython expose
this functionality in a cross-platform manner. Now, that's some
serious perseverance.&lt;/p&gt;
&lt;p&gt;In addition to this work, the guy has done a heck of a lot of work in
cleaning up, re-factoring, and optimizing the string-handling code. I
can't imagine that this stuff is easy, especially since a large
portion of it is in C! There's a whole lot more work he has done...
he's among the most prolific of all core CPython developers.&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="Python"></category></entry><entry><title>links 2012-05-17</title><link href="http://tshepang.net/links-2012-05-17" rel="alternate"></link><published>2012-05-17T00:00:00+02:00</published><updated>2012-05-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-17:/links-2012-05-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://go.linuxfoundation.org/who-writes-linux-2012"&gt;The rate of Linux kernel development is seriously impressive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.gnome.org/archives/gtk-devel-list/2007-November/msg00032.html"&gt;Why bundle stuff in one library instead of a few&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-devel/2011/04/msg00711.html"&gt;From humble beginnings to extreme success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Joel Spolsky is a wonderful writer, and has great humor. Check &lt;a class="reference external" href="http://hginit.com/04.html"&gt;his
impressive effort&lt;/a&gt; at making an oft-boring task of reading a
tutorial fun. Check …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://go.linuxfoundation.org/who-writes-linux-2012"&gt;The rate of Linux kernel development is seriously impressive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.gnome.org/archives/gtk-devel-list/2007-November/msg00032.html"&gt;Why bundle stuff in one library instead of a few&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-devel/2011/04/msg00711.html"&gt;From humble beginnings to extreme success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Joel Spolsky is a wonderful writer, and has great humor. Check &lt;a class="reference external" href="http://hginit.com/04.html"&gt;his
impressive effort&lt;/a&gt; at making an oft-boring task of reading a
tutorial fun. Check especially his reference to one obscure tv
actor.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="humor"></category></entry><entry><title>me loves new Git site design</title><link href="http://tshepang.net/me-loves-new-git-site-design" rel="alternate"></link><published>2012-05-16T00:00:00+02:00</published><updated>2012-05-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-16:/me-loves-new-git-site-design</id><summary type="html">&lt;p&gt;I really like the &lt;a class="reference external" href="http://git-scm.com/"&gt;new website design&lt;/a&gt; of the Git project (&lt;a class="reference external" href="https://github.com/blog/1125-new-git-homepage"&gt;story&lt;/a&gt;).
It even gained a nice and fresh icon, replacing the old which looked
like it was created in 1995. Note that &lt;a class="reference external" href="http://web.archive.org/web/20110716073224/http://git-scm.com/"&gt;the old site&lt;/a&gt; wasn't crap
either, and was already pretty much modern, following the 'simple and
bold' …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I really like the &lt;a class="reference external" href="http://git-scm.com/"&gt;new website design&lt;/a&gt; of the Git project (&lt;a class="reference external" href="https://github.com/blog/1125-new-git-homepage"&gt;story&lt;/a&gt;).
It even gained a nice and fresh icon, replacing the old which looked
like it was created in 1995. Note that &lt;a class="reference external" href="http://web.archive.org/web/20110716073224/http://git-scm.com/"&gt;the old site&lt;/a&gt; wasn't crap
either, and was already pretty much modern, following the 'simple and
bold' design trend I've witnessed in recent years. I'm jealous it's
better than that of &lt;a class="reference external" href="http://mercurial.selenic.com/"&gt;Mercurial&lt;/a&gt;, my favorite VCS.&lt;/p&gt;
</content><category term="VCS"></category></entry><entry><title>developer of note: Martin Pitt</title><link href="http://tshepang.net/developer-of-note-martin-pitt" rel="alternate"></link><published>2012-05-15T00:00:00+02:00</published><updated>2012-05-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-15:/developer-of-note-martin-pitt</id><summary type="html">&lt;p&gt;I suspect that &lt;a class="reference external" href="http://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; isn't a trivial piece of software, and I
consider it among the greatest of all FLOSS. It even bills itself the
most advanced of all FLOSS databases. That's what brought &lt;a class="reference external" href="http://www.piware.de/"&gt;Martin Pitt&lt;/a&gt;
to my attention, for he is it's Debian (and now also Ubuntu) maintainer.
One …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I suspect that &lt;a class="reference external" href="http://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; isn't a trivial piece of software, and I
consider it among the greatest of all FLOSS. It even bills itself the
most advanced of all FLOSS databases. That's what brought &lt;a class="reference external" href="http://www.piware.de/"&gt;Martin Pitt&lt;/a&gt;
to my attention, for he is it's Debian (and now also Ubuntu) maintainer.
One other notable thing about him is his quiet persona (I follow Debian
development fairly closely, and I don't remember seeing him take part in
any of the arguments in its mailing lists). I only ever notice him when
he'd give &lt;a class="reference external" href="http://www.piware.de/2011/09/dropping-postgresql-9-0-packages-for-debianubuntubackports/"&gt;some random&lt;/a&gt; &lt;a class="reference external" href="http://www.piware.de/2012/05/packages-for-postgresql-9-2-beta-1-now-available/"&gt;status update&lt;/a&gt;.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category><category term="non-Debian"></category></entry><entry><title>project of note: reprepro</title><link href="http://tshepang.net/project-of-note-reprepro" rel="alternate"></link><published>2012-05-11T00:00:00+02:00</published><updated>2012-05-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-11:/project-of-note-reprepro</id><summary type="html">&lt;p&gt;I have given kudos to &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/reprepro-saved-my-live"&gt;twice&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/what-i-do-after-debian-installation"&gt;before&lt;/a&gt;, and though those 2
posts are actually outdated, I still keep a custom repository, a subset
of the official repository of a specific arch, but only of packages that
I ever install.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Every once in a while, I run this command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;I have given kudos to &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/reprepro-saved-my-live"&gt;twice&lt;/a&gt; &lt;a class="reference external" href="http://tshepang.net/what-i-do-after-debian-installation"&gt;before&lt;/a&gt;, and though those 2
posts are actually outdated, I still keep a custom repository, a subset
of the official repository of a specific arch, but only of packages that
I ever install.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Every once in a while, I run this command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \
/var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;What it does is add packages that are stored by the Debian package
management system (located in &lt;tt class="docutils literal"&gt;/var/cache/apt/archives&lt;/tt&gt;) to the
custom repository (located in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.custom_repo&lt;/span&gt;&lt;/tt&gt;). That ensures that I
only keep packages that matter to me for any later install.&lt;/p&gt;
&lt;p&gt;Note that &lt;tt class="docutils literal"&gt;tshepang&lt;/tt&gt; is the name of the repository. It's an unofficial
equivalent of &lt;tt class="docutils literal"&gt;testing&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;unstable&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Another command that I sometimes run, though less frequently, is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang \
/var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;This one is used to help keep the repository fresh. Check out &lt;a class="reference external" href="http://tshepang.net/removing-obsolete-packages-from-a-local-debian-repository"&gt;this
post&lt;/a&gt; for an explanation.&lt;/p&gt;
&lt;p&gt;Even less frequently, it happens that some package files are no longer
referenced (i.e. not found in &lt;tt class="docutils literal"&gt;Package.gz&lt;/tt&gt;) for some reason. Here's
handy command to display them:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.custom_repo dumpunreferenced
&lt;/pre&gt;
&lt;p&gt;And here's another that actually gets rid of them:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.custom_repo deleteunreferenced
&lt;/pre&gt;
</content><category term="Debian"></category><category term="project-of-note"></category></entry><entry><title>my Argparse tutorial now part of official Python documentation</title><link href="http://tshepang.net/my-argparse-tutorial-now-part-of-official-python-documentation" rel="alternate"></link><published>2012-05-07T00:00:00+02:00</published><updated>2012-05-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-05-07:/my-argparse-tutorial-now-part-of-official-python-documentation</id><summary type="html">&lt;p&gt;I am very glad that &lt;a class="reference external" href="http://docs.python.org/howto/argparse"&gt;a tutorial&lt;/a&gt; I started writing over 2 months ago
has finally been added to &lt;a class="reference external" href="http://docs.python.org/howto"&gt;the howto section&lt;/a&gt; of CPython documentation.
It took a lot of iteration (over 7) in total before finally being
accepted. But even then, it's still not fully satisfactory for me, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am very glad that &lt;a class="reference external" href="http://docs.python.org/howto/argparse"&gt;a tutorial&lt;/a&gt; I started writing over 2 months ago
has finally been added to &lt;a class="reference external" href="http://docs.python.org/howto"&gt;the howto section&lt;/a&gt; of CPython documentation.
It took a lot of iteration (over 7) in total before finally being
accepted. But even then, it's still not fully satisfactory for me, and I
really hope that someone else with fresh eyes is going to go through all
of it and offer improvements. Even better, I hope people will find it
useful. I know I would have when I started doing argument parsing. I
found &lt;a class="reference external" href="http://docs.python.org/library/argparse"&gt;the main module documention&lt;/a&gt; overwhelming, and &lt;a class="reference external" href="http://docs.python.org/library/argparse#example"&gt;the very first
example&lt;/a&gt; is in fact why I even started writing this tutorial at all, as
is evident on &lt;a class="reference external" href="http://bugs.python.org/issue14034"&gt;the relevant issue&lt;/a&gt;.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>accessibility on Debian</title><link href="http://tshepang.net/accessibility-on-debian" rel="alternate"></link><published>2012-04-19T00:00:00+02:00</published><updated>2012-04-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-19:/accessibility-on-debian</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Assistive_technology#Software"&gt;Accessibility&lt;/a&gt; is one of those things we the privileged (those with
workable eyesight and hearing) tend to forget about; That's why
developers like Debian's Samuel Thibault deserve great respect. The guy
was brought to my attention by the great Raphael Hertzog through &lt;a class="reference external" href="http://raphaelhertzog.com/2012/04/19/people-behind-debian-samuel-thibault-working-on-accessibility-and-the-hurd/"&gt;one of
his all-important People Behind Debian series …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Assistive_technology#Software"&gt;Accessibility&lt;/a&gt; is one of those things we the privileged (those with
workable eyesight and hearing) tend to forget about; That's why
developers like Debian's Samuel Thibault deserve great respect. The guy
was brought to my attention by the great Raphael Hertzog through &lt;a class="reference external" href="http://raphaelhertzog.com/2012/04/19/people-behind-debian-samuel-thibault-working-on-accessibility-and-the-hurd/"&gt;one of
his all-important People Behind Debian series of interviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is one of those things that make me wish I was rich... pay a bunch
of people interested in this kind of work to do it full-time.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>developer of note: Stefano Zacchiroli</title><link href="http://tshepang.net/developer-of-note-stefano-zacchiroli" rel="alternate"></link><published>2012-04-15T00:00:00+02:00</published><updated>2012-04-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-15:/developer-of-note-stefano-zacchiroli</id><summary type="html">&lt;p&gt;I admire &lt;a class="reference external" href="http://upsilon.cc/~zack"&gt;this guy&lt;/a&gt; a lot:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;his great passion for Debian (he speaks on behalf of it on a variety
of events)&lt;/li&gt;
&lt;li&gt;mature and thoughtfulness in a variety of debates regarding this or
that decision within Debian&lt;/li&gt;
&lt;li&gt;his ongoing push for collaboration between Debian and other distros&lt;/li&gt;
&lt;li&gt;his positive outlook …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I admire &lt;a class="reference external" href="http://upsilon.cc/~zack"&gt;this guy&lt;/a&gt; a lot:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;his great passion for Debian (he speaks on behalf of it on a variety
of events)&lt;/li&gt;
&lt;li&gt;mature and thoughtfulness in a variety of debates regarding this or
that decision within Debian&lt;/li&gt;
&lt;li&gt;his ongoing push for collaboration between Debian and other distros&lt;/li&gt;
&lt;li&gt;his positive outlook for Debian, at a time when many are worried
about its loss of relevance&lt;/li&gt;
&lt;li&gt;his passion for software freedom (we need people like this in an age
where people tend to trade freedom for pragmatism)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To prove I'm not the only one, there a bunch more guys who were happy
enough with his 2010 term as Debian Project Leader (DPL), that they
re-elected him again. What's more interesting is that no one else stood
for election. He also won the term &lt;a class="reference external" href="https://lists.debian.org/debian-announce/2012/msg00008.html"&gt;the third time&lt;/a&gt;, so will reign over
Debian in 2012.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>links 2012-04-12</title><link href="http://tshepang.net/links-2012-04-12" rel="alternate"></link><published>2012-04-12T00:00:00+02:00</published><updated>2012-04-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-12:/links-2012-04-12</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.billthelizard.com/2008/12/books-programmers-dont-really-read.html"&gt;Books Programmers Don't Really Read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.b-list.org/weblog/2006/oct/28/python-tips-dont-be-too-concise/"&gt;avoid being too concise&lt;/a&gt; – a Python example&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2010/09/27/i-want-to-teach-my-kid-how-to-program/"&gt;excellent review of a book that uses Python to teach kids
programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.blog.aknin.name/2010/05/29/mailing-list-debates-considered-harmful/"&gt;mailing lists are less than ideal for debate/extended discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.billthelizard.com/2008/12/books-programmers-dont-really-read.html"&gt;Books Programmers Don't Really Read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.b-list.org/weblog/2006/oct/28/python-tips-dont-be-too-concise/"&gt;avoid being too concise&lt;/a&gt; – a Python example&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2010/09/27/i-want-to-teach-my-kid-how-to-program/"&gt;excellent review of a book that uses Python to teach kids
programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.blog.aknin.name/2010/05/29/mailing-list-debates-considered-harmful/"&gt;mailing lists are less than ideal for debate/extended discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category><category term="links"></category></entry><entry><title>wajig 2.5 released</title><link href="http://tshepang.net/wajig-25-released" rel="alternate"></link><published>2012-04-11T00:00:00+02:00</published><updated>2012-04-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-11:/wajig-25-released</id><summary type="html">&lt;p&gt;The release of &lt;a class="reference external" href="http://tshepang.net/wajig-23-released"&gt;wajig 2.3&lt;/a&gt;, though important to me, caused varius
complaints because it changed much of the UI. 2.5 goes a long way
towards fixing those. What particularly helped guide this release is my
creating a &lt;a class="reference external" href="http://groups.google.com/group/wajig"&gt;mailing list&lt;/a&gt;, just so that I can ask users for opinions …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The release of &lt;a class="reference external" href="http://tshepang.net/wajig-23-released"&gt;wajig 2.3&lt;/a&gt;, though important to me, caused varius
complaints because it changed much of the UI. 2.5 goes a long way
towards fixing those. What particularly helped guide this release is my
creating a &lt;a class="reference external" href="http://groups.google.com/group/wajig"&gt;mailing list&lt;/a&gt;, just so that I can ask users for opinions on
whether or not to do this or that change. There was much feedback and
complaints of course, sometimes to a point where I felt like I'm just
messing up, as in not helping make the world a better place. Luckily
there were also words of appreciation of my efforts in maintaining it.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120411T124858Z.html"&gt;the gory details&lt;/a&gt;.&lt;/p&gt;
</content><category term="wajig"></category></entry><entry><title>David Beazley's PyCon US 2012 Keynote</title><link href="http://tshepang.net/david-beazleys-pycon-us-2012-keynote" rel="alternate"></link><published>2012-04-09T00:00:00+02:00</published><updated>2012-04-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-09:/david-beazleys-pycon-us-2012-keynote</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://pyvideo.org/video/659/keynote-david-beazley"&gt;David Beazley's PyCon 2012 key note talk&lt;/a&gt; is among the best I've seen
in the field of software development. It's not even the content (the
complexity and hackability of PyPy), but rather the presentation itself.
The guy must have put a lot of effort in his slides, and what's better …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://pyvideo.org/video/659/keynote-david-beazley"&gt;David Beazley's PyCon 2012 key note talk&lt;/a&gt; is among the best I've seen
in the field of software development. It's not even the content (the
complexity and hackability of PyPy), but rather the presentation itself.
The guy must have put a lot of effort in his slides, and what's better
is that he was also doing live demonstrations. From those, you could
gather that this isn't a mere mortal. He's brilliant (and humorous). And
I've never even heard of him before, but he appears to be some sort of
legend in the Python community.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>links 2012-04-08</title><link href="http://tshepang.net/links-2012-04-08" rel="alternate"></link><published>2012-04-08T00:00:00+02:00</published><updated>2012-04-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-08:/links-2012-04-08</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a great post&lt;/a&gt; about the advantages of undo over warning dialogs&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.stackoverflow.com/2011/01/state-of-the-stack-2010-a-message-from-your-ceo/"&gt;the great success of Stack Overflow, and the associated Stack
Exchange network&lt;/a&gt; – lots of light humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3 is more suitable for teaching programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/past.html"&gt;history of HTML&lt;/a&gt; – the research and presentation is impressive&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a look&lt;/a&gt; at the high …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a great post&lt;/a&gt; about the advantages of undo over warning dialogs&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.stackoverflow.com/2011/01/state-of-the-stack-2010-a-message-from-your-ceo/"&gt;the great success of Stack Overflow, and the associated Stack
Exchange network&lt;/a&gt; – lots of light humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.comp.leeds.ac.uk/nde/papers/teachpy3.html"&gt;why Python 3 is more suitable for teaching programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintohtml5.info/past.html"&gt;history of HTML&lt;/a&gt; – the research and presentation is impressive&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.alistapart.com/articles/neveruseawarning"&gt;a look&lt;/a&gt; at the high fragmentation of programming languages&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Python"></category></entry><entry><title>'Finding Great Developers' by Joel Spolsky</title><link href="http://tshepang.net/finding-great-developers-by-joel-spolsky" rel="alternate"></link><published>2012-04-03T00:00:00+02:00</published><updated>2012-04-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-04-03:/finding-great-developers-by-joel-spolsky</id><summary type="html">&lt;p&gt;Reading &lt;a class="reference external" href="http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html"&gt;the article&lt;/a&gt; today reinforced my view that Joel Spolsky is
among the best bloggers on the topic of software development. Here he
discusses a few strategies on finding excellent developers, and my
favorite moment is when he mentions how hard he spoils interns in NYC:&lt;/p&gt;
&lt;blockquote&gt;
They're met at the …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Reading &lt;a class="reference external" href="http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html"&gt;the article&lt;/a&gt; today reinforced my view that Joel Spolsky is
among the best bloggers on the topic of software development. Here he
discusses a few strategies on finding excellent developers, and my
favorite moment is when he mentions how hard he spoils interns in NYC:&lt;/p&gt;
&lt;blockquote&gt;
They're met at the airport here by a uniformed limo driver who grabs
their luggage and whisks them away to their hotel, probably the
coolest hotel they've ever seen in their life, right in the middle
of the fashion district with models walking in and out at all hours
and complicated bathroom fixtures that are probably a part of the
permanent collection of the Museum of Modern Art...&lt;/blockquote&gt;
&lt;p&gt;The article is of course a lot deeper than that, and goes to show the
deep passion this guy has for excellence in the field.&lt;/p&gt;
</content><category term="quote"></category></entry><entry><title>wajig 2.4 released</title><link href="http://tshepang.net/wajig-24-released" rel="alternate"></link><published>2012-03-29T00:00:00+02:00</published><updated>2012-03-29T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-29:/wajig-24-released</id><summary type="html">&lt;p&gt;Less than a week after releasing 2.3, someone discovered a bug when
running the NEW subcommand. All wajig did was fall flat with an ugly
exception, making this some sort of emergency release. Anyways, I
already had some nice improvements, so I released those as well:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The INSTALL subcommand …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Less than a week after releasing 2.3, someone discovered a bug when
running the NEW subcommand. All wajig did was fall flat with an ugly
exception, making this some sort of emergency release. Anyways, I
already had some nice improvements, so I released those as well:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The INSTALL subcommand can now be given a mixture of filenames, .deb
files, and normal package names, and will be able to install the
packages specified. Previously, only one of these 3 types could be
installed at a time.&lt;/li&gt;
&lt;li&gt;Apparently the reasons I gave for removing the —simulate and
—teaching (now renamed to —teach) options in 2.3 weren't good enough,
so I reinstated them.&lt;/li&gt;
&lt;li&gt;The bash completer now completes both lower-case and upper-case
subcommands, thanks to &lt;a class="reference external" href="http://rrt.sc3d.org/"&gt;Reuben Thomas&lt;/a&gt;, an avid wajig user.&lt;/li&gt;
&lt;li&gt;There's a few other changes, so &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120327T130420Z.html"&gt;here's the gory details&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>links 2012-03-27</title><link href="http://tshepang.net/links-2012-03-27" rel="alternate"></link><published>2012-03-27T00:00:00+02:00</published><updated>2012-03-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-27:/links-2012-03-27</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;A highly detailed demonstration of &lt;a class="reference external" href="http://stackoverflow.com/q/1711631/321731"&gt;SQLite performance&lt;/a&gt;, which also
goes through various ways of tuning it.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://prog21.dadgum.com/80.html"&gt;Advice to Aimless, Excited Programmers&lt;/a&gt;; this sort of advice is not
nothing new but the writer is so good and the site design so clean
that it oughta be kinda canonical.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2012/03/03/nobody-wants-to-learn-how-to-program/"&gt;Nobody Wants to …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;A highly detailed demonstration of &lt;a class="reference external" href="http://stackoverflow.com/q/1711631/321731"&gt;SQLite performance&lt;/a&gt;, which also
goes through various ways of tuning it.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://prog21.dadgum.com/80.html"&gt;Advice to Aimless, Excited Programmers&lt;/a&gt;; this sort of advice is not
nothing new but the writer is so good and the site design so clean
that it oughta be kinda canonical.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://inventwithpython.com/blog/2012/03/03/nobody-wants-to-learn-how-to-program/"&gt;Nobody Wants to Learn How to Program&lt;/a&gt;; interesting advice on
teaching programming.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://eli.thegreenplace.net/2012/03/15/processing-xml-in-python-with-elementtree/"&gt;a gentle tutorial&lt;/a&gt; on Python's &lt;tt class="docutils literal"&gt;xml.etree.ElementTree&lt;/tt&gt; module&lt;/li&gt;
&lt;li&gt;It's very interesting to see &lt;a class="reference external" href="http://blogs.gnome.org/xan/2012/03/26/web-its-whats-for-dinner/"&gt;a browser with relatively little use&lt;/a&gt;
continue getting developed, while monsters like Firefox,
Chrome/Chromium, and Safari have (almost) taken over the world.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="GNOME"></category><category term="links"></category><category term="Python"></category></entry><entry><title>wajig 2.3 released</title><link href="http://tshepang.net/wajig-23-released" rel="alternate"></link><published>2012-03-25T00:00:00+02:00</published><updated>2012-03-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-03-25:/wajig-23-released</id><summary type="html">&lt;p&gt;It's been many months since wajig was released, but this was about as
good as any since I probably did far more work on it than on any other
release so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The most user-visible change is that I changed the UI to feel more
standard/natural, where each of …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;It's been many months since wajig was released, but this was about as
good as any since I probably did far more work on it than on any other
release so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The most user-visible change is that I changed the UI to feel more
standard/natural, where each of the wajig COMMANDS are 1st-class
citizens. Let me give an example of user wanting to install a package
named nautilus, but avoid installing its Recommends depencencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ole&lt;/span&gt;
wajig —norecommends INSTALL nautilus
&lt;span class="c1"&gt;# new&lt;/span&gt;
wajig INSTALL —norecommends nautilus
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I call this natural because it makes more sense to have the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--norecommends&lt;/span&gt;&lt;/tt&gt; command line option to be specified &lt;em&gt;after&lt;/em&gt; the
(wajig) subcommand it modifies. Also, the way it was implemented
previously, the option would silently be ignored if it was used in a
case where it was irrelevant. That's not good, and it links to the
next user-visible change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There is less magic and more strictness. Previously, these commands
resulted in the same outcome:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wajig REMOVEORPHANS
wajig REMOVE-ORPHANS
wajig R-____EMOVE-ORPH----___AN_S
&lt;/pre&gt;
&lt;p&gt;What wajig did was simply sanitise the commands, getting rid of the
junk. Well, I don't like that, but since I didn't want to break
people's commands/aliases/scripts I actually tried to preserve that
functionality, but argparse didn't let me do that, and messing around
with &lt;tt class="docutils literal"&gt;sys.argv&lt;/tt&gt; before argparse jumped in was an error-prone mess,
which links us to the next change, this time behind-the-scenes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I replaced the archaic &lt;tt class="docutils literal"&gt;getopt&lt;/tt&gt; CLI parser with a far more powerful
&lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;. This change alone, when I truly embraced it, using its
subcommand methods (see point 1 above), resulting in a ridiculous
work that involved mainly unfun work and resulted in changing (adding
and removing) thousands of lines code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The output of command &lt;tt class="docutils literal"&gt;wajig COMMANDS&lt;/tt&gt; is now generated
dynamically, instead of simply being read from a separate file.
Advantage is that it should now remain more up-to-date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The usage info for each COMMAND was store on its own file, and the
aliases were symblic links to them. Now that's ugly, but I did it
that was some time ago because I could not think of a better, quick
way. The ugly solution is simple, but it added over a 100 files in
user machines, which is just bad design. Well, modern Linux-based
package management makes such invisible to all but the most
avid/curious users, but I never liked it anyways. Now, all of that
help info is auto-generated by &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt; (you can imagine I'm a
big fan of that module by now).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There's bunch of other changes, though most was code stuff. As for
the user-visible stuff, a few COMMANDS were removed, a few options
added/removed. &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20120322T223441Z.html"&gt;Here's 'all' the gory details&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="wajig"></category></entry><entry><title>removing obsolete packages from a local Debian repository</title><link href="http://tshepang.net/removing-obsolete-packages-from-a-local-debian-repository" rel="alternate"></link><published>2012-02-21T00:00:00+02:00</published><updated>2012-02-21T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-21:/removing-obsolete-packages-from-a-local-debian-repository</id><summary type="html">&lt;div class="section" id="background-info"&gt;
&lt;h2&gt;background info&lt;/h2&gt;
&lt;p&gt;Bandwidth in South Africa is neither readily-available nor cheap, so
whenever I fetch and install Debian packages (e.g. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; upgrade&lt;/tt&gt;),
I also keep them in a local custom repository. I use a great tool named
&lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; for this, and this is the command I use to update …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="background-info"&gt;
&lt;h2&gt;background info&lt;/h2&gt;
&lt;p&gt;Bandwidth in South Africa is neither readily-available nor cheap, so
whenever I fetch and install Debian packages (e.g. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; upgrade&lt;/tt&gt;),
I also keep them in a local custom repository. I use a great tool named
&lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; for this, and this is the command I use to update that
repository, given the location of the fresh package files:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.custom_repo/ includedeb tshepang /var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;What's nice about the command is that, if there is an older version of
the pacakge I'm adding, it gets replaced, and the package index is
update accordingly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="and-now-to-the-topic-at-hand"&gt;
&lt;h2&gt;and now to the topic at hand&lt;/h2&gt;
&lt;p&gt;I run that command more or less regularly, but very often the repository
accumulates some junk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If a package gets renamed, reprepro has no way of knowing (at least
as far as my setup goes). One notable case of this is Debian kernels,
whose names match the major release versions (e.g.
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;linux-image-3.1.0-1-686-pae&lt;/span&gt;&lt;/tt&gt; becomes
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;linux-image-3.2.0-1-686-pae&lt;/span&gt;&lt;/tt&gt; when a new upstream release gets
packaged). Lots other packages change names, and very often, for a
variety of reasons (Debian is a little chaotic, often out of
necessity, and it's amazing that its developers keep it so damn
stable given all this change).&lt;/li&gt;
&lt;li&gt;If I add a package from an external repository or that I converted
from an rpm, reprepro has no way of knowing that fact. Now if I stop
using that package, it is just a waste of resources (CPU and disk
usage).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To help with the cleanup, I have written the following simple script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;apt_pkg&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;CUSTOM_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/wena/.custom_repo/dists/tshepang/main/&amp;quot;&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;binary-i386/Packages.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WHEEZY_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/lib/apt/lists/ftp.de.debian.org_debian_dists_testing_{}_&amp;quot;&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;binary-i386_Packages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;custom_repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CUSTOM_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;archive_areas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;main contrib non-free&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;wheezy_packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;archive_area&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;archive_areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WHEEZY_REPO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;archive_area&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;wheezy_packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;custom_repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wheezy_packages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;apt-cache policy &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt;
            &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;remove from cache [Y/n]? &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reprepro -vv --basedir /home/wena/.custom_repo/ &amp;quot;&lt;/span&gt;
                       &lt;span class="s2"&gt;&amp;quot;remove tshepang &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's a snippet of its output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cx-oracle:
  Installed: 5.1.1-2
  Candidate: 5.1.1-2
  Version table:
 *** 5.1.1-2 0
        500 file:/home/wena/.custom_repo/ tshepang/main i386 Packages
        100 /var/lib/dpkg/status
remove from cache [Y/n]?
&lt;/pre&gt;
&lt;p&gt;What it does is look for packages which are only available in my custom
reposity, as compared with the one in Wheezy (soon to be Debian 7). It
then prompts me on whether or not to remove it from that custom
repository. Today, it helped me get rid of dozens of junk.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Debian"></category></entry><entry><title>links 2012-02-15</title><link href="http://tshepang.net/links-2012-02-15" rel="alternate"></link><published>2012-02-15T00:00:00+02:00</published><updated>2012-02-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-15:/links-2012-02-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/testing.html"&gt;The amount of testing&lt;/a&gt; SQLite goes through before each release is
impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/013835.html"&gt;A stern slap on the wrist&lt;/a&gt; of noisy people; it's a well-informed
rebuttal against the famous &amp;quot;the CPython GIL sucketh&amp;quot; complaint.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sarge.readthedocs.org/en/latest/index.html"&gt;This subprocess wrapper&lt;/a&gt; looks immensely powerful; I haven't
needed its extra features yet, but I love the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/testing.html"&gt;The amount of testing&lt;/a&gt; SQLite goes through before each release is
impressive.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.python.org/pipermail/python-ideas/2012-February/013835.html"&gt;A stern slap on the wrist&lt;/a&gt; of noisy people; it's a well-informed
rebuttal against the famous &amp;quot;the CPython GIL sucketh&amp;quot; complaint.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sarge.readthedocs.org/en/latest/index.html"&gt;This subprocess wrapper&lt;/a&gt; looks immensely powerful; I haven't
needed its extra features yet, but I love the elegance and seeming
ease-of-use.&lt;/li&gt;
&lt;li&gt;A superb, highly-detailed &lt;a class="reference external" href="http://codereview.stackexchange.com/a/9003/"&gt;code review&lt;/a&gt; by &lt;a class="reference external" href="http://codereview.stackexchange.com/users/1659/winston-ewert"&gt;Winston Ewert&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codereview.stackexchange.com/users/1659/winston-ewert"&gt;This guy&lt;/a&gt; (same one mentioned above) exposed &lt;a class="reference external" href="http://codereview.stackexchange.com/a/9009/1346"&gt;my sloppiness&lt;/a&gt; as
a programmer; I was nearly embarassed.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Python"></category></entry><entry><title>attachment can lead to irrational behaviour</title><link href="http://tshepang.net/attachment-can-lead-to-irrational-behaviour" rel="alternate"></link><published>2012-02-01T00:00:00+02:00</published><updated>2012-02-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-01:/attachment-can-lead-to-irrational-behaviour</id><summary type="html">&lt;p&gt;In &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my previous job&lt;/a&gt;, we used to use some Java framework, &lt;a class="reference external" href="http://www.mulesoft.org/"&gt;Mule ESB&lt;/a&gt;,
for our clients. The project is distributed with a lot of jar files,
supposedly for the convenience of users. When we work on a project, we
just add all those jars to the classpath (we use Eclipse …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my previous job&lt;/a&gt;, we used to use some Java framework, &lt;a class="reference external" href="http://www.mulesoft.org/"&gt;Mule ESB&lt;/a&gt;,
for our clients. The project is distributed with a lot of jar files,
supposedly for the convenience of users. When we work on a project, we
just add all those jars to the classpath (we use Eclipse, an excessively
powerful and ugly IDE). Now, me being a sucker for the Debian way of
doing things, I'd install packages providing all those jars from a
Debian repository, then remove those Mule-distributed files, then add
symlinks in place of them pointing back to the actualy files. Imagine
how much time it took! Either that, or even easier (but still
time-consuming), skip the symlink thing entirely and just add those jars
(found in &lt;strong&gt;/usr/share/java&lt;/strong&gt; directory) directly.&lt;/p&gt;
&lt;p&gt;Beyond just wasting time, the are other potential problems with my
approach:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Debian's jar versions did tend to be different to Mule-supplied
versions. You can imagine what problems this can cause, especially
because the versions included there are most likely the ones used for
testing Mule.&lt;/li&gt;
&lt;li&gt;Even if the versions were the same, what if there are slight changes
from Debian's side. Debian's strict &lt;a class="reference external" href="http://www.debian.org/social_contract#guidelines"&gt;software guidelines&lt;/a&gt; implies
that they'll strip out some stuff that doesn't adhere. The good thing
is that Debian appends &lt;tt class="docutils literal"&gt;dfsg&lt;/tt&gt; to the version number, but &lt;a class="reference external" href="http://askubuntu.com/q/11592/2591"&gt;not
everybody knows that&lt;/a&gt;. And even if they did, they would then need to
spend time checking exactly what changed.&lt;/li&gt;
&lt;li&gt;Debian doesn't merely re-distribute the jar files. They actually
rebuild them, with Debian-supplied compilers. Maybe this isn't an
issue for Java projects, but who knows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is not to knock the Debian way of doing things. It's actually quite
excellent (hence my love), but it can't fit all scenarios. See Matt
Zimmerman's &lt;a class="reference external" href="http://mdzlog.alcor.net/2010/07/06/weve-packaged-all-of-the-free-software-what-now/"&gt;excellent post&lt;/a&gt;, where he touches on this issue.&lt;/p&gt;
&lt;p&gt;I did wise up a bit by simply doing things the way the makers of Mule
intended.&lt;/p&gt;
</content><category term="Debian"></category><category term="non-Python"></category></entry><entry><title>links 2012-02-01</title><link href="http://tshepang.net/links-2012-02-01" rel="alternate"></link><published>2012-02-01T00:00:00+02:00</published><updated>2012-02-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2012-02-01:/links-2012-02-01</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/a-prayer-to-the-programming-gods/"&gt;&amp;quot;A prayer to the programming gods&amp;quot;&lt;/a&gt; - decent humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://plope.com/Members/chrism/in_defense_of_zope_libraries"&gt;A bit of Zope history, how it rocked, and how it sucked&lt;/a&gt; - makes
me respect &lt;a class="reference external" href="http://docs.pylonsproject.org/en/latest/docs/pyramid.html"&gt;Pyramid&lt;/a&gt; even more.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jpos.org/blog/2010/06/technology-xy/"&gt;A scathing read regarding incompencies of developers&lt;/a&gt; - for the
sake of completeness, he should have mentioned that developers
often don't have time to fully …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/a-prayer-to-the-programming-gods/"&gt;&amp;quot;A prayer to the programming gods&amp;quot;&lt;/a&gt; - decent humor&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://plope.com/Members/chrism/in_defense_of_zope_libraries"&gt;A bit of Zope history, how it rocked, and how it sucked&lt;/a&gt; - makes
me respect &lt;a class="reference external" href="http://docs.pylonsproject.org/en/latest/docs/pyramid.html"&gt;Pyramid&lt;/a&gt; even more.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jpos.org/blog/2010/06/technology-xy/"&gt;A scathing read regarding incompencies of developers&lt;/a&gt; - for the
sake of completeness, he should have mentioned that developers
often don't have time to fully understand technologies they are
often commanded (by employers) to work with.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.mplayerhq.hu/pipermail/mplayer-users/2005-November/056854.html"&gt;on the frustrations of waiting too long to get help&lt;/a&gt; - great humor&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="humor"></category><category term="Pyramid"></category></entry><entry><title>project of note: Requests</title><link href="http://tshepang.net/project-of-note-requests" rel="alternate"></link><published>2011-12-31T00:00:00+02:00</published><updated>2011-12-31T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-12-31:/project-of-note-requests</id><summary type="html">&lt;p&gt;Requests is a Python module that makes it real easy to deal with HTTP.
As an example, something as scary as fetching a web page that needs
authentication requires only a single line of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's capable of &lt;a class="reference external" href="http://docs.python-requests.org/en/latest/index.html#feature-support"&gt;a lot more&lt;/a&gt; of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Requests is a Python module that makes it real easy to deal with HTTP.
As an example, something as scary as fetching a web page that needs
authentication requires only a single line of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's capable of &lt;a class="reference external" href="http://docs.python-requests.org/en/latest/index.html#feature-support"&gt;a lot more&lt;/a&gt; of course (&lt;a class="reference external" href="http://docs.python-requests.org/en/latest/user/quickstart/"&gt;tutorial&lt;/a&gt;), and it's weird
that something this nice hasn't been around for ages. There is another
that is much simpler to use and more advanced than Python's standard
library named &lt;a class="reference external" href="http://code.google.com/p/httplib2/"&gt;httplib2&lt;/a&gt;, but it's not quite as simple/elegant:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.cache&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;ugly&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_credentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example for achieving the same with only the standard library is far
messier.&lt;/p&gt;
</content><category term="project-of-note"></category><category term="Python"></category></entry><entry><title>Java gripes</title><link href="http://tshepang.net/java-gripes" rel="alternate"></link><published>2011-11-02T00:00:00+02:00</published><updated>2011-11-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-11-02:/java-gripes</id><summary type="html">&lt;p&gt;Okay, so Java sucks 'a bit', but the following surprised me:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I struggled to find a way to count the number of elements in an
array. In a string it's done thus: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;quot;four&amp;quot;.length()&lt;/span&gt;&lt;/tt&gt;. Given that, I
expected that &lt;tt class="docutils literal"&gt;{'f', 'o', 'u', &lt;span class="pre"&gt;'r'}.length()&lt;/span&gt;&lt;/tt&gt; would gimme the same
result. Nah …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Okay, so Java sucks 'a bit', but the following surprised me:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I struggled to find a way to count the number of elements in an
array. In a string it's done thus: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;quot;four&amp;quot;.length()&lt;/span&gt;&lt;/tt&gt;. Given that, I
expected that &lt;tt class="docutils literal"&gt;{'f', 'o', 'u', &lt;span class="pre"&gt;'r'}.length()&lt;/span&gt;&lt;/tt&gt; would gimme the same
result. Nah! I found that I had to do
&lt;tt class="docutils literal"&gt;new char [] {'f', 'o', 'u', &lt;span class="pre"&gt;'r'}.length&lt;/span&gt;&lt;/tt&gt;, and yes, without the
brackets after length. WTF! There might be a good reason for such
(seeming) inconsistency of course, but I've been spoilt by Python's
elegant equivalents: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;len(&amp;quot;four&amp;quot;)&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;len(['f','o',&lt;/span&gt; 'u', &lt;span class="pre"&gt;'r'])&lt;/span&gt;&lt;/tt&gt;
which all give the same result. (sidenote: &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; is a Python
built-in function, which explains why there's no dot notation there).&lt;/li&gt;
&lt;li&gt;The standard library doesn't have CSV handling! I had to find an
external library for that!&lt;/li&gt;
&lt;li&gt;Given 2 strings, I can't do &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;str1==str2&lt;/span&gt;&lt;/tt&gt; for comparison, but am
forced to use the string method, equals: &lt;tt class="docutils literal"&gt;str1.equals(str2)&lt;/tt&gt;. This
bit me a few times, and am sure am not the only one.&lt;/li&gt;
&lt;li&gt;The standard library doesn't have &lt;tt class="docutils literal"&gt;.INI&lt;/tt&gt; file handling (&lt;a class="reference external" href="http://stackoverflow.com/questions/3728823"&gt;Someone
pointed to a 3rd party library&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="non-Python"></category><category term="Python"></category></entry><entry><title>developer of note: John Palmieri</title><link href="http://tshepang.net/developer-of-note-john-palmieri" rel="alternate"></link><published>2011-09-20T00:00:00+02:00</published><updated>2011-09-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-09-20:/developer-of-note-john-palmieri</id><summary type="html">&lt;p&gt;Every so often, there appears a developer who pressures me away from
my lazy, unfocused, and undisciplined ass to go do some useful
programming.  This time around it's John Palmieri, the most visible of
the developers of &lt;a class="reference external" href="https://wiki.gnome.org/Projects/PyGObject"&gt;PyGObject&lt;/a&gt; (Python bindings for GTK+ and GLib).
The old way of using GTK …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every so often, there appears a developer who pressures me away from
my lazy, unfocused, and undisciplined ass to go do some useful
programming.  This time around it's John Palmieri, the most visible of
the developers of &lt;a class="reference external" href="https://wiki.gnome.org/Projects/PyGObject"&gt;PyGObject&lt;/a&gt; (Python bindings for GTK+ and GLib).
The old way of using GTK+ with Python has for years been PyGTK and
this guy has been tirelessly working to move the world to the more
modern PyGObject, and has led at least one coding sprint to help
achieve this goal.  He also appears friendly and humble. He rocks!&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="GNOME"></category><category term="Python"></category></entry><entry><title>moving from Acer TravelMate to HP Probook, using Debian</title><link href="http://tshepang.net/moving-from-acer-travelmate-to-hp-probook-using-debian" rel="alternate"></link><published>2011-07-16T00:00:00+02:00</published><updated>2011-07-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-16:/moving-from-acer-travelmate-to-hp-probook-using-debian</id><summary type="html">&lt;p&gt;I have been using an Acer TravelMate 6592 laptop for close to 3 years
(ever since I got &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my coding job&lt;/a&gt;). It had some issues:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.co.za/search?hl=en&amp;amp;biw=1366&amp;amp;bih=630&amp;amp;q=6592+acer&amp;amp;um=1&amp;amp;ie=UTF-8&amp;amp;tbm=isch&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=wi"&gt;it's damn ugly&lt;/a&gt;, though not as much as Lenovo ones&lt;/li&gt;
&lt;li&gt;it requires Intel non-free firmware for its Wi-Fi chipset&lt;/li&gt;
&lt;li&gt;it frequently refused to make the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I have been using an Acer TravelMate 6592 laptop for close to 3 years
(ever since I got &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my coding job&lt;/a&gt;). It had some issues:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.co.za/search?hl=en&amp;amp;biw=1366&amp;amp;bih=630&amp;amp;q=6592+acer&amp;amp;um=1&amp;amp;ie=UTF-8&amp;amp;tbm=isch&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=wi"&gt;it's damn ugly&lt;/a&gt;, though not as much as Lenovo ones&lt;/li&gt;
&lt;li&gt;it requires Intel non-free firmware for its Wi-Fi chipset&lt;/li&gt;
&lt;li&gt;it frequently refused to make the LAN accessible from Linux on boot;
this was likely a BIOS issue&lt;/li&gt;
&lt;li&gt;the battery capacity was below 50% so it didn't last&lt;/li&gt;
&lt;li&gt;the hard drive was developing bad sectors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other than that, it truly was an excellent laptop, and I never
complained about its performance, ever since I added a 2GB RAM stick, to
make it a total of 4GB (except that I wished my HDD was faster, tempting
me to buy an SSD). What else I really liked about it is the
feature-packed touchpad: Beyond the normal two-finger and
side-scrolling, it also had up-down-left-right buttons which allowed
constant-speed scrolling. It's interesting that such a touchpad is very
rare.&lt;/p&gt;
&lt;p&gt;I now got an HP Probook 4530s and its pros:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.co.za/search?q=probook+4530s&amp;amp;um=1&amp;amp;ie=UTF-8&amp;amp;tbm=isch&amp;amp;source=og&amp;amp;sa=N&amp;amp;hl=en&amp;amp;tab=wi&amp;amp;biw=1366&amp;amp;bih=630"&gt;it's stunning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;it's got a real fast hard drive; there were times when I saw speeds
upwards to 70MB/s, which I never saw with the older laptop&lt;/li&gt;
&lt;li&gt;its Wi-Fi doesn't require non-free software&lt;/li&gt;
&lt;li&gt;it's far more modern (USB3 support) and supposedly faster (Core
i5-2410M vs. Core 2 Duo T7500), but my typical workload made even the
TravelMate more than adequate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the cons:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a less featureful touchpad&lt;/li&gt;
&lt;li&gt;keyboard keys placed in weird locations (e.g. &lt;strong&gt;pg up&lt;/strong&gt; and &lt;strong&gt;pg dn&lt;/strong&gt;
buttons are placed far away, at the top-right corner; I blame the
(needless for me) numeric keypad&lt;/li&gt;
&lt;li&gt;the screen resolution is on the low side and so is the screen size;
the older laptop is much bigger even if they are both labeled 15.4&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...and Debian:&lt;/p&gt;
&lt;p&gt;Quite a few times, I tend to want to stick to a stable release of
Debian. Following Debian development does take time (frequent updates,
curiosity to see what changed, and something getting broken here and
there). So I tried to do the same here. Sadly, some of the software in
Squeeze is too outdated to be optimal, so am glad to have teams like
&lt;a class="reference external" href="http://tshepang.net/thanks-to-the-debian-backports-team"&gt;Debian Backports folk&lt;/a&gt;. But that wasn't enough, so I ended up
installing Xorg components from Debian Unstable (Suspend doesn't work
well with Squeeze (Debian 6) and backports doesn't have a newer X
version.&lt;/p&gt;
&lt;p&gt;Let's see how long I last trying to keep pure by running as little from
outside Squeeze as possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;This didn't even last for 1 day. I was having issues with my X hanging
the entire OS, forcing me to do a hard-reboot. This happened when I was
watching a video using VLC, so I blamed it and installed the version
from Debian Unstable. Sadly, doing things that way resulted in a VLC
that refused to die normally, forcing me to do &lt;tt class="docutils literal"&gt;kill &lt;span class="pre"&gt;-9&lt;/span&gt; vlc&lt;/tt&gt;. I then
just screwed my plans and upgraded fully to Unstable, and now VLC quits
gracefully. Let's see if I'll have the X lockup again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 2&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Well, I still experience machine lock-ups, the bad ones forcing a
hard-reboot. This might be related to Wi-Fi because I used the system
for quite a while using the wired link, without any such lock-up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 3&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;No more lock-ups, except very rarely. I run a mix of Testing and
Unstable at the moment, but my &amp;quot;/etc/sources.list&amp;quot; file points solely at
my custom repository and Testing, for it just is tiring to keep tracking
Unstable... way too much bandwidth.&lt;/p&gt;
</content><category term="Debian"></category><category term="hardware"></category></entry><entry><title>links 2011-07-15</title><link href="http://tshepang.net/links-2011-07-15" rel="alternate"></link><published>2011-07-15T00:00:00+02:00</published><updated>2011-07-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-15:/links-2011-07-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bergie.iki.fi/blog/understanding_meego/"&gt;What's up with MeeGo?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;a really good bug report&lt;/a&gt; – I found this because I was having the
same issue with Eclipse&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;wonderful openness&lt;/a&gt; – the sort of reporting that raises the
expectations of web applications providers&lt;/li&gt;
&lt;li&gt;a real nice &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/google-dictionary-by-goog/mgijmajocgfcbeboacabfgobmjgjcoja"&gt;Chromium dictionary Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pitivi.org/i/history.png"&gt;a graph&lt;/a&gt; showing the history FLOSS video editors&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bergie.iki.fi/blog/understanding_meego/"&gt;What's up with MeeGo?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;a really good bug report&lt;/a&gt; – I found this because I was having the
same issue with Eclipse&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=340298"&gt;wonderful openness&lt;/a&gt; – the sort of reporting that raises the
expectations of web applications providers&lt;/li&gt;
&lt;li&gt;a real nice &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/google-dictionary-by-goog/mgijmajocgfcbeboacabfgobmjgjcoja"&gt;Chromium dictionary Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pitivi.org/i/history.png"&gt;a graph&lt;/a&gt; showing the history FLOSS video editors&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category></entry><entry><title>thanks to the Debian backports team</title><link href="http://tshepang.net/thanks-to-the-debian-backports-team" rel="alternate"></link><published>2011-07-14T00:00:00+02:00</published><updated>2011-07-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-07-14:/thanks-to-the-debian-backports-team</id><summary type="html">&lt;p&gt;So I got this new HP laptop, Probook 4530s, and installed Debian 6
(Squeeze) on it. I was left sitting with two unbearable problems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The touchpad wasn't fully operational (GNOME Mouse Preferences didn't
have a Touchpad tab where I could change the settings).&lt;/li&gt;
&lt;li&gt;The video driver seemed to have a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;So I got this new HP laptop, Probook 4530s, and installed Debian 6
(Squeeze) on it. I was left sitting with two unbearable problems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The touchpad wasn't fully operational (GNOME Mouse Preferences didn't
have a Touchpad tab where I could change the settings).&lt;/li&gt;
&lt;li&gt;The video driver seemed to have a problem according to the output of
&lt;strong&gt;xvinfo&lt;/strong&gt; (&lt;tt class="docutils literal"&gt;no adaptors present&lt;/tt&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I curiously looked at &lt;a class="reference external" href="http://backports.debian.org/"&gt;the backports&lt;/a&gt;, and found Linux kernel 2.6.38
(Squeeze has 2.6.32). I didn't expect much from it, but installed it
anyway (I heard that it has improved desktop responsiveness). I was
pleasantly surprised to find that it fixed the above two problems.
Loveliness.&lt;/p&gt;
&lt;p&gt;On another note, I found that Mercurial 1.8 also has a backport.
This is great news because I have repositories I created with that
version and the format is incompatible with Squeeze's 1.6.&lt;/p&gt;
</content><category term="Debian"></category><category term="VCS"></category></entry><entry><title>my first code contribution to the CPython project</title><link href="http://tshepang.net/my-first-code-contribution-to-the-cpython-project" rel="alternate"></link><published>2011-06-10T00:00:00+02:00</published><updated>2011-06-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-06-10:/my-first-code-contribution-to-the-cpython-project</id><summary type="html">&lt;p&gt;Looking at &lt;a class="reference external" href="http://hg.python.org/cpython/file/default/Misc/ACKS"&gt;the long list&lt;/a&gt; of people who have contributed to Python,
you will notice that my name is somewhere. This moment excites me,
considering my deep respect for the project (the only other mega FLOSS
project I have comparable respect for is Debian).&lt;/p&gt;
&lt;p&gt;Interestinly, &lt;a class="reference external" href="http://bugs.python.org/issue12246"&gt;my patch&lt;/a&gt; went through a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Looking at &lt;a class="reference external" href="http://hg.python.org/cpython/file/default/Misc/ACKS"&gt;the long list&lt;/a&gt; of people who have contributed to Python,
you will notice that my name is somewhere. This moment excites me,
considering my deep respect for the project (the only other mega FLOSS
project I have comparable respect for is Debian).&lt;/p&gt;
&lt;p&gt;Interestinly, &lt;a class="reference external" href="http://bugs.python.org/issue12246"&gt;my patch&lt;/a&gt; went through a few iterations before it was
accepted, and even then, with some modifications. It was an eye-opening
experience, and made me learn a little more than I thought I needed to.
Now, I just need to do a few more of these.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>unfair criticism of Ubuntu</title><link href="http://tshepang.net/unfair-criticism-of-ubuntu" rel="alternate"></link><published>2011-05-26T00:00:00+02:00</published><updated>2011-05-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-05-26:/unfair-criticism-of-ubuntu</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;The developers who castigate Ubuntu are uniformly silent about the
number of kernel patches coming from the Mandriva camp. They have
nothing to say about how much Xandros gives back to Debian. Nobody
totals up contributions from Gentoo. There are no complaints about
Slackware's presence in the community. Arch Linux …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;The developers who castigate Ubuntu are uniformly silent about the
number of kernel patches coming from the Mandriva camp. They have
nothing to say about how much Xandros gives back to Debian. Nobody
totals up contributions from Gentoo. There are no complaints about
Slackware's presence in the community. Arch Linux developers do not
hear that they are not doing enough. There are no high-profile
articles on how rPath is taking advantage of free software
developers.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://lwn.net/Articles/294542/"&gt;In defence of Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="non-Debian"></category><category term="quote"></category></entry><entry><title>wajig 2.2 released</title><link href="http://tshepang.net/wajig-22-released" rel="alternate"></link><published>2011-05-09T00:00:00+02:00</published><updated>2011-05-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-05-09:/wajig-22-released</id><summary type="html">&lt;p&gt;Our friendly Debian developer agreed to upload yet another release of
wajig to Debian.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This one is quite special since it now uses Python 3.&lt;/li&gt;
&lt;li&gt;It also does automatic dependency installation for DEB files. This
part of the work took me longer because python-apt doesn't exactly
make it easy. I …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Our friendly Debian developer agreed to upload yet another release of
wajig to Debian.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This one is quite special since it now uses Python 3.&lt;/li&gt;
&lt;li&gt;It also does automatic dependency installation for DEB files. This
part of the work took me longer because python-apt doesn't exactly
make it easy. I even had to look in the code to be sure what exactly
is happening. I ended up using a mixture of dpkg (for installation of
stated DEBs, and to configure them) and python-apt (for the automatic
installation part).&lt;/li&gt;
&lt;li&gt;The WHICHPACKAGE command, which displays which packages the given
file path belongs to, got improved. It was using custom
implementation which was broken for some uses, but there are
available tools (&lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;--list&lt;/span&gt;&lt;/tt&gt; for locally-installed packages and
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-file&lt;/span&gt; search&lt;/tt&gt; for both local and remote packages) that do the
job better, and I made use of them. These tools were probably not
avaialable the time this feature was added to wajig.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>wajig 2.1 released</title><link href="http://tshepang.net/wajig-21-released" rel="alternate"></link><published>2011-04-27T00:00:00+02:00</published><updated>2011-04-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-27:/wajig-21-released</id><summary type="html">&lt;p&gt;Today I released &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20110427T131707Z.html"&gt;a new version of wajig&lt;/a&gt;, first time in about half a
year. It's not even like there's some major stuff or anything;
I just haven't put as much time. Regardless, it's quite a good release.&lt;/p&gt;
&lt;p&gt;One of the changes is getting rid of gjig, the GUI interface …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I released &lt;a class="reference external" href="http://packages.qa.debian.org/w/wajig/news/20110427T131707Z.html"&gt;a new version of wajig&lt;/a&gt;, first time in about half a
year. It's not even like there's some major stuff or anything;
I just haven't put as much time. Regardless, it's quite a good release.&lt;/p&gt;
&lt;p&gt;One of the changes is getting rid of gjig, the GUI interface.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I actually did like it, but it was never a production standard piece
of code. It was actually quite nifty and useful, but the interface
was not at all modern or usual. It also needed a lot of polish.&lt;/li&gt;
&lt;li&gt;I learned a lot from trying to port it away from the deprecated
libglade library to a more modern gtkbuilder (part of GTK+). But the
porting documentation wasn't really good, so I was left with the
option of doing it from scratch... not exactly a small task.&lt;/li&gt;
&lt;li&gt;Worse still is the fact that there were more pro-looking GUI package
managers out there.&lt;/li&gt;
&lt;li&gt;It didn't keep up with the pace of development wajig. It was a
2nd-class citizen.&lt;/li&gt;
&lt;li&gt;Oh, and I'm so afraid of GUI developement, or should I say GTK+. It
was never an easy domain for me, and I still don't really get it. And
yes, I've tried. Maybe other toolkits are easier, and I'm too lazy to
check them out.&lt;/li&gt;
&lt;li&gt;I wanted to move wajig forward into Python 3 land, and given that
GTK+ support for that Python version isn't exactly mature (at time of
writing), I felt that I was being held back.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>from Squeeze to Unstable, and back again</title><link href="http://tshepang.net/from-squeeze-to-unstable-and-back-again" rel="alternate"></link><published>2011-04-26T00:00:00+02:00</published><updated>2011-04-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-26:/from-squeeze-to-unstable-and-back-again</id><summary type="html">&lt;p&gt;With all the noise regarding GNOME 3, I decided to lose patience and go
check it out. Thing is it's currently in Debian Experimental suite, so I
installed the essential components from there, stuff like gnome-shell,
mutter and gnome-panel, and things weren't so smooth. So I thought that
it might …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With all the noise regarding GNOME 3, I decided to lose patience and go
check it out. Thing is it's currently in Debian Experimental suite, so I
installed the essential components from there, stuff like gnome-shell,
mutter and gnome-panel, and things weren't so smooth. So I thought that
it might be because I was still using Squeeze (Debian 6, released in
February), so I upgraded my entire system to Sid (the main Debian
development suite). Well, the new hotness wasn't as usable as I'd like,
so I decided to go back to my rock-solid and familiar GNOME 2
environment. I was surpride that I could to downgrade the whole thing
back to Squeeze, without any major hitch. Of course the downgrading
process wasn't exactly smooth (lots of package removals before
re-installation for one), but I'm running Squeeze as we speak.&lt;/p&gt;
&lt;p&gt;It would have been quicker for me to just re-install of course,
especially because I have some installation and setup scripts to make it
quick. But doing that would imply I wouln't have access to my computer
for minutes on end. Not good. Also, it's nice that I continued running
that fine-looking GNOME 3, while under-the-hood it was being removed. It
took just a logout and back in to be back home... GNOME 2 from Squeeze.
Note that this sort of thing is not officially supported by Debian. It's
probably going to be harder to do this as Unstable develops further. But
this exercise gave me newfound respect for the strength and stability of
the Debian system.&lt;/p&gt;
</content><category term="Debian"></category><category term="GNOME"></category></entry><entry><title>developer of note: Josselin Mouette</title><link href="http://tshepang.net/developer-of-note-josselin-mouette" rel="alternate"></link><published>2011-04-08T00:00:00+02:00</published><updated>2011-04-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-04-08:/developer-of-note-josselin-mouette</id><summary type="html">&lt;p&gt;The efforts that Josselin Mouette puts into maintaining Debian's GNOME
are amazing (and seemingly thankless). He is the most visible member of
that team-maintained part of Debian. He also portrays deep knowledge of
GNOME's oft-inconsistent and oft-complex internals, and does participate
in upstream discussions.&lt;/p&gt;
&lt;p&gt;Here are two examples of his …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The efforts that Josselin Mouette puts into maintaining Debian's GNOME
are amazing (and seemingly thankless). He is the most visible member of
that team-maintained part of Debian. He also portrays deep knowledge of
GNOME's oft-inconsistent and oft-complex internals, and does participate
in upstream discussions.&lt;/p&gt;
&lt;p&gt;Here are two examples of his heroic efforts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;His &lt;a class="reference external" href="http://lists.debian.org/debian-release/2009/08/msg00211.html"&gt;great summary&lt;/a&gt; of GNOME's then-current release status.&lt;/li&gt;
&lt;li&gt;With the release of GNOME 3, here he prepares &lt;a class="reference external" href="http://lists.debian.org/debian-gtk-gnome/2011/04/msg00006.html"&gt;a migration plan&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category><category term="GNOME"></category></entry><entry><title>cleansing multiple build directories</title><link href="http://tshepang.net/cleansing-multiple-build-directories" rel="alternate"></link><published>2011-03-26T00:00:00+02:00</published><updated>2011-03-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-26:/cleansing-multiple-build-directories</id><summary type="html">&lt;p&gt;In my adventures of &lt;a class="reference external" href="http://tshepang.net/my-jhbuild-setup"&gt;building GNOME with JHBuild&lt;/a&gt;, it often happens
that when I tweak something that affects the build environment (e.g. use
system Python instead of JHBuild-built one), I get a heck of a lot of
build failures. This will happen even after I run jhbuild clean (which …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my adventures of &lt;a class="reference external" href="http://tshepang.net/my-jhbuild-setup"&gt;building GNOME with JHBuild&lt;/a&gt;, it often happens
that when I tweak something that affects the build environment (e.g. use
system Python instead of JHBuild-built one), I get a heck of a lot of
build failures. This will happen even after I run jhbuild clean (which
runs &lt;tt class="docutils literal"&gt;make clean&lt;/tt&gt; on the modules), testimony to the weakness ofthe
GNOME build infrastructure (autotools, ...). This means that I need to
run &lt;tt class="docutils literal"&gt;make distclean&lt;/tt&gt; or better still (where applicable)
&lt;tt class="docutils literal"&gt;git clean &lt;span class="pre"&gt;-dfx&lt;/span&gt;&lt;/tt&gt;. Note that I sometimes even have to uninstall one or
two modules (on JHBuild path) to get a build failure fixe
(&lt;tt class="docutils literal"&gt;jhbuild uninstall modulename&lt;/tt&gt;). This is laborious work, so I
sometimes just wipe out the entire installation.&lt;/p&gt;
&lt;p&gt;Note that there's dozens of modules to build, so I wrote this little
script to take care of it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;full_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{}/{}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; git clean -dfx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; make distclean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cd ~/src/gnome/{} &amp;amp;&amp;amp; make clean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="update"&gt;
&lt;h2&gt;update&lt;/h2&gt;
&lt;p&gt;Someone very kind guy made &lt;a class="reference external" href="http://codereview.stackexchange.com/questions/1476/cleansing-multiple-build-directories/1477#1477"&gt;a bunch of suggestions&lt;/a&gt;, making my code much
better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;full_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;git clean -dfx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;make distclean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;make clean&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;p&gt;modules: &lt;a class="reference external" href="http://docs.python.org//library/os"&gt;os&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org//library/os.path"&gt;os.path&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org//library/subprocess"&gt;subprocess&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Python"></category><category term="GNOME"></category></entry><entry><title>my JHBuild setup</title><link href="http://tshepang.net/my-jhbuild-setup" rel="alternate"></link><published>2011-03-19T00:00:00+02:00</published><updated>2011-03-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-19:/my-jhbuild-setup</id><summary type="html">&lt;p&gt;JHBuild is a &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/command-reference.html.en"&gt;powerful&lt;/a&gt; and &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/config-reference.html.en"&gt;flexible&lt;/a&gt; build tool for GNOME. It does
takes some getting used to in terms of set-up, but this &lt;a class="reference external" href="http://live.gnome.org/Jhbuild"&gt;wiki page&lt;/a&gt; is
quite gentle, and it details how to get the code running on your
machine.&lt;/p&gt;
&lt;p&gt;If you use Debian (or Ubuntu), you can use run …&lt;/p&gt;</summary><content type="html">&lt;p&gt;JHBuild is a &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/command-reference.html.en"&gt;powerful&lt;/a&gt; and &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/config-reference.html.en"&gt;flexible&lt;/a&gt; build tool for GNOME. It does
takes some getting used to in terms of set-up, but this &lt;a class="reference external" href="http://live.gnome.org/Jhbuild"&gt;wiki page&lt;/a&gt; is
quite gentle, and it details how to get the code running on your
machine.&lt;/p&gt;
&lt;p&gt;If you use Debian (or Ubuntu), you can use run this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig --norecommends install build-essential docbook-xsl flex &lt;span class="se"&gt;\&lt;/span&gt;
bison cvs gperf cmake  &lt;span class="o"&gt;{&lt;/span&gt;uuid,ppp&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
libx&lt;span class="o"&gt;{&lt;/span&gt;composite,randr,damage,ft2,i,t&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
libxcb-&lt;span class="o"&gt;{&lt;/span&gt;event1,aux0,atom1&lt;span class="o"&gt;}&lt;/span&gt;-dev &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;pam0g,iw,db,gdbm,png12,ffi,tiff,vorbis,gl1-mesa,unistring&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;quvi,icu,neon27,usb-1.0-0,asound2,ncurses5,udev,usb,acl1&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
lib&lt;span class="o"&gt;{&lt;/span&gt;boost-signals,ldap2,sasl2&lt;span class="o"&gt;}&lt;/span&gt;-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's installs the development packages that will be needed by the build
process. The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-recommends&lt;/span&gt;&lt;/tt&gt; option means I want to limit the
installation to packages I really need, avoiding the extra stuff deemed
by the packager to be useful for me.&lt;/p&gt;
&lt;p&gt;My &amp;quot;~/.jhbuilrc&amp;quot; contains the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# build directory&lt;/span&gt;
&lt;span class="n"&gt;checkoutroot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/src/gnome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# don&amp;#39;t spew lots of distracting status messages&lt;/span&gt;
&lt;span class="n"&gt;notrayicon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# attempt to build modules even if their dependencies weren&amp;#39;t successfully built&lt;/span&gt;
&lt;span class="n"&gt;nopoison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# don&amp;#39;t build these since they have issues; this implies that I must install my distro&amp;#39;s development versions&lt;/span&gt;
&lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nspr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# dont fetch moduleset xml files from the web; use ones that are installed locally&lt;/span&gt;
&lt;span class="n"&gt;use_local_modulesets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# where html-formatted logs are kept&lt;/span&gt;
&lt;span class="n"&gt;tinderbox_outputdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/temp/tinderbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://library.gnome.org/devel/jhbuild/unstable/config-reference.html.en"&gt;Configuration File Reference&lt;/a&gt; for a detailed explanation of these
options.&lt;/p&gt;
&lt;p&gt;After this, I run &lt;tt class="docutils literal"&gt;jhbuild bootstrap &lt;span class="pre"&gt;--ignore-system&lt;/span&gt;&lt;/tt&gt;. This downloads,
builds, and installs the basic tools for building packages (here's &lt;a class="reference external" href="http://git.gnome.org/browse/jhbuild/tree/modulesets/bootstrap.modules"&gt;the
xml file&lt;/a&gt; it uses to determine what these tools are, and where it
downloads them from). To avoid issues with some incompatibility with my
OS, I use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--ignore-system&lt;/span&gt;&lt;/tt&gt;, which ensures that the bootstrap command
will use the blessed versions of these tools.&lt;/p&gt;
&lt;p&gt;When the bootstrap process is complete, I run the not-so-descriptive
command &lt;tt class="docutils literal"&gt;jhbuild tinderbox&lt;/tt&gt; (See Command Reference for a detailed
explanation of this and the other options). This is the same as build,
except that the output is stored in html files, in a directory specified
by &lt;strong&gt;tinderbox_outputdir&lt;/strong&gt; in the config file.&lt;/p&gt;
&lt;p&gt;Ideally, some hours later, the process should be complete. Reaching for
&amp;quot;~/temp/tinderbox&amp;quot; will present you with a whole bunch of html files,
one for each module. The file &amp;quot;index.html&amp;quot; will give a decent page that
acts like a summary of the entire build process, showing which modules
failed, and on what build stages. Gorgeous!&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;sidenotes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This process is rather simplified, for the sake of clarity.&lt;/li&gt;
&lt;li&gt;I run Debian 6, codenamed Squeeze.&lt;/li&gt;
&lt;li&gt;There is &lt;a class="reference external" href="http://www.vuntz.net/journal/post/2010/09/23/My-love-for-jhbuild"&gt;a more thorough tutorial&lt;/a&gt; elsewhere.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="GNOME"></category></entry><entry><title>cat, Python, and Perl</title><link href="http://tshepang.net/cat-python-and-perl" rel="alternate"></link><published>2011-03-15T00:00:00+02:00</published><updated>2011-03-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-03-15:/cat-python-and-perl</id><summary type="html">&lt;p&gt;I came across &lt;a class="reference external" href="http://greenteapress.com/perl/perl.pdf"&gt;a tutorial&lt;/a&gt; that showes how to implement a simple cat in
Perl. I've modified their example for the sake of simplicity:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;sub&lt;/span&gt; &lt;span class="nf"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;FILE&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;@ARGV …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;I came across &lt;a class="reference external" href="http://greenteapress.com/perl/perl.pdf"&gt;a tutorial&lt;/a&gt; that showes how to implement a simple cat in
Perl. I've modified their example for the sake of simplicity:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;sub&lt;/span&gt; &lt;span class="nf"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;FILE&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;@ARGV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Running this script (e.g. &lt;tt class="docutils literal"&gt;perl cat.pl file&lt;/tt&gt;)
will display those files as if you ran &lt;tt class="docutils literal"&gt;cat file&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;I decided to see how the Python example would look like:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
         &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                 &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Running this script (e.g. &lt;tt class="docutils literal"&gt;python3 cat.py file1 file2&lt;/tt&gt;)
will give exactly the same result as above.&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;notes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Perl keyword, &lt;tt class="docutils literal"&gt;my&lt;/tt&gt;, indicates that the variabe it refers to is
local. Without that, it's taken to be global. As for Python, this is
implicit, and depends on where the variable is placed (scope).&lt;/li&gt;
&lt;li&gt;Perl has special ways of identifying data types. In our example,
&lt;tt class="docutils literal"&gt;$&lt;/tt&gt; is used to identify a variable that has a single value, and is
known as a scalar in Perl talk. This can be tedious of course (so
much typing!). In Python, the data fed into the variable is the only
thing that determines what type of the variable it is. I see this as
noise from Perl. It results in some badness, as in you can have two
variables names be the same, but given different types (e.g.
&lt;tt class="docutils literal"&gt;my $var; my &amp;#64;var;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;The upper case file handler, &lt;tt class="docutils literal"&gt;FILE&lt;/tt&gt;, is a matter of convention for
Perl, and can be named 'anything'. I used it in the Python sample
only for the sake of clarity.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator is special syntax that means a file is being
manipulated. Python has no such.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;&amp;#64;_&lt;/tt&gt; is an argument list (&lt;tt class="docutils literal"&gt;&amp;#64;ARGV&lt;/tt&gt;) from the function call,
&lt;tt class="docutils literal"&gt;cat&lt;/tt&gt;. This is one other thing that is implicit about Perl, where
you have to learn extra syntax (and concepts), where a simple
argument list should have been provided during the function
declaration, as in Python's &lt;tt class="docutils literal"&gt;cat(files)&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Note that I didn't need to import anything to get Perl to work with
command line arguments. With Python, I need to explicitly do so,
and that's via the &lt;a class="reference external" href="http://docs.python.org/3/library/sys"&gt;sys module&lt;/a&gt;, which is part of its standard library.&lt;/li&gt;
&lt;li&gt;The Python &lt;tt class="docutils literal"&gt;with&lt;/tt&gt; statement is meant to make our lives easier, but
also adds syntax to the language. What it does is close a file for us
so we don't have to do it.&lt;/li&gt;
&lt;li&gt;The Python &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; function adds a newline by default, and that
would results in ugly output from our code, that's why we used the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;end=&amp;quot;&amp;quot;&lt;/span&gt;&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;[1:]&lt;/tt&gt; from the last statement in the Python example means that
we are slicing the list, removing the first element (element 0), and
keeping everything else. We do this because the current running
script is considered by Python as element 0, while in Perl, the 1st
element is actually the first thing that appears on the command line
after the script name. One would say that Perl does this more
elegantly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/reference/executionmodel"&gt;Python scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/3/library/functions#print"&gt;Python print function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/3/reference/compound_stmts#the-with-statement"&gt;Python with statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="non-Python"></category><category term="Python"></category></entry><entry><title>project of note: Iotop</title><link href="http://tshepang.net/project-of-note-iotop" rel="alternate"></link><published>2011-02-25T00:00:00+02:00</published><updated>2011-02-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-25:/project-of-note-iotop</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://guichaz.free.fr/iotop/"&gt;Iotop&lt;/a&gt; displays disk I/O usage of individual process, in a way similar
to top. What I really loved though is that it allows one to display the
accumulated amount of I/O on any of the DISK READ, DISK WRITE, SWAPIN,
and IO (overall). This is through a nifty …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://guichaz.free.fr/iotop/"&gt;Iotop&lt;/a&gt; displays disk I/O usage of individual process, in a way similar
to top. What I really loved though is that it allows one to display the
accumulated amount of I/O on any of the DISK READ, DISK WRITE, SWAPIN,
and IO (overall). This is through a nifty interface:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You just press &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; on the keyboard, and it will sort the hungriest
processes on top.&lt;/li&gt;
&lt;li&gt;Reversing the order, you just press &lt;tt class="docutils literal"&gt;r&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;If you want to sort by other colums, you just press the left/right
key.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://guichaz.free.fr/iotop/iotop_big.png"&gt;The presentation&lt;/a&gt; is rather busy, and it doesn't have the myriad
options that &lt;tt class="docutils literal"&gt;top&lt;/tt&gt; has (e.g. I can't chose to hide any of the columns
I'm uninterested in), but it's more than good enough for it's specific
purpose.&lt;/p&gt;
</content><category term="project-of-note"></category></entry><entry><title>plotting with matplotlib</title><link href="http://tshepang.net/plotting-with-matplotlib" rel="alternate"></link><published>2011-02-17T00:00:00+02:00</published><updated>2011-02-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-17:/plotting-with-matplotlib</id><summary type="html">&lt;p&gt;Here's drawing a simple graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# a list of 10 integers, 0-9&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now for something a little more interesting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Here's drawing a simple graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# a list of 10 integers, 0-9&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now for something a little more interesting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can have more than one graph on a single figure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What if the two graphs have much differing ranges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depending on need, that might not be ideal.
So let's create two separate y-axes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twinx&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah, not exactly ideal. We lost the automatic coloring, and we don't
even know which graph is which. Let's do better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twinx&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was done with the help of &lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/api/two_scales.html"&gt;this example&lt;/a&gt;. There's a heck of a
&lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/index.html"&gt;lot&lt;/a&gt; &lt;a class="reference external" href="http://matplotlib.sourceforge.net/gallery.html"&gt;more&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;built-in function: &lt;a class="reference external" href="http://docs.python.org/library/functions#range"&gt;range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;module: &lt;a class="reference external" href="http://docs.python.org/library/random"&gt;random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd-party module: &lt;a class="reference external" href="http://matplotlib.sourceforge.net/api/pyplot_api.html"&gt;matplotlib.pyplot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://matplotlib.sourceforge.net/contents.html"&gt;matplotlib documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Python"></category></entry><entry><title>project of note: matplotlib</title><link href="http://tshepang.net/project-of-note-matplotlib" rel="alternate"></link><published>2011-02-17T00:00:00+02:00</published><updated>2011-02-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-17:/project-of-note-matplotlib</id><summary type="html">&lt;p&gt;I believe &lt;a class="reference external" href="http://matplotlib.sourceforge.net/"&gt;matplotlib&lt;/a&gt; is THE plotting library for Python. It happens
to be highly advanced too, and has &lt;a class="reference external" href="http://matplotlib.sourceforge.net/contents.html"&gt;extensive documentation&lt;/a&gt; to show up
for it, including a large collection &lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/index.html"&gt;examples&lt;/a&gt; and a &lt;a class="reference external" href="http://matplotlib.sourceforge.net/gallery.html"&gt;gallery&lt;/a&gt; of
plots (and the code used to produce them).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/plotting-with-matplotlib"&gt;I played a bit with it&lt;/a&gt; and &lt;a class="reference external" href="http://tshepang.net/matplotlib-rocks"&gt;was …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I believe &lt;a class="reference external" href="http://matplotlib.sourceforge.net/"&gt;matplotlib&lt;/a&gt; is THE plotting library for Python. It happens
to be highly advanced too, and has &lt;a class="reference external" href="http://matplotlib.sourceforge.net/contents.html"&gt;extensive documentation&lt;/a&gt; to show up
for it, including a large collection &lt;a class="reference external" href="http://matplotlib.sourceforge.net/examples/index.html"&gt;examples&lt;/a&gt; and a &lt;a class="reference external" href="http://matplotlib.sourceforge.net/gallery.html"&gt;gallery&lt;/a&gt; of
plots (and the code used to produce them).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/plotting-with-matplotlib"&gt;I played a bit with it&lt;/a&gt; and &lt;a class="reference external" href="http://tshepang.net/matplotlib-rocks"&gt;was later on impressed by its
versatility&lt;/a&gt;.&lt;/p&gt;
</content><category term="project-of-note"></category><category term="Python"></category></entry><entry><title>links 2011-02-15</title><link href="http://tshepang.net/links-2011-02-15" rel="alternate"></link><published>2011-02-15T00:00:00+02:00</published><updated>2011-02-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-15:/links-2011-02-15</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.python.org/issue11162"&gt;my first CPython feature request&lt;/a&gt;; unsurprisingly, it was rejected&lt;/li&gt;
&lt;li&gt;I still can't comprehend why Ubuntu gods decided to put their window
controls on the left, and so does &lt;a class="reference external" href="http://yokozar.org/blog/archives/194"&gt;this guy&lt;/a&gt; (&lt;a class="reference external" href="http://www.codinghorror.com/blog/2010/03/the-opposite-of-fitts-law.html"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin-schweizer.de/operating-systems-lifecycle-chart.html"&gt;Operating Systems Lifecycle Chart&lt;/a&gt; – nice presentation, nice site
design&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin.mako.hill.usesthis.com/"&gt;The tools&lt;/a&gt; used by one very advanced Debian user; this …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bugs.python.org/issue11162"&gt;my first CPython feature request&lt;/a&gt;; unsurprisingly, it was rejected&lt;/li&gt;
&lt;li&gt;I still can't comprehend why Ubuntu gods decided to put their window
controls on the left, and so does &lt;a class="reference external" href="http://yokozar.org/blog/archives/194"&gt;this guy&lt;/a&gt; (&lt;a class="reference external" href="http://www.codinghorror.com/blog/2010/03/the-opposite-of-fitts-law.html"&gt;via&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin-schweizer.de/operating-systems-lifecycle-chart.html"&gt;Operating Systems Lifecycle Chart&lt;/a&gt; – nice presentation, nice site
design&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://benjamin.mako.hill.usesthis.com/"&gt;The tools&lt;/a&gt; used by one very advanced Debian user; this is quality
and in-depth writing.&lt;/li&gt;
&lt;li&gt;Someone claimed &lt;a class="reference external" href="http://lists.debian.org/debian-user/2007/11/msg00664.html"&gt;Gnucash was to blame&lt;/a&gt; for her move to Linux-based
systems; for another, &lt;a class="reference external" href="http://lists.debian.org/debian-user/2006/10/msg03316.html"&gt;the tool was Meld&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category></entry><entry><title>comparing Debian repositories</title><link href="http://tshepang.net/comparing-debian-repositories" rel="alternate"></link><published>2011-02-09T00:00:00+02:00</published><updated>2011-02-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-09:/comparing-debian-repositories</id><summary type="html">&lt;p&gt;If you got two Debian repositories, it's quite easy to check the
differences in package versions between them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;apt_pkg&lt;/span&gt;

&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/.repo_custom/dists/cache/main/binary-i386/Packages.gz&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Version …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;If you got two Debian repositories, it's quite easy to check the
differences in package versions between them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;apt_pkg&lt;/span&gt;

&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/.repo_custom/dists/cache/main/binary-i386/Packages.gz&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;repo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/.repo_bin/dists/squeeze/main/binary-i386/Packages.gz&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TagFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;repo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_system&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apt_pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version_compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{0}t{1}t({2})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;repo2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The line &lt;tt class="docutils literal"&gt;import apt_pkg&lt;/tt&gt; implies that &lt;strong&gt;python3-apt&lt;/strong&gt; is installed.&lt;/p&gt;
&lt;p&gt;Here's a snippet of what the output will look like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
2.32.1-2    2.28.1-6    (gconf-defaults-service)
0.23.0-1    0.21.1-1    (pylint)
2.91.5-2    2.30.2-2    (libgnomekbd-common)
0.21.2-1    0.16.4-1    (libpixman-1-dev)
2.91.7-1    2.30.1-2    (nautilus)
0.9.22-1    0.9.21-3    (pulseaudio-utils)
&lt;/pre&gt;
&lt;p&gt;Here, we get a display of package versions where the repo1 (custom repo
in this case) is greater than repo2 version. To do it the other way
around, use the &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt; character in the comparison line, &lt;tt class="docutils literal"&gt;if vc &amp;gt; 0&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;modules: &lt;a class="reference external" href="http://docs.python.org/library/gzip"&gt;gzip&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/library/os"&gt;os&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd party library: &lt;a class="reference external" href="http://apt.alioth.debian.org/python-apt-doc/library/apt_pkg.html"&gt;apt_pkg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Debian"></category><category term="Python"></category></entry><entry><title>links 2011-02-07</title><link href="http://tshepang.net/links-2011-02-07" rel="alternate"></link><published>2011-02-07T00:00:00+02:00</published><updated>2011-02-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-07:/links-2011-02-07</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html"&gt;The Law of Leaky Abstractions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tirania.org/blog/archive/2010/Dec-31.html"&gt;Open Source Contribution Etiquette&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jimmyg.org/blog/2009/working-with-python-subprocess.html"&gt;a gentle intro&lt;/a&gt; to Unix processes, and the Python &lt;a class="reference external" href="http://docs.python.org/library/subprocess"&gt;subprocess
module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/q/4861803/321731"&gt;How does one make Java ignore the number of spaces in a string when
splitting?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/docs-or-it-doesnt-exist/"&gt;on the importance of decent documentation&lt;/a&gt; – a great post&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html"&gt;The Law of Leaky Abstractions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tirania.org/blog/archive/2010/Dec-31.html"&gt;Open Source Contribution Etiquette&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jimmyg.org/blog/2009/working-with-python-subprocess.html"&gt;a gentle intro&lt;/a&gt; to Unix processes, and the Python &lt;a class="reference external" href="http://docs.python.org/library/subprocess"&gt;subprocess
module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/q/4861803/321731"&gt;How does one make Java ignore the number of spaces in a string when
splitting?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/docs-or-it-doesnt-exist/"&gt;on the importance of decent documentation&lt;/a&gt; – a great post&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Python"></category></entry><entry><title>splitting strings</title><link href="http://tshepang.net/splitting-strings" rel="alternate"></link><published>2011-02-01T00:00:00+02:00</published><updated>2011-02-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-02-01:/splitting-strings</id><summary type="html">&lt;p&gt;If I have a string with spaces, and wanted to split it into a
list/array, I would use this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a b c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
&lt;p&gt;I can go ahead and specify a delimiter (which character the string must
split on):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string with spaces …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;If I have a string with spaces, and wanted to split it into a
list/array, I would use this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a b c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
&lt;p&gt;I can go ahead and specify a delimiter (which character the string must
split on):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I get the same result:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
&lt;p&gt;But what if my string wasn't so forgiving?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a b  c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', '', 'c']
&lt;/pre&gt;
&lt;p&gt;Not exactly what we want. Leaving the delimiter out gives us the exact
same list as when we had this with a forgiving string.&lt;/p&gt;
&lt;p&gt;Anyways, the point is that for a lot of cases, probably a majority, when
one wants to perform a string split, it's because they want to delimit
it with spaces. So, Python covers for that common use-case. That's a bit
of &lt;a class="reference external" href="http://docs.python.org/library/stdtypes.html#str.split"&gt;magic&lt;/a&gt; (&lt;a class="reference external" href="http://bugs.python.org/issue1367936"&gt;justification&lt;/a&gt;) one might take for granted, because it's
not available in PHP and Java. I'm here only going to show Java
examples. PHP examples aren't that much different though.&lt;/p&gt;
&lt;p&gt;Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a b  c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, , c]
&lt;/pre&gt;
&lt;p&gt;That's not what we want, so in order to cover for my unforgiving string,
I get to use regular expressions (regexp)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; +&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;+&lt;/tt&gt; in the &lt;tt class="docutils literal"&gt;split()&lt;/tt&gt; method indicates that the match can either
be one or more consecutive spaces.&lt;/p&gt;
&lt;p&gt;That's not what we want, so in order to cover for my unforgiving string,
I get to use regular expressions (regexp)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string with spaces&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; +&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;But what if the string was even less forgiving. In this case, having
tabs as well? We need some more regexp help:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;splitString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\s+&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;splitString&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[a, b, c]
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;s&lt;/tt&gt; matches any white space.&lt;/p&gt;
&lt;p&gt;With Python, I expected the default way to work but it didn't, but came
back disappointed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['at', 'bnc']
&lt;/pre&gt;
&lt;p&gt;Perhaps it's a philosophical difference, but it's harder to do this with
Python. This is the only thing so that I found easier to achieve in Java
than in Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="n"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a    bnc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;...and we finally get what we want:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
['a', 'b', 'c']
&lt;/pre&gt;
</content><category term="Python"></category><category term="non-Python"></category></entry><entry><title>basic ConfigParser usage</title><link href="http://tshepang.net/basic-configparser-usage" rel="alternate"></link><published>2011-01-28T00:00:00+02:00</published><updated>2011-01-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-28:/basic-configparser-usage</id><summary type="html">&lt;p&gt;Reading &lt;tt class="docutils literal"&gt;.INI&lt;/tt&gt; files is very easy with Python. Say you had a file,
&amp;quot;&lt;em&gt;config.cfg&lt;/em&gt;&amp;quot;, with this content:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[numbers]
one: 1
two: 2
&lt;/pre&gt;
&lt;p&gt;The code to read that content is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[('one', '1'), ('two', '2' …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Reading &lt;tt class="docutils literal"&gt;.INI&lt;/tt&gt; files is very easy with Python. Say you had a file,
&amp;quot;&lt;em&gt;config.cfg&lt;/em&gt;&amp;quot;, with this content:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[numbers]
one: 1
two: 2
&lt;/pre&gt;
&lt;p&gt;The code to read that content is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[('one', '1'), ('two', '2')]
&lt;/pre&gt;
&lt;p&gt;That's a list of tuples, each tuple a key-value pair.&lt;/p&gt;
&lt;p&gt;Even better, since these are key-value pairs, why not use a more
suitable data type? Here goes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config.cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{'two': '2', 'one': '1'}
&lt;/pre&gt;
&lt;p&gt;That's the &lt;strong&gt;dict&lt;/strong&gt; function, which takes a list of tuples, and converts
them to a dictionary. You might also have noticed that the ordering is
now a bit off. That's because the dict type doesn't care about ordering.
Remember that in order to access dictionary content, you use a key and
not an index:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;
&lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/library/configparser"&gt;configparser module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/library/stdtypes#mapping-types-dict"&gt;dict mapping type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Python"></category></entry><entry><title>dangerous inconsistency in symlink removal</title><link href="http://tshepang.net/dangerous-inconsistency-in-symlink-removal" rel="alternate"></link><published>2011-01-28T00:00:00+02:00</published><updated>2011-01-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-28:/dangerous-inconsistency-in-symlink-removal</id><summary type="html">&lt;p&gt;Here's how to make a symlink and to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir dir
ln -s dir dirlink
rm -r dirlink
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's another way to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -r dirlink/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although it will do the job, it will actually complain with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm: cannot remove &lt;span class="sb"&gt;`&lt;/span&gt;dirlink&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;: Not a directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here's how to make a symlink and to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir dir
ln -s dir dirlink
rm -r dirlink
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's another way to delete it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -r dirlink/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although it will do the job, it will actually complain with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm: cannot remove &lt;span class="sb"&gt;`&lt;/span&gt;dirlink&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;: Not a directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we could have achieved the deletion with just:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm dirlink
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is because the symlink is just a single file. So there's no need to
treat it like a directory when deleting.&lt;/p&gt;
&lt;p&gt;Sadly, this behaviour is inconsistent when there is a mounted voulem.
The first way of deletion has no problem, but the second one will wipe
out the entire drive, if it so happens that &lt;tt class="docutils literal"&gt;dir&lt;/tt&gt; is the mount
directory (i.e. &lt;tt class="docutils literal"&gt;ln &lt;span class="pre"&gt;-s&lt;/span&gt; /media/my_drive dirlink &amp;amp;&amp;amp; rm &lt;span class="pre"&gt;-r&lt;/span&gt; dirlink/&lt;/tt&gt;). I
learned this the hard way :(&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] Here's &lt;a class="reference external" href="http://unix.stackexchange.com/q/6618/688"&gt;some explanation&lt;/a&gt;.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>basic usage of Python with Oracle DB, in Debian</title><link href="http://tshepang.net/basic-usage-of-python-with-oracle-db-in-debian" rel="alternate"></link><published>2011-01-27T00:00:00+02:00</published><updated>2011-01-27T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-27:/basic-usage-of-python-with-oracle-db-in-debian</id><summary type="html">&lt;p&gt;What if you wanted to access Oracle using Python? Once you are &lt;a class="reference external" href="http://tshepang.net/accessing-oracle-db-using-python-in-debian"&gt;set
up&lt;/a&gt;, it's real easy. We use &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt;, the most popular Python
library to read Oracle DBs.&lt;/p&gt;
&lt;p&gt;Let's start by simply reading the DB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;What if you wanted to access Oracle using Python? Once you are &lt;a class="reference external" href="http://tshepang.net/accessing-oracle-db-using-python-in-debian"&gt;set
up&lt;/a&gt;, it's real easy. We use &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt;, the most popular Python
library to read Oracle DBs.&lt;/p&gt;
&lt;p&gt;Let's start by simply reading the DB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt; explain exactly what each of these means.&lt;/p&gt;
&lt;p&gt;If we wanted instead to modify stuff in there, we only add one extra
line, which is &lt;tt class="docutils literal"&gt;cursor.commit&lt;/tt&gt;, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For real-world code, you are of course going to add exception handling
for all this, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cx_Oracle&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cx_Oracle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT * TABLE_NAME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That exception handling is rather oversimplified though, but is good
enough for illustrative purposes. Also, note that there is no timeout
set in case of problematic/slow network access, so my code will just sit
there waiting to connect.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>using Python's subprocess module</title><link href="http://tshepang.net/using-pythons-subprocess-module" rel="alternate"></link><published>2011-01-26T00:00:00+02:00</published><updated>2011-01-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-26:/using-pythons-subprocess-module</id><summary type="html">&lt;p&gt;There are at least 2 ways to run a simple command like &lt;tt class="docutils literal"&gt;echo test&lt;/tt&gt; in
Python: via the shell, or directly (via the kernel).&lt;/p&gt;
&lt;p&gt;This is via the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test
&lt;/pre&gt;
&lt;p&gt;This is via the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;There are at least 2 ways to run a simple command like &lt;tt class="docutils literal"&gt;echo test&lt;/tt&gt; in
Python: via the shell, or directly (via the kernel).&lt;/p&gt;
&lt;p&gt;This is via the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test
&lt;/pre&gt;
&lt;p&gt;This is via the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(b'testn', b'')
&lt;/pre&gt;
&lt;p&gt;Not exactly what we want. The output is actually a tuple (&lt;strong&gt;stdout&lt;/strong&gt;,
&lt;strong&gt;stderr&lt;/strong&gt;). Note that by default, &lt;tt class="docutils literal"&gt;shell=False&lt;/tt&gt;, and that's why it's
not stated here.&lt;/p&gt;
&lt;p&gt;To get the equivalent of what we get from the first example, we have to
do a bit more work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
test
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; thing indicates that the string is in bytes format. To get a
normal string from that, just run the string's &lt;a class="reference external" href="http://docs.python.org/library/stdtypes.html?highlight=encode#str.decode"&gt;decode method&lt;/a&gt;. Also,
that I had to use the &lt;tt class="docutils literal"&gt;end&lt;/tt&gt; argument on the &lt;a class="reference external" href="http://docs.python.org/library/functions.html#print"&gt;print function&lt;/a&gt;, was to
avoid an empty line on the terminal output.&lt;/p&gt;
&lt;p&gt;As can be seen, this means we do much of the work ourself, but the
benefit is that we now have finer-grained control (e.g. we get to
control when to display the output). Another benefit is that it is more
secure to do it this way (I don't know the details, so see &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Shell_injection#Shell_injection"&gt;shell
injection&lt;/a&gt; for the argument).&lt;/p&gt;
&lt;div class="section" id="further-reading"&gt;
&lt;h2&gt;further reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There is a whole wealth of info on this from &lt;a class="reference external" href="http://jimmyg.org/blog/2009/working-with-python-subprocess.html"&gt;a gentle tutorial&lt;/a&gt;
where I learned this stuff. It also explains what pipes are
(&lt;tt class="docutils literal"&gt;subprocess.PIPE&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Also, take a look at &lt;a class="reference external" href="http://docs.python.org/library/subprocess.html#subprocess.Popen.communicate"&gt;the official doc for the Popen.communicate()
method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://diveintopython3.net/strings.html"&gt;a great explanation&lt;/a&gt; of what strings really are, and how they
relate to Python 3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Python"></category></entry><entry><title>shlex and subprocess</title><link href="http://tshepang.net/shlex-and-subprocess" rel="alternate"></link><published>2011-01-25T00:00:00+02:00</published><updated>2011-01-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-25:/shlex-and-subprocess</id><summary type="html">&lt;p&gt;I learned about a module called &lt;a class="reference external" href="http://docs.python.org/library/shlex.html"&gt;shlex&lt;/a&gt;. It's stated to be a simple
lexical analyzer, and I don't really know what this means, but I found
at least one of its uses. It provides a convenience method that lets me
split a command line string, to feed into &lt;a class="reference external" href="http://docs.python.org/library/subprocess.html"&gt;subprocess&lt;/a&gt; module …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I learned about a module called &lt;a class="reference external" href="http://docs.python.org/library/shlex.html"&gt;shlex&lt;/a&gt;. It's stated to be a simple
lexical analyzer, and I don't really know what this means, but I found
at least one of its uses. It provides a convenience method that lets me
split a command line string, to feed into &lt;a class="reference external" href="http://docs.python.org/library/subprocess.html"&gt;subprocess&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;Let's say I want to run the command &lt;tt class="docutils literal"&gt;/bin/cat 'file with spaces'&lt;/tt&gt; from
within &lt;tt class="docutils literal"&gt;python&lt;/tt&gt;. A normal &lt;tt class="docutils literal"&gt;split&lt;/tt&gt; won't work, because it uses white
space as a delimiter (by default). To test, I will create a file named
&amp;quot;&lt;strong&gt;file with spaces&lt;/strong&gt;&amp;quot; and add text
(&lt;tt class="docutils literal"&gt;content of 'file with spaces'&lt;/tt&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content of file with spaces&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class="s1"&gt;&amp;#39;file with spaces&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's the code, using the normal split method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/bin/cat &amp;#39;file with spaces&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;formatted_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatted_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/bin/cat: &lt;span class="s1"&gt;&amp;#39;file: No such file or directory&lt;/span&gt;
&lt;span class="s1"&gt;/bin/cat: with: No such file or directory&lt;/span&gt;
&lt;span class="s1"&gt;/bin/cat: spaces&amp;#39;&lt;/span&gt;: No such file or directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's when &lt;tt class="docutils literal"&gt;shlex&lt;/tt&gt; module gets to be useful.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/bin/cat &amp;#39;file with spaces&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;formatted_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatted_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
content of 'file with spaces'
&lt;/pre&gt;
</content><category term="Python"></category></entry><entry><title>project of note: Geany</title><link href="http://tshepang.net/project-of-note-geany" rel="alternate"></link><published>2011-01-19T00:00:00+02:00</published><updated>2011-01-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-19:/project-of-note-geany</id><summary type="html">&lt;p&gt;I've been a satisfied user of Geany, a lightweight IDE, these past few
months:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;automatically detects if it should auto-indent (EG after a function
definition in Python)&lt;/li&gt;
&lt;li&gt;got code-folding&lt;/li&gt;
&lt;li&gt;can highlight #include file and open it (on new tab); does not do
this if it's a system file (/usr/include …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've been a satisfied user of Geany, a lightweight IDE, these past few
months:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;automatically detects if it should auto-indent (EG after a function
definition in Python)&lt;/li&gt;
&lt;li&gt;got code-folding&lt;/li&gt;
&lt;li&gt;can highlight #include file and open it (on new tab); does not do
this if it's a system file (/usr/include) though&lt;/li&gt;
&lt;li&gt;got terminal emulator on bottom (though I don't use it)&lt;/li&gt;
&lt;li&gt;can automatically detect tab width (or so it claims)&lt;/li&gt;
&lt;li&gt;has a usage finder which shows where a given function is called, even
among multiple files&lt;/li&gt;
&lt;li&gt;got autosave option as a plugin&lt;/li&gt;
&lt;li&gt;got file browser option as a plugin (although it does not detect
filesystem changes, EG when a file is deleted the view is not updated
to reveal such a change)&lt;/li&gt;
&lt;li&gt;when space-indent is chosen, backspacing through such behaves as if
they were tabs which enhances navigability&lt;/li&gt;
&lt;/ul&gt;
</content><category term="project-of-note"></category></entry><entry><title>project of note: linkchecker</title><link href="http://tshepang.net/project-of-note-linkchecker" rel="alternate"></link><published>2011-01-18T00:00:00+02:00</published><updated>2011-01-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:/project-of-note-linkchecker</id><summary type="html">&lt;p&gt;Weeks ago, I looked for a utility that would help me check for my blog's
dead links, and I bumped onto &lt;a class="reference external" href="http://linkchecker.sourceforge.net/"&gt;LinkChecker&lt;/a&gt; (version on my system is
6.2). It turned out to be impressively advanced, and here's the summary
from its manpage:&lt;/p&gt;
&lt;blockquote&gt;
LinkChecker features recursive checking, multithreading, output in …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Weeks ago, I looked for a utility that would help me check for my blog's
dead links, and I bumped onto &lt;a class="reference external" href="http://linkchecker.sourceforge.net/"&gt;LinkChecker&lt;/a&gt; (version on my system is
6.2). It turned out to be impressively advanced, and here's the summary
from its manpage:&lt;/p&gt;
&lt;blockquote&gt;
LinkChecker features recursive checking, multithreading, output in
colored or normal text, HTML, SQL, CSV or a sitemap graph in GML or
XML, support for HTTP/1.1, HTTPS, FTP, mailto:, news:, nntp:, Telnet
and local file links, restriction of link checking with regular
expression filters for URLs, proxy support, username/password
authorization for HTTP and FTP, robots.txt exclusion protocol
support, i18n support, a command line interface and a (Fast)CGI web
interface (requires HTTP server).&lt;/blockquote&gt;
</content><category term="project-of-note"></category></entry><entry><title>project of note: Mailman</title><link href="http://tshepang.net/project-of-note-mailman" rel="alternate"></link><published>2011-01-18T00:00:00+02:00</published><updated>2011-01-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:/project-of-note-mailman</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://list.org/"&gt;Mailman&lt;/a&gt; is most likely the most popular mailing list manager in the
FLOSS ecosystem. What I like about it is the ease-of-use it provides for
the end-user: if u wanna subscribe to &lt;a class="reference external" href="mailto:topic&amp;#64;host.org"&gt;topic&amp;#64;host.org&lt;/a&gt; mailing list, you
simply append -request to the recepient name (&lt;a class="reference external" href="mailto:topic-request&amp;#64;host.org"&gt;topic-request&amp;#64;host.org&lt;/a&gt;)
and use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://list.org/"&gt;Mailman&lt;/a&gt; is most likely the most popular mailing list manager in the
FLOSS ecosystem. What I like about it is the ease-of-use it provides for
the end-user: if u wanna subscribe to &lt;a class="reference external" href="mailto:topic&amp;#64;host.org"&gt;topic&amp;#64;host.org&lt;/a&gt; mailing list, you
simply append -request to the recepient name (&lt;a class="reference external" href="mailto:topic-request&amp;#64;host.org"&gt;topic-request&amp;#64;host.org&lt;/a&gt;)
and use the subject &amp;quot;subscribe&amp;quot;, and simply send. To unsubscribe, you do
the same, except the subject becomes &amp;quot;unsubscribe&amp;quot;. There's also the web
interface for those who won't remember/know these simple instructions of
course. Another bonus: it's written in Python!&lt;/p&gt;
</content><category term="project-of-note"></category></entry><entry><title>project of note: rdiff-backup</title><link href="http://tshepang.net/project-of-note-rdiff-backup" rel="alternate"></link><published>2011-01-18T00:00:00+02:00</published><updated>2011-01-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:/project-of-note-rdiff-backup</id><summary type="html">&lt;p&gt;So I got my hands on a 250GB 2.5&amp;quot; portable HDD, which led to me to go do
proper backups again. I decided to go back to the familiar
&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/"&gt;rdiff-backup&lt;/a&gt; and I became exceedingly impressed by its thorough
documentation (&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/rdiff-backup.1.html"&gt;manpage&lt;/a&gt;, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/FAQ.html"&gt;FAQ&lt;/a&gt;, and the one place beginners should
start, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/examples.html"&gt;examples …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I got my hands on a 250GB 2.5&amp;quot; portable HDD, which led to me to go do
proper backups again. I decided to go back to the familiar
&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/"&gt;rdiff-backup&lt;/a&gt; and I became exceedingly impressed by its thorough
documentation (&lt;a class="reference external" href="http://rdiff-backup.nongnu.org/rdiff-backup.1.html"&gt;manpage&lt;/a&gt;, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/FAQ.html"&gt;FAQ&lt;/a&gt;, and the one place beginners should
start, &lt;a class="reference external" href="http://rdiff-backup.nongnu.org/examples.html"&gt;examples&lt;/a&gt;), a myriad capabilities (over 60 command line
options), and an elegant design (the target directory looks exactly like
the original except for an extra directory named rdiff-backup-data,
which contains all that's needed to roll-back, restore, check stats,
...).&lt;/p&gt;
&lt;p&gt;My usage:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rdiff-backup --include-globbing-filelist rdiff-backup ~/ /media/backup
&lt;/pre&gt;
&lt;p&gt;There, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/conf/rdiff-backup&lt;/span&gt;&lt;/tt&gt; is a file that has a list of directories
I want to exclude in the backup, and &lt;tt class="docutils literal"&gt;/media/backup&lt;/tt&gt; is the backup
destination.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There is a credible competitor in a form of duplicity, which is probably
superior since it's got encryption. This duplicity also got a bonus of
being used by some hot new GUI backup utility now &lt;a class="reference external" href="http://lists.fedoraproject.org/pipermail/announce/2010-May/002815.html"&gt;endorsed by Fedora&lt;/a&gt;
and may in future be &lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2010-February/msg00013.html"&gt;an official part of GNOME&lt;/a&gt;, Déjà Dup.&lt;/p&gt;
</content><category term="project-of-note"></category><category term="GNOME"></category></entry><entry><title>project of note: Sudo</title><link href="http://tshepang.net/project-of-note-sudo" rel="alternate"></link><published>2011-01-18T00:00:00+02:00</published><updated>2011-01-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:/project-of-note-sudo</id><summary type="html">&lt;p&gt;Some of the benefits of Sudo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The password I authenticate with to perform admin tasks is the same
as the one I use to log in as normal user. This means, in simple
setups, one need only remember one password, instead of two.&lt;/li&gt;
&lt;li&gt;The extra command you have to type …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Some of the benefits of Sudo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The password I authenticate with to perform admin tasks is the same
as the one I use to log in as normal user. This means, in simple
setups, one need only remember one password, instead of two.&lt;/li&gt;
&lt;li&gt;The extra command you have to type before performing any admin task
reduces the danger of running dangerous commands... the sort of thing
that is easy to do when logged in as root.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And some of the more advanced benefits:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[gives users] permission to do certain tasks as a different user
(which doesn’t even have to be root) without giving them complete
access to that user or root. On server systems or multiuser systems
with different people working on different tasks not everyone need
complete access to the system, one hands out only the amount of
access that is required for the task.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://ask.debian.net/questions/4cac81ff19ce953ad306ccab/answers/4cac8a1719ce953ad306dbf0"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="project-of-note"></category><category term="quote"></category></entry><entry><title>project of note: Twisted</title><link href="http://tshepang.net/project-of-note-twisted" rel="alternate"></link><published>2011-01-18T00:00:00+02:00</published><updated>2011-01-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-18:/project-of-note-twisted</id><summary type="html">&lt;p&gt;I've been impressed by &lt;a class="reference external" href="http://stackoverflow.com/q/2974781"&gt;the claims made for Twisted&lt;/a&gt;, which erased the
erroneous thought I've been having that it's just another web framework.
Well, it appears it doesn't really have an equal, and is something
completely different.&lt;/p&gt;
&lt;p&gt;What prompted me to award it &lt;strong&gt;project of note&lt;/strong&gt; honor is its &lt;a class="reference external" href="http://twistedmatrix.com/trac/wiki/ReviewProcess"&gt;patch …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been impressed by &lt;a class="reference external" href="http://stackoverflow.com/q/2974781"&gt;the claims made for Twisted&lt;/a&gt;, which erased the
erroneous thought I've been having that it's just another web framework.
Well, it appears it doesn't really have an equal, and is something
completely different.&lt;/p&gt;
&lt;p&gt;What prompted me to award it &lt;strong&gt;project of note&lt;/strong&gt; honor is its &lt;a class="reference external" href="http://twistedmatrix.com/trac/wiki/ReviewProcess"&gt;patch
review process&lt;/a&gt;, a good indicator that this isn't a toy.&lt;/p&gt;
</content><category term="project-of-note"></category></entry><entry><title>links 2011-01-17</title><link href="http://tshepang.net/links-2011-01-17" rel="alternate"></link><published>2011-01-17T00:00:00+02:00</published><updated>2011-01-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-17:/links-2011-01-17</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5642/688"&gt;a wealth of info on 'kill -9'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/a/1010/688"&gt;the best comparison of vi and emacs I've seen yet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://slott-softwarearchitect.blogspot.com/2011/01/java-php-python-which-is-faster-in.html"&gt;the complexity of programming language benchmarking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pixelbeat.org/misc/google_stars.html"&gt;high profile FLOSS developers employed by Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I have never seen such &lt;a class="reference external" href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/"&gt;detailed criticism&lt;/a&gt; of a programming language.&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/q/5642/688"&gt;a wealth of info on 'kill -9'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/a/1010/688"&gt;the best comparison of vi and emacs I've seen yet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://slott-softwarearchitect.blogspot.com/2011/01/java-php-python-which-is-faster-in.html"&gt;the complexity of programming language benchmarking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pixelbeat.org/misc/google_stars.html"&gt;high profile FLOSS developers employed by Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I have never seen such &lt;a class="reference external" href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/"&gt;detailed criticism&lt;/a&gt; of a programming language.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="links"></category><category term="Emacs"></category></entry><entry><title>accessing Oracle DB using Python, in Debian</title><link href="http://tshepang.net/accessing-oracle-db-using-python-in-debian" rel="alternate"></link><published>2011-01-15T00:00:00+02:00</published><updated>2011-01-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-15:/accessing-oracle-db-using-python-in-debian</id><summary type="html">&lt;p&gt;The following instructions assume that you are using &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Debian
Squeeze&lt;/a&gt;, the current 'stable' release. The instructions here are
very specific, so look &lt;a class="reference external" href="http://agiletesting.blogspot.com/2005/05/installing-and-using-cxoracle-on-unix.html"&gt;elsewhere&lt;/a&gt; for something more generic.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;downloads&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Get registered on Oracle website, and download
oracle-instantclient11.2-basic*.rpm (~40MB).&lt;/li&gt;
&lt;li&gt;Get &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/"&gt;cx-Oracle&lt;/a&gt; rpm for your specific Python version and your
specific …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;The following instructions assume that you are using &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Debian
Squeeze&lt;/a&gt;, the current 'stable' release. The instructions here are
very specific, so look &lt;a class="reference external" href="http://agiletesting.blogspot.com/2005/05/installing-and-using-cxoracle-on-unix.html"&gt;elsewhere&lt;/a&gt; for something more generic.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;downloads&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Get registered on Oracle website, and download
oracle-instantclient11.2-basic*.rpm (~40MB).&lt;/li&gt;
&lt;li&gt;Get &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/"&gt;cx-Oracle&lt;/a&gt; rpm for your specific Python version and your
specific processor (in my case, 3.1 and i386 respectively).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;installation and setup&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libpython3.1 libaio1 alien
sudo alien --install oracle-instantclient11.2-basic*rpm cx_Oracle*rpm
sudo ln -s /usr/lib/python3.1/site-packages/cx_Oracle.so /usr/lib/python3.1/lib-dynload
sudo ln -s /usr/lib/oracle/11.2/client/lib/libnnz11.so /usr/lib
sudo ln -s /usr/lib/oracle/11.2/client/lib/libclntsh.so.11.1 /usr/lib
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/oracle/11.2/client/lib &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
python3 -c &lt;span class="s1"&gt;&amp;#39;import cx_Oracle&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that last line executes without printing a message to the screen,
the install is most likely successful.&lt;/p&gt;
&lt;p&gt;For basic usage, see &lt;a class="reference external" href="http://tshepang.net/basic-usage-of-python-with-oracle-db-in-debian"&gt;this tiny tutorial&lt;/a&gt;.&lt;/p&gt;
</content><category term="Debian"></category><category term="Python"></category><category term="non-FLOSS"></category></entry><entry><title>poll results of debian-user's favorite FLOSS</title><link href="http://tshepang.net/poll-results-of-debian-users-favorite-floss" rel="alternate"></link><published>2011-01-15T00:00:00+02:00</published><updated>2011-01-15T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-15:/poll-results-of-debian-users-favorite-floss</id><summary type="html">&lt;p&gt;Here's an index of the poll results where I asked on debian-user mailing
list what their favorite FLOSS is. It's a yearly poll which has been
running for a few years now, and is now defunct:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2009/11/msg00930.html"&gt;2009&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2008/12/msg00031.html"&gt;2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2007/12/msg00144.html"&gt;2007&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2006/11/msg00305.html"&gt;2006&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2005/11/msg03609.html"&gt;2005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;Here's an index of the poll results where I asked on debian-user mailing
list what their favorite FLOSS is. It's a yearly poll which has been
running for a few years now, and is now defunct:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2009/11/msg00930.html"&gt;2009&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2008/12/msg00031.html"&gt;2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2007/12/msg00144.html"&gt;2007&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2006/11/msg00305.html"&gt;2006&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lists.debian.org/debian-user/2005/11/msg03609.html"&gt;2005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category></entry><entry><title>factors affecting choice of tools</title><link href="http://tshepang.net/factors-affecting-choice-of-tools" rel="alternate"></link><published>2011-01-06T00:00:00+02:00</published><updated>2011-01-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2011-01-06:/factors-affecting-choice-of-tools</id><summary type="html">&lt;p&gt;&lt;strong&gt;technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;speed&lt;/li&gt;
&lt;li&gt;resource-usage&lt;/li&gt;
&lt;li&gt;features&lt;/li&gt;
&lt;li&gt;stability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;non-technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ease-of-use&lt;/li&gt;
&lt;li&gt;polish&lt;/li&gt;
&lt;li&gt;standards-compliance&lt;/li&gt;
&lt;li&gt;popularity&lt;/li&gt;
&lt;li&gt;politics&lt;/li&gt;
&lt;li&gt;support&lt;/li&gt;
&lt;li&gt;familiarity&lt;/li&gt;
&lt;li&gt;taste&lt;/li&gt;
&lt;li&gt;monetary cost&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;speed&lt;/li&gt;
&lt;li&gt;resource-usage&lt;/li&gt;
&lt;li&gt;features&lt;/li&gt;
&lt;li&gt;stability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;non-technical&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ease-of-use&lt;/li&gt;
&lt;li&gt;polish&lt;/li&gt;
&lt;li&gt;standards-compliance&lt;/li&gt;
&lt;li&gt;popularity&lt;/li&gt;
&lt;li&gt;politics&lt;/li&gt;
&lt;li&gt;support&lt;/li&gt;
&lt;li&gt;familiarity&lt;/li&gt;
&lt;li&gt;taste&lt;/li&gt;
&lt;li&gt;monetary cost&lt;/li&gt;
&lt;/ul&gt;
</content><category term="untagged"></category></entry><entry><title>blog of note: We'll See (Matt Zimmerman)</title><link href="http://tshepang.net/blog-of-note-well-see-matt-zimmerman" rel="alternate"></link><published>2010-12-03T00:00:00+02:00</published><updated>2010-12-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-12-03:/blog-of-note-well-see-matt-zimmerman</id><summary type="html">&lt;p&gt;I'm a regular reader of &lt;a class="reference external" href="http://planet.debian.org/"&gt;Planet Debian&lt;/a&gt;, so I frequently bump onto Matt
Zimmerman's blog. This a Debian Developer who also happens to do paid
work on Ubuntu as well (employed by Canonical). He writes clearly and
with a sober and mature tone. It's very interesting when you see a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm a regular reader of &lt;a class="reference external" href="http://planet.debian.org/"&gt;Planet Debian&lt;/a&gt;, so I frequently bump onto Matt
Zimmerman's blog. This a Debian Developer who also happens to do paid
work on Ubuntu as well (employed by Canonical). He writes clearly and
with a sober and mature tone. It's very interesting when you see a
software developer conversant with non-technical stuff, and able to
write about it so well.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I started with one post with an obviously interesting title, &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/06/12/how-to-decide-what-to-read-and-what-not-to-read/"&gt;How to
decide what to read (and what not to read)?&lt;/a&gt;&amp;quot;. This piqued my
interest also because I've been thinking about &lt;a class="reference external" href="http://tshepang.net/where-i-live-on-the-web"&gt;my own activities on
the web&lt;/a&gt; too. Also, his mention of News closely match mine, other
than that I'm simply (mostly) not interested in traditional big news
(presidents approves blah) and tabloids, and normally get enough of a
dose from co-workers and friends, and mostly face-to-face.&lt;/li&gt;
&lt;li&gt;This led to another, &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/04/06/breadth-and-depth/"&gt;Breadth and depth&lt;/a&gt;&amp;quot;, in which he touches on
the social effects of web-enabled technology. This is a topic that
has been beaten to death of course, but he fortunately keeps his
contribution very brief and fresh, and I like that he doesn't claim
to offer any solutions, but merely exploring them.&lt;/li&gt;
&lt;li&gt;And there was &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2009/05/03/internet-discussion-trends/"&gt;Internet discussion trends: from Usenet to
micro-blogs&lt;/a&gt;&amp;quot;, where he discussed various ways forms of on-line
discussion, which is the first topic of its type I've seen yet.&lt;/li&gt;
&lt;li&gt;He even dabbled with a bit of poetry in &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/12/02/breathing-information/"&gt;Breathing information&lt;/a&gt;&amp;quot;.
Nice attempt.&lt;/li&gt;
&lt;li&gt;He also displays an insightful understanding of what package
management in &amp;quot;&lt;a class="reference external" href="http://mdzlog.alcor.net/2010/07/06/weve-packaged-all-of-the-free-software-what-now/"&gt;We've packaged all of the free software...what
now?&lt;/a&gt;&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a whole bunch of gorgeous-sounding posts that I didn't care to
read yet, and hope to keep the above list updated when I do.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>it's less work building from a VCS than from a tarball</title><link href="http://tshepang.net/its-less-work-building-from-a-vcs-than-from-a-tarball" rel="alternate"></link><published>2010-11-20T00:00:00+02:00</published><updated>2010-11-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-20:/its-less-work-building-from-a-vcs-than-from-a-tarball</id><summary type="html">&lt;p&gt;tarball:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find download link&lt;/li&gt;
&lt;li&gt;download the tarball&lt;/li&gt;
&lt;li&gt;navigate to the tarball (using a GUI file browser)&lt;/li&gt;
&lt;li&gt;extract the tarball (using a GUI extractor)&lt;/li&gt;
&lt;li&gt;navigate to the extracted directory (using the shell)&lt;/li&gt;
&lt;li&gt;and finally... &lt;tt class="docutils literal"&gt;$&amp;nbsp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find clone link&lt;/li&gt;
&lt;li&gt;clone the …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;tarball:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find download link&lt;/li&gt;
&lt;li&gt;download the tarball&lt;/li&gt;
&lt;li&gt;navigate to the tarball (using a GUI file browser)&lt;/li&gt;
&lt;li&gt;extract the tarball (using a GUI extractor)&lt;/li&gt;
&lt;li&gt;navigate to the extracted directory (using the shell)&lt;/li&gt;
&lt;li&gt;and finally... &lt;tt class="docutils literal"&gt;$&amp;nbsp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;find the website&lt;/li&gt;
&lt;li&gt;find clone link&lt;/li&gt;
&lt;li&gt;clone the repository&lt;/li&gt;
&lt;li&gt;navigate to the cloned directory (using the shell)&lt;/li&gt;
&lt;li&gt;and finally... &lt;tt class="docutils literal"&gt;$&amp;nbsp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, that's 2 extra steps for going the tarball way.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>when it seems OK to compromise on software freedom</title><link href="http://tshepang.net/when-it-seems-ok-to-compromise-on-software-freedom" rel="alternate"></link><published>2010-11-05T00:00:00+02:00</published><updated>2010-11-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-11-05:/when-it-seems-ok-to-compromise-on-software-freedom</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://stackexchange.com/sites"&gt;Stack Exchange&lt;/a&gt; is a network of websites built to make the internet
better by providing quality Answers to Questions on specific topics. Its
flagship product is &lt;a class="reference external" href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;, which is likely the single most
important programming resource on the web. Part of the reason of this
site's success is the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://stackexchange.com/sites"&gt;Stack Exchange&lt;/a&gt; is a network of websites built to make the internet
better by providing quality Answers to Questions on specific topics. Its
flagship product is &lt;a class="reference external" href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;, which is likely the single most
important programming resource on the web. Part of the reason of this
site's success is the excellent community built around it.&lt;/p&gt;
&lt;p&gt;Among the sites that &lt;a class="reference external" href="http://stackexchange.com/sites"&gt;Stack Exchange&lt;/a&gt; has built is &lt;a class="reference external" href="http://unix.stackexchange.com/"&gt;Unix &amp;amp; Linux&lt;/a&gt;, and
it's stated goal is to be THE place to get answers on non-programming
topics related to Unix and Linux-based systems. Note that this family of
comupter system is highly fragmented; there's literally hundreds of
them, though most can further be classified under few families:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Debian (includes Ubuntu)&lt;/li&gt;
&lt;li&gt;RedHat (includes SuSE)&lt;/li&gt;
&lt;li&gt;BSD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given that there's a lot of similarities between them, to have one
unified place to ask questions about each of them rocks.&lt;/p&gt;
&lt;p&gt;Now that's well and good, until one realises that these StackExchange
sites run on non-FLOSS. Now, consider that there are FLOSS alternatives
to these. Debian folk maintain and participate in an instance of one
such alternative, named &lt;a class="reference external" href="http://shapado.com/"&gt;Shapado&lt;/a&gt;. This instance is a place where one
can ask Debian-related questions, and is in essence a competitor to
StackExchange's Unix &amp;amp; Linux site, and this had me in a seriously
painful dilemma: do I continue using the superior but non-FLOSS service
or the inferior but FLOSS Shapado. The following evaluation makes the
choice real easy:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ask.debian.net/"&gt;Debian Q&amp;amp;A&lt;/a&gt;: FLOSS (+1) —&amp;gt; &lt;strong&gt;total=1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://unix.stackexchange.com/"&gt;Unix &amp;amp; Linux&lt;/a&gt;: better community (+1), better site experience (+1),
caters to more than just Debian (+1) —&amp;gt; &lt;strong&gt;total=3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="non-FLOSS"></category></entry><entry><title>abusing the computer 'genius'</title><link href="http://tshepang.net/abusing-the-computer-genius" rel="alternate"></link><published>2010-10-28T00:00:00+02:00</published><updated>2010-10-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-28:/abusing-the-computer-genius</id><summary type="html">&lt;p&gt;Here's a part-fictional account of events that are largely my fault:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Friend got a new laptop and I elect to install Debian (or whatever OS
I find suitable at that moment) side-by-side with the pre-installed
Windows.&lt;/li&gt;
&lt;li&gt;I show Friend around since he finds the interface unfamiliar, and I
get a …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Here's a part-fictional account of events that are largely my fault:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Friend got a new laptop and I elect to install Debian (or whatever OS
I find suitable at that moment) side-by-side with the pre-installed
Windows.&lt;/li&gt;
&lt;li&gt;I show Friend around since he finds the interface unfamiliar, and I
get a dry mouth explaining the advantages, while trying hard to avoid
Windows bashing. He sort of agrees.&lt;/li&gt;
&lt;li&gt;I upgrade it later on (mainly because I'm hoping the new hotness will
get their Wi-Fi hardware working).&lt;/li&gt;
&lt;li&gt;The upgrade breaks something else in the process, and I spend hours
fixing it...&lt;/li&gt;
&lt;li&gt;Only to have them spend their computing lives in Windows since it's
more familiar (as well as the fact the software that came with their
cell-phone doesn't run anywhere else).&lt;/li&gt;
&lt;li&gt;We computer 'geniuses' all know that Windows has a nasty habit of
overwriting the boot partition such that an already-installed OS is
no longer bootable, so I gotta come over, to make it bootable again
(and this is made worse by the fact that reinstalls are pretty commom
when Windows gives trouble).&lt;/li&gt;
&lt;/ol&gt;
</content><category term="untagged"></category></entry><entry><title>great honors for Donald Knuth</title><link href="http://tshepang.net/great-honors-for-donald-knuth" rel="alternate"></link><published>2010-10-19T00:00:00+02:00</published><updated>2010-10-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-19:/great-honors-for-donald-knuth</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I would say he is man of a stature similar to the stature of
Leonard Euler in mathematics. Such men are not born every
century...&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.softpanorama.org/People/Knuth/index.shtml"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Such praise isn't given everyday.&lt;/p&gt;
</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I would say he is man of a stature similar to the stature of
Leonard Euler in mathematics. Such men are not born every
century...&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.softpanorama.org/People/Knuth/index.shtml"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Such praise isn't given everyday.&lt;/p&gt;
</content><category term="quote"></category></entry><entry><title>wajig 2.0.50 released</title><link href="http://tshepang.net/wajig-2050-released" rel="alternate"></link><published>2010-10-13T00:00:00+02:00</published><updated>2010-10-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-13:/wajig-2050-released</id><summary type="html">&lt;p&gt;Not sure, but I think this is &lt;a class="reference external" href="http://lists.debian.org/debian-devel-changes/2010/10/msg00611.html"&gt;my proudest release yet&lt;/a&gt; of wajig so
far. Among other things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I cleaned up the Debian packaging with &lt;a class="reference external" href="http://savetheions.com/2010/01/20/packaging-python-applicationsmodules-for-debian/"&gt;some great help&lt;/a&gt;. I promise
that it was seriously ugly. I guess nobody was motivated enough to
clean it up... including me.&lt;/li&gt;
&lt;li&gt;I added a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Not sure, but I think this is &lt;a class="reference external" href="http://lists.debian.org/debian-devel-changes/2010/10/msg00611.html"&gt;my proudest release yet&lt;/a&gt; of wajig so
far. Among other things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I cleaned up the Debian packaging with &lt;a class="reference external" href="http://savetheions.com/2010/01/20/packaging-python-applicationsmodules-for-debian/"&gt;some great help&lt;/a&gt;. I promise
that it was seriously ugly. I guess nobody was motivated enough to
clean it up... including me.&lt;/li&gt;
&lt;li&gt;I added a fresh help system, and cleaned up the documentation
machinery while at it.&lt;/li&gt;
&lt;li&gt;Increased the use of aptitude, where it makes sense.&lt;/li&gt;
&lt;li&gt;Made some commands redundant by introducing better ones.&lt;/li&gt;
&lt;li&gt;Some polishing (consistency fixes).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>a talk on what software engineering should be</title><link href="http://tshepang.net/a-talk-on-what-software-engineering-should-be" rel="alternate"></link><published>2010-10-01T00:00:00+02:00</published><updated>2010-10-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-10-01:/a-talk-on-what-software-engineering-should-be</id><summary type="html">&lt;p&gt;I really enjoyed &lt;a class="reference external" href="http://confreaks.net/videos/282-lsrc2010-real-software-engineering"&gt;this humorous, eye-opening, and informative talk&lt;/a&gt;
that draws parallels between software and traditional engineering
disciplines. The presenter really did good research to prepare for the
presentation (which he heartily enjoyed), but unfortunately flies too
quick near the end when realizing he's out of time, without properly
explaining …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I really enjoyed &lt;a class="reference external" href="http://confreaks.net/videos/282-lsrc2010-real-software-engineering"&gt;this humorous, eye-opening, and informative talk&lt;/a&gt;
that draws parallels between software and traditional engineering
disciplines. The presenter really did good research to prepare for the
presentation (which he heartily enjoyed), but unfortunately flies too
quick near the end when realizing he's out of time, without properly
explaining what he proposes as &lt;strong&gt;real&lt;/strong&gt; software engineering.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>my Debian package management setup</title><link href="http://tshepang.net/my-debian-package-management-setup" rel="alternate"></link><published>2010-09-28T00:00:00+02:00</published><updated>2010-09-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-28:/my-debian-package-management-setup</id><summary type="html">&lt;p&gt;Much of this is obsolete: I no longer use &lt;tt class="docutils literal"&gt;debmirror&lt;/tt&gt; and no longer
keep the entire binary repository of i386 arch.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There's a useful tool in Debian named debmirror. It's function is to
create and manage a partial copy of an official Debian repository, and I
use it to create …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Much of this is obsolete: I no longer use &lt;tt class="docutils literal"&gt;debmirror&lt;/tt&gt; and no longer
keep the entire binary repository of i386 arch.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;There's a useful tool in Debian named debmirror. It's function is to
create and manage a partial copy of an official Debian repository, and I
use it to create 2 repos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;an entire i386 Debian repo for &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Squeeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an entire source Debian repo for &lt;a class="reference external" href="http://www.debian.org/releases/squeeze/"&gt;Squeeze&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How this works is that I'd run the following command
(an example for the source repo):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/usr/bin/debmirror
 --verbose
 --progress
 --host=ftp.sun.ac.za
 --passive
 --dist=squeeze
 --root=ftp/debian
 --section=main
 --method=ftp
 --arch=none
 /home/wena/.repo_src
&lt;/pre&gt;
&lt;p&gt;(look at debmirror's manpage to see what all those options mean)&lt;/p&gt;
&lt;p&gt;The result is that I'll be having ~30GB of Debian locally (for a
comparison, see &lt;a class="reference external" href="http://www.debian.org/mirror/size"&gt;total Debian archive size&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;That's a lot of data, most of which I'll never use, but:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I do this as a matter of convenience; I want to be able to install
anything when I'm having a fresh machine, and internet access is not
yet fast and cheap in South Africa.&lt;/li&gt;
&lt;li&gt;I also like to mess around with the packaging system, deleting and
reinstalling packages on a whim, and I don't want to be waiting for
some file to download when I do that kind of tinkering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, since it's ridiculous to do this every time just to have the most
recent packages (a weekly update is maybe &amp;gt;1GB of data), I've found
another wonderful tool named reprepro. It's purpose is to create a
custom (unofficial) Debian repo. It's a far more advanced tool than
debmirror, and I think it can do what debmirror does (but I don't yet
care to learn how).&lt;/p&gt;
&lt;p&gt;Moving on, here's the relevant entries from my /etc/apt/sources.list file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# local repos (debmirror)&lt;/span&gt;
deb file:/home/wena/.repo_bin sid main
deb-src file:/home/wena/.repo_src sid main

&lt;span class="c1"&gt;# local repo (reprepro)&lt;/span&gt;
deb file:/home/wena/.repo_local cache main

&lt;span class="c1"&gt;# remote repo&lt;/span&gt;
deb ftp://ftp.sun.ac.za/ftp/debian/ sid main non-free contrib
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, what I do on a semi-regular basis is run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ wajig update &amp;amp;&amp;amp; wajig upgrade
&lt;/pre&gt;
&lt;p&gt;The newly-updated packages are stored in a cache so that a reinstall
doesn't have to fetch from network again. After this I run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro -vv --basedir ~/.repo_local includedeb cache /var/cache/apt/archives/*deb
&lt;/pre&gt;
&lt;p&gt;This updates the local reprepro repo and after which I can then remove
the cached packages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ wajig clean
&lt;/pre&gt;
&lt;p&gt;I do that because they are now available in my reprepro-managed repo.
That now means that I got a massive mirror managed by debmirror and a
smaller one managed by reprepro, and I have these on an external drive
for in case I want to install Debian anywhere. What else my reprepro
repo has is some other packages like &lt;strong&gt;skype&lt;/strong&gt; and &lt;strong&gt;oracle-xe&lt;/strong&gt;, as
well as an odd packages from &lt;a class="reference external" href="http://wiki.debian.org/DebianExperimental"&gt;Debian Experimental&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not so simple I guess... but works so well for my needs.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>apt-get vs. aptitude</title><link href="http://tshepang.net/apt-get-vs-aptitude" rel="alternate"></link><published>2010-09-23T00:00:00+02:00</published><updated>2010-09-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-23:/apt-get-vs-aptitude</id><summary type="html">&lt;p&gt;Did I mention that &lt;a class="reference external" href="http://tshepang.net/stack-overflow-rocks-hard"&gt;I love Stack Overflow&lt;/a&gt;? It's a Q&amp;amp;A site for
anything that is related to computer programing, and the creators
(luckily) didn't just stop there. They went on to create a bunch of
other sites using the same technology and branding, covering other
topics (and they …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Did I mention that &lt;a class="reference external" href="http://tshepang.net/stack-overflow-rocks-hard"&gt;I love Stack Overflow&lt;/a&gt;? It's a Q&amp;amp;A site for
anything that is related to computer programing, and the creators
(luckily) didn't just stop there. They went on to create a bunch of
other sites using the same technology and branding, covering other
topics (and they aggregate &lt;a class="reference external" href="http://stackexchange.com"&gt;the best new content&lt;/a&gt; from those sites).&lt;/p&gt;
&lt;p&gt;Enough with background info. What prompted this post is &lt;a class="reference external" href="http://unix.stackexchange.com/questions/767/what-is-the-real-difference-between-apt-get-and-aptitude-how-about-wajig/935#935"&gt;the answer&lt;/a&gt; to
the question, &amp;quot;&lt;a class="reference external" href="http://unix.stackexchange.com/questions/767/what-is-the-real-difference-between-apt-get-and-aptitude-how-about-wajig"&gt;what's the difference between apt-get and
aptitude?&lt;/a&gt;&amp;quot;. This is from one of their sites, &lt;em&gt;Unix and Linux&lt;/em&gt;, and
the answer is really thorough. Part of the question was &amp;quot;what the heck
is wajig&amp;quot; and I really liked how that part was handled as well. It
serves as a nice reminder of why the heck I'm working on &lt;a class="reference external" href="http://code.google.com/p/wajig/"&gt;wajig&lt;/a&gt; in the
first place... it rocks!&lt;/p&gt;
</content><category term="Debian"></category><category term="wajig"></category></entry><entry><title>developer of note: Martyn Russell</title><link href="http://tshepang.net/developer-of-note-martyn-russell" rel="alternate"></link><published>2010-09-10T00:00:00+02:00</published><updated>2010-09-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-09-10:/developer-of-note-martyn-russell</id><summary type="html">&lt;p&gt;Martyn Russell is &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s release manager,
and being a fan of the project since the early pre-1.0 days,
I have quite familiar with his work.
But what triggered this honor is his work on &lt;a class="reference external" href="http://blogs.gnome.org/mr/2010/09/08/tracker-needle/"&gt;Tracker Needle&lt;/a&gt;
(written in Vala), Tracker's new GUI search tool,
to replace the inadequate …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Martyn Russell is &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s release manager,
and being a fan of the project since the early pre-1.0 days,
I have quite familiar with his work.
But what triggered this honor is his work on &lt;a class="reference external" href="http://blogs.gnome.org/mr/2010/09/08/tracker-needle/"&gt;Tracker Needle&lt;/a&gt;
(written in Vala), Tracker's new GUI search tool,
to replace the inadequate Tracker Search Tool (written in C).
I've taken a look, and the design is pretty modern
(check the video he gives in his &lt;a class="reference external" href="http://blogs.gnome.org/mr/2010/09/08/tracker-needle/"&gt;announcement&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;But Martyn has of course done &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/log/?qt=author&amp;amp;q=martyn"&gt;far more&lt;/a&gt; for Tracker, and does a pretty
damn good job managing the release.
One thing he did outside of Tracker that I'm aware of is the
re-design the &lt;a class="reference external" href="http://gtk.org"&gt;http://gtk.org&lt;/a&gt; page, giving it a very modern look (which
it desperately needed).&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>developer of note: Philip van Hoof</title><link href="http://tshepang.net/developer-of-note-philip-van-hoof" rel="alternate"></link><published>2010-08-13T00:00:00+02:00</published><updated>2010-08-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-08-13:/developer-of-note-philip-van-hoof</id><summary type="html">&lt;p&gt;There hasn't been anyone who has &lt;a class="reference external" href="http://pvanhoof.be/blog/index.php/category/tracker"&gt;publicly talked about Tracker&lt;/a&gt; as
hard as Phillip van Hoof ever since the project was started a few years
ago. He has recently &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-August/msg00008.html"&gt;outlined the current improvements and future
plans&lt;/a&gt; to make it rock even harder (and of course I understand very
little of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There hasn't been anyone who has &lt;a class="reference external" href="http://pvanhoof.be/blog/index.php/category/tracker"&gt;publicly talked about Tracker&lt;/a&gt; as
hard as Phillip van Hoof ever since the project was started a few years
ago. He has recently &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-August/msg00008.html"&gt;outlined the current improvements and future
plans&lt;/a&gt; to make it rock even harder (and of course I understand very
little of it, since there's jargon all over the place, and &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;
actually covers new ground).&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>developer of note: Alexander Reichle-Schmehl</title><link href="http://tshepang.net/developer-of-note-alexander-reichle-schmehl" rel="alternate"></link><published>2010-07-24T00:00:00+02:00</published><updated>2010-07-24T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-24:/developer-of-note-alexander-reichle-schmehl</id><summary type="html">&lt;p&gt;Debian got so many people doing what seem like thankless jobs in an
effort to improve it. One of those guys is Alexander Reichle-Schmehl
(look at my struggling tongue), who has for a number of months been
pushing an initiative to fix a bunch of RC bugs weekly (&lt;a class="reference external" href="http://blog.schmehl.info/2010/07/22#rc-squashing-squeeze-1"&gt;example&lt;/a&gt;).
This …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Debian got so many people doing what seem like thankless jobs in an
effort to improve it. One of those guys is Alexander Reichle-Schmehl
(look at my struggling tongue), who has for a number of months been
pushing an initiative to fix a bunch of RC bugs weekly (&lt;a class="reference external" href="http://blog.schmehl.info/2010/07/22#rc-squashing-squeeze-1"&gt;example&lt;/a&gt;).
This developer has been busy &lt;a class="reference external" href="http://blog.schmehl.info/Debian/rc-stats"&gt;keeping track of RC bug counts&lt;/a&gt;,
reducing the need for me to go check myself.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>nice review of 'Perl Best Practices'</title><link href="http://tshepang.net/nice-review-of-perl-best-practices" rel="alternate"></link><published>2010-07-20T00:00:00+02:00</published><updated>2010-07-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-20:/nice-review-of-perl-best-practices</id><summary type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I always punctuate its disclosure with an outraged &amp;quot;preposterous!&amp;quot;.
Around mid-section, the initial refutation unavoidly morphs into a
&amp;quot;hmmm, I can see his point.. but it ain't for me. It just doesn't
jive with my vibes&amp;quot;. By the time I've made it to the end, however,
it is rare indeed …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I always punctuate its disclosure with an outraged &amp;quot;preposterous!&amp;quot;.
Around mid-section, the initial refutation unavoidly morphs into a
&amp;quot;hmmm, I can see his point.. but it ain't for me. It just doesn't
jive with my vibes&amp;quot;. By the time I've made it to the end, however,
it is rare indeed that I haven't seen the light, donned the ritual
sackcloth and ashes, sworn to atone for my sins and to walk the
straight and narrow [path] from now on.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://www.oreillynet.com/cs/catalog/view/cs_msg/79971"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm a sucker for humorous religious allegories.&lt;/p&gt;
</content><category term="non-Python"></category><category term="quote"></category><category term="humor"></category></entry><entry><title>more on wajig development</title><link href="http://tshepang.net/more-on-wajig-development" rel="alternate"></link><published>2010-07-16T00:00:00+02:00</published><updated>2010-07-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-16:/more-on-wajig-development</id><summary type="html">&lt;p&gt;I was &lt;a class="reference external" href="http://tshepang.net/my-first-wajig-contribution"&gt;given commit access&lt;/a&gt; to wajig project, and did a heck of a lot
of clean-ups, and in the process, learning much about unit testing.
I aimed for a comprehensive solution, partly to avoid regressions,
since I intend to do lot of code changes.&lt;/p&gt;
&lt;p&gt;I also looked at converting …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was &lt;a class="reference external" href="http://tshepang.net/my-first-wajig-contribution"&gt;given commit access&lt;/a&gt; to wajig project, and did a heck of a lot
of clean-ups, and in the process, learning much about unit testing.
I aimed for a comprehensive solution, partly to avoid regressions,
since I intend to do lot of code changes.&lt;/p&gt;
&lt;p&gt;I also looked at converting wajig's GUI &lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/gtk-migrating-GtkBuilder.html"&gt;from Glade to GtkBuilder&lt;/a&gt;.&lt;/p&gt;
</content><category term="wajig"></category></entry><entry><title>my first wajig contribution</title><link href="http://tshepang.net/my-first-wajig-contribution" rel="alternate"></link><published>2010-07-08T00:00:00+02:00</published><updated>2010-07-08T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-07-08:/my-first-wajig-contribution</id><summary type="html">&lt;p&gt;Due to my love for the application &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;, I have been
contributing a bit to it. But due the complexity of the code, I looked
elsewhere, and found a favorite tool package management tool, &lt;a class="reference external" href="http://code.google.com/p/wajig/"&gt;wajig&lt;/a&gt;,
and was surprised to find that it's not kept in a VCS. Useful as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Due to my love for the application &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;, I have been
contributing a bit to it. But due the complexity of the code, I looked
elsewhere, and found a favorite tool package management tool, &lt;a class="reference external" href="http://code.google.com/p/wajig/"&gt;wajig&lt;/a&gt;,
and was surprised to find that it's not kept in a VCS. Useful as it is,
it's code looks like a collection of hacks, so I started by offering a
PEP-8 fix.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;a day later&lt;/strong&gt;] Inspired by that offer, the &lt;a class="reference external" href="http://code.google.com/u/113620423708378221129/"&gt;nice guy&lt;/a&gt; that founded
the project created a VCS repo for it, and even offered me &lt;a class="reference external" href="http://code.google.com/p/wajig/people/list"&gt;commit
rights&lt;/a&gt;. I was amazed by the trust.&lt;/p&gt;
</content><category term="wajig"></category><category term="QuodLibet"></category></entry><entry><title>my pet project</title><link href="http://tshepang.net/my-pet-project" rel="alternate"></link><published>2010-06-09T00:00:00+02:00</published><updated>2010-06-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-06-09:/my-pet-project</id><summary type="html">&lt;p&gt;I've been working on a personal (unofficial) project for some weeks now
at work whose goal is automated testing of the system I maintain at
work. The system involves interfacing with Oracle, and the UI I used for
that is the retarded (blocky, and ugly UI, resource hog) Oracle SQL …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been working on a personal (unofficial) project for some weeks now
at work whose goal is automated testing of the system I maintain at
work. The system involves interfacing with Oracle, and the UI I used for
that is the retarded (blocky, and ugly UI, resource hog) Oracle SQL
Developer. I couldn't find any real alternatives after a cursory search,
and had to live with this pain for too many months. I decided to write
something in Python to achieve the common tasks of updating and viewing
specific parts of the DB. Having succeeded, I decided to turn the script
into a test suite that would eliminate the laborious and error-prone
process of doing the testing manually, a process which, among other
things, involves tweaking xml files, and using that damned SQL
Developer! I'm not-so-many-hours away from completing this 200+ line
masterpiece of mine, and here's what I used:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python: &lt;a class="reference external" href="http://docs.python.org/py3k/"&gt;3.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modules: &lt;a class="reference external" href="http://docs.python.org/py3k/library/xml.etree.elementtree.html#module-xml.etree.ElementTree"&gt;xml.etree.ElementTree&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/configparser.html#module-configparser"&gt;configparser&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/sys"&gt;sys&lt;/a&gt;, &lt;a class="reference external" href="http://docs.python.org/py3k/library/time"&gt;time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd party module: &lt;a class="reference external" href="http://cx-oracle.sourceforge.net/html/index.html"&gt;cx_Oracle&lt;/a&gt; (which prompted me to write
&lt;a class="reference external" href="http://tshepang.net/accessing-oracle-db-using-python-in-debian"&gt;instructions&lt;/a&gt; for installing and setting it up)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category></entry><entry><title>developer of note: Aleksander Morgado</title><link href="http://tshepang.net/developer-of-note-aleksander-morgado" rel="alternate"></link><published>2010-05-20T00:00:00+02:00</published><updated>2010-05-20T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-20:/developer-of-note-aleksander-morgado</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; team got this new guy, &lt;a class="reference external" href="http://sigquit.wordpress.com/"&gt;Aleksander Morgado&lt;/a&gt;, &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00006.html"&gt;doing&lt;/a&gt;
&lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00037.html"&gt;fabulous&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00054.html"&gt;work&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-April/msg00097.html"&gt;on&lt;/a&gt; Tracker's extraction code.
He does so while also providing thorough info on his activities.&lt;/p&gt;
&lt;p&gt;One thing that prompted me to honor him is his work on adding options to
disable stop words, as well as to enable …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; team got this new guy, &lt;a class="reference external" href="http://sigquit.wordpress.com/"&gt;Aleksander Morgado&lt;/a&gt;, &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00006.html"&gt;doing&lt;/a&gt;
&lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00037.html"&gt;fabulous&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-May/msg00054.html"&gt;work&lt;/a&gt; &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-April/msg00097.html"&gt;on&lt;/a&gt; Tracker's extraction code.
He does so while also providing thorough info on his activities.&lt;/p&gt;
&lt;p&gt;One thing that prompted me to honor him is his work on adding options to
disable stop words, as well as to enable number indexing,
fixing an old gripe of mine.&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>xfrun4 rocks</title><link href="http://tshepang.net/xfrun4-rocks" rel="alternate"></link><published>2010-05-10T00:00:00+02:00</published><updated>2010-05-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-10:/xfrun4-rocks</id><summary type="html">&lt;p&gt;The one desktop environment I live in is GNOME, which also happens to be
my favorite too. It's got quite a lot of things that can be better of
course and one of them is its run dialog. I once bumped into
that run dialog of &lt;a class="reference external" href="http://www.xfce.org/"&gt;Xfce 4&lt;/a&gt; and have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The one desktop environment I live in is GNOME, which also happens to be
my favorite too. It's got quite a lot of things that can be better of
course and one of them is its run dialog. I once bumped into
that run dialog of &lt;a class="reference external" href="http://www.xfce.org/"&gt;Xfce 4&lt;/a&gt; and have used it since I discovered it &lt;a class="reference external" href="http://mail.gnome.org/archives/gnome-list/2007-February/msg00003.html"&gt;years
ago&lt;/a&gt;. What I like about it is, unlike GNOME's, it doesn't auto-complete
using a large list of possible commands (presumably on the shell's PATH)
but rather a smaller list consisting of commands I have actually run
previously. What's more is that it makes those commands persistently
available as history (which GNOME's does as well by the way). As if
that's not enough, it will store only commands that were successfully
launched to avoid storing typos and failed commands in history. These
features makes for a superb piece of software.&lt;/p&gt;
</content><category term="GNOME"></category></entry><entry><title>I love the Debian supermarket</title><link href="http://tshepang.net/i-love-the-debian-supermarket" rel="alternate"></link><published>2010-05-05T00:00:00+02:00</published><updated>2010-05-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-05:/i-love-the-debian-supermarket</id><summary type="html">&lt;p&gt;I love the fact that whenever someone mentions a piece of software, I
can quickly do a &lt;tt class="docutils literal"&gt;aptitude search &lt;span class="pre"&gt;piece-of-software&lt;/span&gt;&lt;/tt&gt; knowing that
there's a good chance that it's somewhere in the Debian repository. That
means I won't have to get to the website looking for a download link,
which, other …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I love the fact that whenever someone mentions a piece of software, I
can quickly do a &lt;tt class="docutils literal"&gt;aptitude search &lt;span class="pre"&gt;piece-of-software&lt;/span&gt;&lt;/tt&gt; knowing that
there's a good chance that it's somewhere in the Debian repository. That
means I won't have to get to the website looking for a download link,
which, other than saving time, means I just have to deal with just one
interface as well as the confidence that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;piece-of-software&lt;/span&gt;&lt;/tt&gt; is
well-integrated with Debian itself, given Debian's exacting quality
standards. Debian really is a gem!&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] The term, &lt;a class="reference external" href="http://kitenet.net/~joey/blog/entry/the_supermarket_thing/"&gt;supermarket&lt;/a&gt;, as used in this context, was
coined by some Debian Developer, although I mean it in a different and
more positive manner.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>Python people vs. Java people</title><link href="http://tshepang.net/python-people-vs-java-people" rel="alternate"></link><published>2010-05-04T00:00:00+02:00</published><updated>2010-05-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-05-04:/python-people-vs-java-people</id><summary type="html">&lt;!--  --&gt;
&lt;p&gt;Now this is one heck of a controversial quote by the best computer
programming blogger in my memory:&lt;/p&gt;
&lt;blockquote&gt;
...when you choose a language, you're also choosing a community. The
programmers you'll be able to hire to work on a Java project won't
be as &lt;a class="reference external" href="http://www.paulgraham.com/pypar.html"&gt;smart&lt;/a&gt; as the ones you could …&lt;/blockquote&gt;</summary><content type="html">&lt;!--  --&gt;
&lt;p&gt;Now this is one heck of a controversial quote by the best computer
programming blogger in my memory:&lt;/p&gt;
&lt;blockquote&gt;
...when you choose a language, you're also choosing a community. The
programmers you'll be able to hire to work on a Java project won't
be as &lt;a class="reference external" href="http://www.paulgraham.com/pypar.html"&gt;smart&lt;/a&gt; as the ones you could get to work on a project
written in Python.&lt;/blockquote&gt;
</content><category term="non-Python"></category><category term="Python"></category></entry><entry><title>'Stack Overflow' rocks hard!</title><link href="http://tshepang.net/stack-overflow-rocks-hard" rel="alternate"></link><published>2010-04-22T00:00:00+02:00</published><updated>2010-04-22T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-22:/stack-overflow-rocks-hard</id><summary type="html">&lt;p&gt;I can't believe that I only now discovered &lt;a class="reference external" href="http://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt;. It's an
excellent programming Q&amp;amp;A site which also happens to possess the best
user interface and design I've ever seen on the web (if memory serves
well). [&lt;strong&gt;update&lt;/strong&gt;: this great design is shared by &lt;a class="reference external" href="http://stackexchange.com/sites"&gt;other sites in the
family …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I can't believe that I only now discovered &lt;a class="reference external" href="http://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt;. It's an
excellent programming Q&amp;amp;A site which also happens to possess the best
user interface and design I've ever seen on the web (if memory serves
well). [&lt;strong&gt;update&lt;/strong&gt;: this great design is shared by &lt;a class="reference external" href="http://stackexchange.com/sites"&gt;other sites in the
family&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;sidenote&lt;/strong&gt;] Within a few minutes of asking &lt;a class="reference external" href="http://stackoverflow.com/q/2690147/321731"&gt;some question&lt;/a&gt;,
I received a number of high-quality answers. It's amazing!&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>developer of note: Michael Biebl</title><link href="http://tshepang.net/developer-of-note-michael-biebl" rel="alternate"></link><published>2010-04-14T00:00:00+02:00</published><updated>2010-04-14T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-14:/developer-of-note-michael-biebl</id><summary type="html">&lt;p&gt;So I really do honor all Debian Developers especially when they are
named &lt;a class="reference external" href="http://qa.debian.org/developer.php?login=biebl&amp;#64;debian.org"&gt;Michael Biebl&lt;/a&gt;. This guy is the lone maintainer of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;
and rsyslog in Debian (among others). Not just that but he is also a
co-maintainer of a large number of GNOME technologies (gnome-session,
dbus, avahi, gnome-power-manager, gvfs …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I really do honor all Debian Developers especially when they are
named &lt;a class="reference external" href="http://qa.debian.org/developer.php?login=biebl&amp;#64;debian.org"&gt;Michael Biebl&lt;/a&gt;. This guy is the lone maintainer of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;
and rsyslog in Debian (among others). Not just that but he is also a
co-maintainer of a large number of GNOME technologies (gnome-session,
dbus, avahi, gnome-power-manager, gvfs, hal, network-manager...).&lt;/p&gt;
&lt;p&gt;I love especially his role as some sorta QA for Tracker (he's done a
terrific job of it — most recently offering &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2010-April/msg00044.html"&gt;a bunch of patches&lt;/a&gt; to fix
some linking problems in the code). Oh, and I'm not the only one who
noticed — &lt;a class="reference external" href="http://tshepang.net/developer-of-note-josselin-mouette"&gt;the great Josselin Mouette&lt;/a&gt;, &lt;a class="reference external" href="http://np237.livejournal.com/26532.html"&gt;did offer accolades too&lt;/a&gt; for
Michael's other work.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category><category term="Tracker"></category><category term="GNOME"></category></entry><entry><title>my patches committed</title><link href="http://tshepang.net/my-patches-committed" rel="alternate"></link><published>2010-04-06T00:00:00+02:00</published><updated>2010-04-06T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-06:/my-patches-committed</id><summary type="html">&lt;p&gt;So, two of the &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;patches I created&lt;/a&gt; for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; have been committed
(commit &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=ade2655a2f9fecf7100d58a8908493b9d71e2273"&gt;2&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;I consumed much info (and time) during the process, which entailed
looking at Git usage (branch, checkout, commit, format-patch, ...)
through &lt;a class="reference external" href="http://pvanhoof.be/blog/"&gt;Philip van Hoof&lt;/a&gt;'s guidance.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Philip van Hoof also &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=c5a15f8231c63488605d799b9670aba01898fde4"&gt;fixed&lt;/a&gt; a hard-to-reproduce bug which was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So, two of the &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;patches I created&lt;/a&gt; for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; have been committed
(commit &lt;a class="reference external" href="http://tshepang.net/so-much-learned-via-tracker-bugfixing"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=ade2655a2f9fecf7100d58a8908493b9d71e2273"&gt;2&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;I consumed much info (and time) during the process, which entailed
looking at Git usage (branch, checkout, commit, format-patch, ...)
through &lt;a class="reference external" href="http://pvanhoof.be/blog/"&gt;Philip van Hoof&lt;/a&gt;'s guidance.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Philip van Hoof also &lt;a class="reference external" href="http://git.gnome.org/browse/tracker/commit/?id=c5a15f8231c63488605d799b9670aba01898fde4"&gt;fixed&lt;/a&gt; a hard-to-reproduce bug which was a pain
for me. The fix is a workaround for a &lt;a class="reference external" href="http://www.gtk.org/"&gt;GTK+&lt;/a&gt; bug.&lt;/p&gt;
</content><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>so much learned via Tracker bugfixing</title><link href="http://tshepang.net/so-much-learned-via-tracker-bugfixing" rel="alternate"></link><published>2010-04-02T00:00:00+02:00</published><updated>2010-04-02T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2010-04-02:/so-much-learned-via-tracker-bugfixing</id><summary type="html">&lt;p&gt;It's been maybe over a year since I've submitted a patch to any FLOSS
project and have done so &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614608"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614609"&gt;times&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614610"&gt;today&lt;/a&gt;, all for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;,
perhaps my most favorite of all pieces of code.&lt;/p&gt;
&lt;p&gt;This started with me nagging &lt;a class="reference external" href="http://blogs.gnome.org/mr/"&gt;Martyn Russell&lt;/a&gt;, Release Manager for
Tracker, about the suckage which was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been maybe over a year since I've submitted a patch to any FLOSS
project and have done so &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614608"&gt;three&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614609"&gt;times&lt;/a&gt; &lt;a class="reference external" href="https://bugzilla.gnome.org/show_bug.cgi?id=614610"&gt;today&lt;/a&gt;, all for &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;,
perhaps my most favorite of all pieces of code.&lt;/p&gt;
&lt;p&gt;This started with me nagging &lt;a class="reference external" href="http://blogs.gnome.org/mr/"&gt;Martyn Russell&lt;/a&gt;, Release Manager for
Tracker, about the suckage which was exposed by my usage of Tracker's
preferences GUI. He proceeded to encourage me to write a patch, which
I did. Later on &lt;a class="reference external" href="http://gimpfoo.de/"&gt;Michael Natterer&lt;/a&gt; of GIMP fame guided me on some UI
polish work.&lt;/p&gt;
&lt;p&gt;I consumed much info (and time) during the process, which entailed
looking at the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/"&gt;GTK+ API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tracker's configuration internals.&lt;/li&gt;
&lt;li&gt;1st look at &lt;a class="reference external" href="http://live.gnome.org/Vala"&gt;Vala&lt;/a&gt;, the language with which the preferences GUI is
written.&lt;/li&gt;
&lt;li&gt;Tinkering with &lt;a class="reference external" href="http://glade.gnome.org/"&gt;Glade&lt;/a&gt;, a RAD tool for quick GUI development, which
makes things so much easier, especially considering that GTK+ isn't
so straightforward.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="GNOME"></category><category term="Tracker"></category></entry><entry><title>Python, Perl, and now Java</title><link href="http://tshepang.net/python-perl-and-now-java" rel="alternate"></link><published>2009-05-05T00:00:00+02:00</published><updated>2009-05-05T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-05-05:/python-perl-and-now-java</id><summary type="html">&lt;p&gt;I'm grateful that there's so much I'm learning at &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my new job&lt;/a&gt;, stuff I
wouldn't really learn on my own, like Perl (this one out of curiosity,
especially because it's a major competitor of my favorite, Python).&lt;/p&gt;
&lt;p&gt;I write this post in response to the fact that now I will …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm grateful that there's so much I'm learning at &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;my new job&lt;/a&gt;, stuff I
wouldn't really learn on my own, like Perl (this one out of curiosity,
especially because it's a major competitor of my favorite, Python).&lt;/p&gt;
&lt;p&gt;I write this post in response to the fact that now I will be learning
Java, what I secretly swore I'd stay away from, not because it's bad,
but because it's hard to find anyone favouring it in my world (Debian,
GNOME, Python), a world that proclaim it to be a disgusting pile of
shit. Anyways let's see how the ride will pan out.&lt;/p&gt;
&lt;p&gt;As for Perl, I found its string-handling capabilities exceedingly
powerful but its syntax ugly and over-varied — too much of a free-form
language. That's bad for someone used to the gracious elegance of mighty
Python. If I could stay away from it, I would!&lt;/p&gt;
</content><category term="non-Python"></category><category term="Python"></category></entry><entry><title>discarding Scribes for Geany</title><link href="http://tshepang.net/discarding-scribes-for-geany" rel="alternate"></link><published>2009-01-23T00:00:00+02:00</published><updated>2009-01-23T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2009-01-23:/discarding-scribes-for-geany</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="http://tshepang.net/scribes-satisfies-some-more"&gt;version of Scribes in development&lt;/a&gt; didn't prove too
satisfactory after a while (black background which I didn't care to
investigate how to revert to normal, among whatever other trouble I
don't remember) and there was me also unloving the idea of switching
text editors, so decided to get &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;stuck …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="http://tshepang.net/scribes-satisfies-some-more"&gt;version of Scribes in development&lt;/a&gt; didn't prove too
satisfactory after a while (black background which I didn't care to
investigate how to revert to normal, among whatever other trouble I
don't remember) and there was me also unloving the idea of switching
text editors, so decided to get &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;stuck with Geany&lt;/a&gt;, and am not
complaining much. It's been a year-and-a-half of pleasure and pain and
it was well worth it.&lt;/p&gt;
</content><category term="Scribes"></category><category term="Geany"></category></entry><entry><title>developer of note: Manoj Srivastava</title><link href="http://tshepang.net/developer-of-note-manoj-srivastava" rel="alternate"></link><published>2008-12-19T00:00:00+02:00</published><updated>2008-12-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-12-19:/developer-of-note-manoj-srivastava</id><summary type="html">&lt;p&gt;Manoj Srivastava has for a number of years been Project Secretary,
a very key role in Debian, a role where the incumbent
runs project voting. What prompted this post is &lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00275.html"&gt;his recent
resignation&lt;/a&gt;, which was encouraged by hostility towards the handling of
the recent controversial ballot. As evidenced by the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Manoj Srivastava has for a number of years been Project Secretary,
a very key role in Debian, a role where the incumbent
runs project voting. What prompted this post is &lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00275.html"&gt;his recent
resignation&lt;/a&gt;, which was encouraged by hostility towards the handling of
the recent controversial ballot. As evidenced by the &lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00285.html"&gt;various&lt;/a&gt;
&lt;a class="reference external" href="http://lists.debian.org/debian-vote/2008/12/msg00292.html"&gt;supporters&lt;/a&gt; and my own experience, he happens to be among the wisest
of all DD's. He is also among the most senior of all,
having been involved since 1995.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>reprepro saved my live</title><link href="http://tshepang.net/reprepro-saved-my-live" rel="alternate"></link><published>2008-12-12T00:00:00+02:00</published><updated>2008-12-12T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-12-12:/reprepro-saved-my-live</id><summary type="html">&lt;p&gt;Much of this is obsolete: I no longer build my own Debian packages.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That's a joke title, but &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;that fabulous tool&lt;/a&gt; really did help me a
lot. When doing package builds, all I need to run is the following
after a build:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rm *udeb
$ reprepro --basedir ~/.repo_directory includedeb sid *deb …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Much of this is obsolete: I no longer build my own Debian packages.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That's a joke title, but &lt;a class="reference external" href="http://mirrorer.alioth.debian.org/"&gt;that fabulous tool&lt;/a&gt; really did help me a
lot. When doing package builds, all I need to run is the following
after a build:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rm *udeb
$ reprepro --basedir ~/.repo_directory includedeb sid *deb
$ sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first command removes debian-installer packages which I don't need,
the second takes the remaining packages and adds them into the
reprepro-managed Debian repository while also making them available in
the Packages file, and the third updates the system's apt database in
order to pick up the changes. Also, if I want to get rid of something
from the repo, all I do is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ reprepro --basedir ~/.repo_directory removesrc sid glibc
&lt;/pre&gt;
&lt;p&gt;I don't know why anyone would love to remove glibc binary packages, but
it's that simple.&lt;/p&gt;
&lt;p&gt;Achieving this used to be painful before I discovered reprepro, for I
did the whole thing manually, which was not scalable since old packages
were sitting rotting in the repo, making it grow beyond 30GB (it now is
about 10GB). This also meant that I ran 'apt-ftparchive packages' on the
entire .debs each time I wanted an updated Packages file, and that was
dozens of minutes of heavy I/O. This painful life has been going on for
a number of months, and am stupid that I didn't search harder for a
better solution.&lt;/p&gt;
&lt;p&gt;Before doing things this way, I was making use of the nifty &lt;a class="reference external" href="http://aptoncd.sourceforge.net/"&gt;APTonCD&lt;/a&gt;,
but it started to become unusable due to excessive memory consumption
after some system updates. It's not clear where the bug lies, nor do I
know if it's a known problem, which I didn't report because I was using
Ubuntu's package, a much improved and re-written 0.1.98, as opposed to
Debian's 'bug-free' 0.1 (though I later discovered the bug to exist when
running the package in Ubuntu 8.10 too).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tshepang.net/my-debian-package-management-setup"&gt;an update on how I do things now&lt;/a&gt;&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>GNOME killer app</title><link href="http://tshepang.net/gnome-killer-app" rel="alternate"></link><published>2008-11-26T00:00:00+02:00</published><updated>2008-11-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-26:/gnome-killer-app</id><summary type="html">&lt;p&gt;GNOME system monitor applet it is.&lt;/p&gt;
&lt;p&gt;Many times when I'm thinking of using a different desktop suite, I know
that I'm not gon have an equal of GNOME's system monitor applet. In
Debian, this applet defaults to displaying CPU usage but can be set to
display more, including memory and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;GNOME system monitor applet it is.&lt;/p&gt;
&lt;p&gt;Many times when I'm thinking of using a different desktop suite, I know
that I'm not gon have an equal of GNOME's system monitor applet. In
Debian, this applet defaults to displaying CPU usage but can be set to
display more, including memory and hard disk usage. This is among the
things I add to the panel on every fresh install (for I always am
curious what's up with my system). Given how useful it is, I now wonder
why Debian doesn't add it on the panel by default, especially that many
new users won't even be aware it exists in the first place.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Clicking on that applet launches a more comprehensive system monitor
which has 4 tabs (notebooks in GTK+ speak):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a recently-added one that displays high-level system info (processor
model, RAM capacity) which was a much-needed equivalent of Windows'
own utility&lt;/li&gt;
&lt;li&gt;one that shows mounted filesystems (pretty handy really)&lt;/li&gt;
&lt;li&gt;one that displays live CPU, RAM, and network usage info, which
recently (perhaps GNOME 2.22 released March this year) received a
major facelift&lt;/li&gt;
&lt;li&gt;and last and least, the one that got a process monitor that feels
like a painfully stripped-down top (from procps)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="GNOME"></category></entry><entry><title>Scribes satisfies some more</title><link href="http://tshepang.net/scribes-satisfies-some-more" rel="alternate"></link><published>2008-11-26T00:00:00+02:00</published><updated>2008-11-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-26:/scribes-satisfies-some-more</id><summary type="html">&lt;p&gt;I'm currently running development version of Scribes (from bzr repo) and
it got fixes for two very annoying bugs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On opening a non-UTF8 file you'd get a message asking you to open it
via the app's file-selector, an uncomfortably long way around it; the
version from bzr offers a choice …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I'm currently running development version of Scribes (from bzr repo) and
it got fixes for two very annoying bugs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On opening a non-UTF8 file you'd get a message asking you to open it
via the app's file-selector, an uncomfortably long way around it; the
version from bzr offers a choice of the encoding and then we live
happily ever after.&lt;/li&gt;
&lt;li&gt;A worse problem that occurred when opening the file described above
is that on closing the error dialogue, all other open Scribes windows
would also close.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All what this means is that Scribes remains installed on my machine(s).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;sidenote&lt;/strong&gt;: Code-folding is still absent although I won't need to use
it since &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;Geany&lt;/a&gt; does a nice job already.&lt;/p&gt;
</content><category term="Scribes"></category></entry><entry><title>1 more machine, 2 less</title><link href="http://tshepang.net/1-more-machine-2-less" rel="alternate"></link><published>2008-11-13T00:00:00+02:00</published><updated>2008-11-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-13:/1-more-machine-2-less</id><summary type="html">&lt;p&gt;Since I've departed from previous job, I've lost access to &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;two machines&lt;/a&gt;,
but more than made up for it by acquiring an Acer Travelmate 6592,
a feature-rich laptop complete with wireless connectivity (802.11a/b/g),
Bluetooth, card readers, fingerprint scanner, webcam, Firewire,
and even age-old DB9 serial port, while …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since I've departed from previous job, I've lost access to &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;two machines&lt;/a&gt;,
but more than made up for it by acquiring an Acer Travelmate 6592,
a feature-rich laptop complete with wireless connectivity (802.11a/b/g),
Bluetooth, card readers, fingerprint scanner, webcam, Firewire,
and even age-old DB9 serial port, while also not being short
on specs (Intel T7500 processor, 2GB DDR2, 250GB HDD).
Even better, unlike those two machines, I also get to take it home.&lt;/p&gt;
</content><category term="hardware"></category></entry><entry><title>Ubuntu 8.10 impressions</title><link href="http://tshepang.net/ubuntu-810-impressions" rel="alternate"></link><published>2008-11-13T00:00:00+02:00</published><updated>2008-11-13T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-13:/ubuntu-810-impressions</id><summary type="html">&lt;p&gt;I haven't ran Ubuntu since 7.04 and gave 8.10 a try recently, primarily
for doing wireless web connection at new job, and also that our sysadmin
showed it to me in action with its NetworkManager 0.7 glory in action
and had the installer handy. As I've come …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I haven't ran Ubuntu since 7.04 and gave 8.10 a try recently, primarily
for doing wireless web connection at new job, and also that our sysadmin
showed it to me in action with its NetworkManager 0.7 glory in action
and had the installer handy. As I've come to expect from Ubuntu, the
defaults artwork just looks gorgeous and with an especially stunning
desktop background. It was also the first time I actually got to
experience the 3D desktop effects that people have been making noise
about these past several months (I did try this before, on Debian, but
it was a mess with me having to go see README.Debian thing and still not
managing, while in Ubuntu's case, it was mere clicks away which I found
through the handy Ubuntu user manual, which is easily accessible on the
GNOME panel, and that's what Debian desktop needs).&lt;/p&gt;
&lt;p&gt;Me became happy with Firefox which remembered the previously-visited
paths (via the back-button) on session-restore, a feature I often miss
when working with Epiphany.&lt;/p&gt;
&lt;p&gt;Some warts I've seen so far:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The installer's insistence on running the whole desktop before
installation sucks because it really prolongs installation, and made
worse by a lack of a visible alternative option.&lt;/li&gt;
&lt;li&gt;The feature I once praised in debian-installer, which informs one of
the limits whithin which one may resize existing hard drive
partitions, is absent in Ubuntu's installer. The graphical
partitioner does however looks real slick.&lt;/li&gt;
&lt;li&gt;Does not remember running apps when session is restarted.&lt;/li&gt;
&lt;li&gt;And I've already experienced 2 system freezes after running some
updates, and the sort where I have to force machine reset.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="non-Debian"></category></entry><entry><title>my 1st Python tool</title><link href="http://tshepang.net/my-1st-python-tool" rel="alternate"></link><published>2008-11-07T00:00:00+02:00</published><updated>2008-11-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-11-07:/my-1st-python-tool</id><summary type="html">&lt;p&gt;A senior of mine at my current job has asked me to write a tool to
convert from &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Universal_File_Format"&gt;UFF format&lt;/a&gt; to csv for easy spreadsheet processing,
producing results that proved most beneficial to me (the path towards
code mastery). The tool is less than 200 lines of Python code, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A senior of mine at my current job has asked me to write a tool to
convert from &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Universal_File_Format"&gt;UFF format&lt;/a&gt; to csv for easy spreadsheet processing,
producing results that proved most beneficial to me (the path towards
code mastery). The tool is less than 200 lines of Python code, and I
even got a peek at the necessary changes to have it run on Python 3 (and
successfully doing so), as well as experiencing the relatively
unchallenging problems of getting it to run on Windows XP (it was
developed on Debian). Of course I would not have bothered had the
requirement not been getting it to run on that most popular of end-user
OSes. But Python's cross-platform nature makes it easy, and their work
on getting the supporting suite (installer, IDE, Python shell) easy to
install and run on Windows deserves serious respect.&lt;/p&gt;
&lt;p&gt;By the way I haven't so far learned the importance/use of classes so the
entire thing is in functions. And the code is also extremely slow (and
even slower on WinXP) and only does basic checks for the validity of the
source file to be processed so will loudly crash on corrupted files.
Other than that, the tool is pretty robust and made my 'client' real
happy, considering the previous tool was really broken by design (a pain
to work with, being muddled with severe limitations) and also relied on
Matlab being installed.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>favorite laptop</title><link href="http://tshepang.net/favorite-laptop" rel="alternate"></link><published>2008-10-18T00:00:00+02:00</published><updated>2008-10-18T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-10-18:/favorite-laptop</id><summary type="html">&lt;p&gt;The laptop that &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;I previously mentioned&lt;/a&gt; is named Compaq/HP nx7010 and
is the most favorite I've ever used (despite that it's only the second
laptop I've ever used heavily). I suspect I like it mostly because of
the feel of the keyboard, and its 1.7GHz Pentium M is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The laptop that &lt;a class="reference external" href="http://tshepang.net/my-machines"&gt;I previously mentioned&lt;/a&gt; is named Compaq/HP nx7010 and
is the most favorite I've ever used (despite that it's only the second
laptop I've ever used heavily). I suspect I like it mostly because of
the feel of the keyboard, and its 1.7GHz Pentium M is really more than
adequate for the modest tasks I throw at it; and its only set-back is
the placement of the 3 USB ports - at the back. It's a pity that I'll
have to leave it behind since &lt;a class="reference external" href="http://tshepang.net/me-got-meself-a-coding-job"&gt;I'm changing jobs&lt;/a&gt;. I also use an external
USB mouse, which also enhances the experience. [&lt;a class="reference external" href="http://tshepang.net/1-more-machine-2-less"&gt;update&lt;/a&gt;]&lt;/p&gt;
</content><category term="hardware"></category></entry><entry><title>Ubuntu 8.10 looks good</title><link href="http://tshepang.net/ubuntu-810-looks-good" rel="alternate"></link><published>2008-10-03T00:00:00+02:00</published><updated>2008-10-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-10-03:/ubuntu-810-looks-good</id><summary type="html">&lt;p&gt;Ubuntu 8.10 Beta has been released and, if &lt;a class="reference external" href="https://lists.ubuntu.com/archives/ubuntu-announce/2008-October/000114.html"&gt;the annoucement&lt;/a&gt; is to be
relied upon, things look good.&lt;/p&gt;
&lt;p&gt;What stands out above all else for me is 'guest sessions' which allows
users who don't have login credentials access to the system. It's
interesting that such a thing has been …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ubuntu 8.10 Beta has been released and, if &lt;a class="reference external" href="https://lists.ubuntu.com/archives/ubuntu-announce/2008-October/000114.html"&gt;the annoucement&lt;/a&gt; is to be
relied upon, things look good.&lt;/p&gt;
&lt;p&gt;What stands out above all else for me is 'guest sessions' which allows
users who don't have login credentials access to the system. It's
interesting that such a thing has been non-existent (or at least I don't
know how to set it up) in the distros I've used so far, and really is
useful, EG when you just wanna play some music from a machine. Many a
time I get glad when easily getting into a Microsoft system even though
that compromises security, a problem easily fixed in this release's
inclusion of easy encryption of user folders, which I suppose should
hide confidential data from prying eyes.&lt;/p&gt;
&lt;p&gt;That's not to say I'm gon be running an Ubuntu system anytime soon,
especially given that I'm rather happy here (okay, sometimes; I mean how
long am I going to wait for GNOME 2.24 to reach Sid) in Debian-land of
course, and can only wait for those features.&lt;/p&gt;
</content><category term="non-Debian"></category><category term="GNOME"></category></entry><entry><title>enjoying net connection at home, finally</title><link href="http://tshepang.net/enjoying-net-connection-at-home-finally" rel="alternate"></link><published>2008-09-28T00:00:00+02:00</published><updated>2008-09-28T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-28:/enjoying-net-connection-at-home-finally</id><summary type="html">&lt;p&gt;After suffering with being forced to access the net on Windows XP &lt;a class="reference external" href="http://tshepang.net/net-connection-at-home-finally"&gt;for
over 2 weeks&lt;/a&gt;, I'm glad things turned out as I envisioned for I managed
to get my device working on Debian &lt;a class="reference external" href="http://mybroadband.co.za/vb/showthread.php/129619-Neotel-working-on-Linux!"&gt;with a lot of help&lt;/a&gt;. Here's what
went into my /etc/wvdial.conf:&lt;/p&gt;
&lt;!-- code-block: ini

[Dialer Defaults]
Phone = #777
Username = phone_number@neotel.co.za
Password = 1234
Stupid Mode = 1
Dial Command = ATDT

[Dialer neotel]
Modem = /dev/ttyUSB0
Baud = 460800
Modem Type = Analog Modem
Stupid Mode = 1 --&gt;
&lt;p&gt;I had to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After suffering with being forced to access the net on Windows XP &lt;a class="reference external" href="http://tshepang.net/net-connection-at-home-finally"&gt;for
over 2 weeks&lt;/a&gt;, I'm glad things turned out as I envisioned for I managed
to get my device working on Debian &lt;a class="reference external" href="http://mybroadband.co.za/vb/showthread.php/129619-Neotel-working-on-Linux!"&gt;with a lot of help&lt;/a&gt;. Here's what
went into my /etc/wvdial.conf:&lt;/p&gt;
&lt;!-- code-block: ini

[Dialer Defaults]
Phone = #777
Username = phone_number@neotel.co.za
Password = 1234
Stupid Mode = 1
Dial Command = ATDT

[Dialer neotel]
Modem = /dev/ttyUSB0
Baud = 460800
Modem Type = Analog Modem
Stupid Mode = 1 --&gt;
&lt;p&gt;I had to run &lt;tt class="docutils literal"&gt;sudo modprobe usbserial vendor=0x1d09 product=0x4000&lt;/tt&gt;
and then &lt;tt class="docutils literal"&gt;sudo wvdial neotel&lt;/tt&gt; afterwards and then I lived happily for
long...&lt;/p&gt;
&lt;p&gt;Now why is XP so uncomfortable? I'm used to many of the conveniences of
Debian that are absent in XP or I'm not motivated to find replacements for
stuff like workspaces, copy-text-on-highlight, Epiphany, Quod Libet,
debmirror, Nautilus, ...&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>my machines</title><link href="http://tshepang.net/my-machines" rel="alternate"></link><published>2008-09-26T00:00:00+02:00</published><updated>2008-09-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-26:/my-machines</id><summary type="html">&lt;p&gt;I have, since my first machine in 2004, owned 2 other complete systems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a Dell Inspiron desktop Core 2 Duo (Conroe) system boasting 2GB RAM
and 160GB HDD&lt;/li&gt;
&lt;li&gt;a power-hungry and underperfoming Pentium 4 Prescott system
(3.06GHz/1GB RAM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I currently primarily use the old P4 and it's still …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have, since my first machine in 2004, owned 2 other complete systems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a Dell Inspiron desktop Core 2 Duo (Conroe) system boasting 2GB RAM
and 160GB HDD&lt;/li&gt;
&lt;li&gt;a power-hungry and underperfoming Pentium 4 Prescott system
(3.06GHz/1GB RAM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I currently primarily use the old P4 and it's still pretty decent at
2.66GHz and 0.5GB of RAM. It also sports a DVD-Writer and 250GB HDD, all
SATA. The other systems are used by those close to me for one reason or
another.&lt;/p&gt;
&lt;p&gt;The Dell Inspiron is my most recent machine. It got 3-year warranty on
it (which was quite a surprise) so I'm not touching its insides. This
system currenly dual-boots with Windows XP which a relative of mine uses
for music production, a task he claims FLOSS can't satisfactorily
fulfill.&lt;/p&gt;
&lt;p&gt;I should note the other systems I use at work:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An HP Core 2 Duo Conroe 1.86GHz/1GB RAM desktop, my primary workhorse
for building Debian, which dual-boots with Windows XP since it
actually is a shared machine for those I work with in the area (about
a dozen people), and of course a bit over-powered for what is claimed
to be an 'email-checking' and 'printing' machine. I just manage to
find time in-between these email/printing sessions to have it do the
grunt-work.&lt;/li&gt;
&lt;li&gt;a recently-acquired Pentium M 1.7GHz/500MB RAM HP/Compaq laptop which
provides quite decent performance too and a claimed battery life of
2+ hrs. This system also dual-boots with Windows XP since nearly all
that we need at work uses it. It's also the system where I do
software/programming study and miscellaneous reading on since it's
the only system at work I have exclusive access to.
[&lt;a class="reference external" href="http://tshepang.net/favorite-laptop"&gt;expansion/update&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've neglected to mention the other 2 systems I'm not interested in,
which I use at work for some work tasks, both Windows-based (and going
as far back as Windows 98!), and both under-powered but pretty
well-suited to their specific tasks (except that I still have to use
micro-floppy diskettes), and also uniteresting because they aren't
running my favorite operating system, Debian.&lt;/p&gt;
&lt;p&gt;That's 6 systems in total all running Debian, 3 of which dual-boot with
Windows XP, 1 dual-booting with Windows Vista (the Core 2 laptop), and 2
(including my primary system, mt first) purely Debian. Of these, the
only one with internet access is the desktop HP system at work actually,
mainly because web-access in SA isn't nearly as affordable as I'd like.&lt;/p&gt;
</content><category term="hardware"></category></entry><entry><title>only the processor survives</title><link href="http://tshepang.net/only-the-processor-survives" rel="alternate"></link><published>2008-09-26T00:00:00+02:00</published><updated>2008-09-26T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-26:/only-the-processor-survives</id><summary type="html">&lt;p&gt;I only recently realized that my oldest computer system, the first I
ever bought, has all been renewed, bar the processor, an old-style P4
(Northwood) purchased July 2004.&lt;/p&gt;
&lt;p&gt;The original 80GB HDD, which I loved due to high reliability despite
serious punishment (I did so much experimenting with it including …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I only recently realized that my oldest computer system, the first I
ever bought, has all been renewed, bar the processor, an old-style P4
(Northwood) purchased July 2004.&lt;/p&gt;
&lt;p&gt;The original 80GB HDD, which I loved due to high reliability despite
serious punishment (I did so much experimenting with it including
multiple OS installations) until it failed earlier this year.&lt;/p&gt;
&lt;p&gt;The motherboard failed several months ago (difficult problems involving
USB connectivity and lack of sound, all intermittent, all resulting in
emotional pain).&lt;/p&gt;
&lt;p&gt;The SONY DVD-Writer which I loved due running reliably for years until
it failed earlier this year. I also lost the power supply which kept
resetting when, say for example I was inserting an optical disk and the
HDD was doing much seeking (both of which must have induced unberable
power spikes the PSU), an obvious sign of deterioration, and great
source of emotional pain too.&lt;/p&gt;
&lt;p&gt;The replacement included a case as well, so yes, even the case ain't
original.&lt;/p&gt;
&lt;p&gt;Additionally, I was initially all PATA (with those fucking annoying IDE
cables) and am all SATA now (luckily the replacement motherboard got 2
SATA ports, which is all I needed since I only got 1 optical drive and 1
HDD).&lt;/p&gt;
</content><category term="hardware"></category></entry><entry><title>net connection at home, finally</title><link href="http://tshepang.net/net-connection-at-home-finally" rel="alternate"></link><published>2008-09-16T00:00:00+02:00</published><updated>2008-09-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-09-16:/net-connection-at-home-finally</id><summary type="html">&lt;p&gt;I got &lt;a class="reference external" href="http://www.neotel.co.za/"&gt;internet connection&lt;/a&gt; at home on September 12th (access at work
has been terminated). It's a 10GB/month connection that goes for R600
(around $80). Not too cheap but it's the cheapest (per MB) in the
country though, as far as I know.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I got &lt;a class="reference external" href="http://www.neotel.co.za/"&gt;internet connection&lt;/a&gt; at home on September 12th (access at work
has been terminated). It's a 10GB/month connection that goes for R600
(around $80). Not too cheap but it's the cheapest (per MB) in the
country though, as far as I know.&lt;/p&gt;
</content><category term="untagged"></category></entry><entry><title>developer of note: Andreas Barth</title><link href="http://tshepang.net/developer-of-note-andreas-barth" rel="alternate"></link><published>2008-06-10T00:00:00+02:00</published><updated>2008-06-10T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-06-10:/developer-of-note-andreas-barth</id><summary type="html">&lt;p&gt;Andreas Barth is about as a great a Debian release manager as Steve
Langasek, and though he recently stated &lt;a class="reference external" href="http://lists.debian.org/debian-devel-announce/2008/05/msg00000.html"&gt;the wish to reduce time on
release management&lt;/a&gt;, he just did a &lt;a class="reference external" href="http://lists.debian.org/debian-hppa/2008/06/msg00022.html"&gt;thorough analysis on the status of
the hppa port&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Andreas Barth is about as a great a Debian release manager as Steve
Langasek, and though he recently stated &lt;a class="reference external" href="http://lists.debian.org/debian-devel-announce/2008/05/msg00000.html"&gt;the wish to reduce time on
release management&lt;/a&gt;, he just did a &lt;a class="reference external" href="http://lists.debian.org/debian-hppa/2008/06/msg00022.html"&gt;thorough analysis on the status of
the hppa port&lt;/a&gt;.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>more Tracker goodness</title><link href="http://tshepang.net/more-tracker-goodness" rel="alternate"></link><published>2008-03-04T00:00:00+02:00</published><updated>2008-03-04T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-03-04:/more-tracker-goodness</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s applet has recently received a revamp which, when clicked,
launches Tracker Search Tool instead of displaying the search box.
That's a minor detail considering &lt;a class="reference external" href="http://jamiemcc.livejournal.com/11308.html"&gt;the other work&lt;/a&gt; included in the 2
recent releases, most especially the option to auto-pause the daemon
when X events (mouse movement, keyboard presses …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;'s applet has recently received a revamp which, when clicked,
launches Tracker Search Tool instead of displaying the search box.
That's a minor detail considering &lt;a class="reference external" href="http://jamiemcc.livejournal.com/11308.html"&gt;the other work&lt;/a&gt; included in the 2
recent releases, most especially the option to auto-pause the daemon
when X events (mouse movement, keyboard presses) are taking place, a
feature which helps with system responsiveness. This shit rocks,
absolutely!&lt;/p&gt;
</content><category term="Tracker"></category></entry><entry><title>Tracker goodness</title><link href="http://tshepang.net/tracker-goodness" rel="alternate"></link><published>2008-02-01T00:00:00+02:00</published><updated>2008-02-01T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2008-02-01:/tracker-goodness</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; hasn't been around as long as Beagle has but seems more
advanced, possessing various utilities like the applet which can be used
to launch all Tracker GUI utilities (Tracker Search Tool, Tracker
Preferences, and Tracker Statistics), displaying the daemon (trackerd)
status, providing the functionality of pausing the Tracker daemon …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt; hasn't been around as long as Beagle has but seems more
advanced, possessing various utilities like the applet which can be used
to launch all Tracker GUI utilities (Tracker Search Tool, Tracker
Preferences, and Tracker Statistics), displaying the daemon (trackerd)
status, providing the functionality of pausing the Tracker daemon, as
well as providing a (convenient) search dialogue [&lt;a class="reference external" href="http://tshepang.net/more-tracker-goodness"&gt;update&lt;/a&gt;]. I wonder
if Beagle has lovely tools like this, but it's main advantage is that it
supports far more data formats that Tracker does, while it still is
hungry for memory (version 0.3.2).&lt;/p&gt;
&lt;p&gt;One particular thing that encouraged this post however is Tracker
Statistics, when I discovered that it actually is self-updating. This
change, which I apparently missed, was committed October last year, and
got me really impressed. Now if only all those advanced options were
less buggy...&lt;/p&gt;
&lt;p&gt;While I'm at it I might as well mention how much I love the new Tracker
Preferences feature which makes it restart/reindex user's data depending
on what preferences were changed. That's gorgeous. Now if only it
performed such restarting/reindex faster than it often does (especially
when it is indexing), since one often has to wait 'forever' for such to
happen.&lt;/p&gt;
</content><category term="Tracker"></category></entry><entry><title>games in Debian</title><link href="http://tshepang.net/games-in-debian" rel="alternate"></link><published>2007-12-03T00:00:00+02:00</published><updated>2007-12-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-12-03:/games-in-debian</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://packages.debian.org/sid/blobwars"&gt;Blob Wars&lt;/a&gt;, which resembles Mario, has become a serious hit with my
9-year-old brother and a number of friends, which makes me happy since
it could very well become their GNU/Linux killer app. I came across it
while looking for some Debian games on the request of that brother …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://packages.debian.org/sid/blobwars"&gt;Blob Wars&lt;/a&gt;, which resembles Mario, has become a serious hit with my
9-year-old brother and a number of friends, which makes me happy since
it could very well become their GNU/Linux killer app. I came across it
while looking for some Debian games on the request of that brother, who
was then responsible for spreading its fame.&lt;/p&gt;
&lt;p&gt;Also, &lt;a class="reference external" href="http://packages.debian.org/sid/ceferino"&gt;Ceferino&lt;/a&gt;, a more favorite of mine, seems to also be catching up
with Blob Wars with that same game-lover crew.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>developer of note: Alexander Larsson</title><link href="http://tshepang.net/developer-of-note-alexander-larsson" rel="alternate"></link><published>2007-11-09T00:00:00+02:00</published><updated>2007-11-09T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-11-09:/developer-of-note-alexander-larsson</id><summary type="html">&lt;p&gt;I could not keep away from admiring the tremendous amount of work she
does, most recently &lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2007-September/msg00401.html"&gt;GVFS and GIO&lt;/a&gt; (both of which have just been
&lt;a class="reference external" href="http://mail.gnome.org/archives/gnome-announce-list/2007-November/msg00006.html"&gt;released&lt;/a&gt;), and previously, GtkPrint.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I could not keep away from admiring the tremendous amount of work she
does, most recently &lt;a class="reference external" href="http://mail.gnome.org/archives/desktop-devel-list/2007-September/msg00401.html"&gt;GVFS and GIO&lt;/a&gt; (both of which have just been
&lt;a class="reference external" href="http://mail.gnome.org/archives/gnome-announce-list/2007-November/msg00006.html"&gt;released&lt;/a&gt;), and previously, GtkPrint.&lt;/p&gt;
</content><category term="developer-of-note"></category><category term="GNOME"></category></entry><entry><title>Quod Libet and arrogance</title><link href="http://tshepang.net/quod-libet-and-arrogance" rel="alternate"></link><published>2007-08-19T00:00:00+02:00</published><updated>2007-08-19T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-08-19:/quod-libet-and-arrogance</id><summary type="html">&lt;p&gt;I've just seen, for the first time in memory, a concept of arrogant
design stated &lt;a class="reference external" href="http://mystilleef.blogspot.com/2006/12/031-coming-soon-to-distro-near-you.html#c4991460165173246170"&gt;publicly&lt;/a&gt;,
a concept whose awareness previously existed only in my mind.
This concept was brought up by my experiences with &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;,
my favorite audio player.
It unfortunately doesn't conform to some common standards:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just seen, for the first time in memory, a concept of arrogant
design stated &lt;a class="reference external" href="http://mystilleef.blogspot.com/2006/12/031-coming-soon-to-distro-near-you.html#c4991460165173246170"&gt;publicly&lt;/a&gt;,
a concept whose awareness previously existed only in my mind.
This concept was brought up by my experiences with &lt;a class="reference external" href="http://code.google.com/p/quodlibet/"&gt;Quod Libet&lt;/a&gt;,
my favorite audio player.
It unfortunately doesn't conform to some common standards:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I can't open a song directly from a file manager (Nautilus) requiring
me to open the application itself first, as if it's the standard
operating environment, yet it's folder view is less than perfect, in
that it doesn't automatically update the contents if changed
externally.&lt;/li&gt;
&lt;li&gt;It doesn't use well-known shortcuts like B for previous track and N
for next track, and invents its own, and if there's not enough
already.&lt;/li&gt;
&lt;li&gt;It does not allow me to drag a folder containing tracks, meaning I
have to use its own interface to open all tracks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As regards the first link here, someone else also stated that Scribes'
design is arrogant too, though I don't think so. Scribes is just
excellent and I don't see the need for another editor, except if it had
code 'folding' and started-up faster than the current Scribes' 10
seconds. [&lt;strong&gt;update&lt;/strong&gt;: such &lt;a class="reference external" href="http://tshepang.net/project-of-note-geany"&gt;a replacement&lt;/a&gt; was eventually discovered!]&lt;/p&gt;
</content><category term="Scribes"></category><category term="QuodLibet"></category></entry><entry><title>Tracker 0.6.0</title><link href="http://tshepang.net/tracker-060" rel="alternate"></link><published>2007-07-25T00:00:00+02:00</published><updated>2007-07-25T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-07-25:/tracker-060</id><summary type="html">&lt;p&gt;6 months have passed since the &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-January/msg00249.html"&gt;previous Tracker release&lt;/a&gt; and it's real
great to have &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-July/msg00297.html"&gt;another fresh one&lt;/a&gt;. During development, its GUI
interface (TST) has went through two revamps, each being an improvement
on the previous one. This implies that those who have only ever used
that January's release have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;6 months have passed since the &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-January/msg00249.html"&gt;previous Tracker release&lt;/a&gt; and it's real
great to have &lt;a class="reference external" href="http://mail.gnome.org/archives/tracker-list/2007-July/msg00297.html"&gt;another fresh one&lt;/a&gt;. During development, its GUI
interface (TST) has went through two revamps, each being an improvement
on the previous one. This implies that those who have only ever used
that January's release have missed a TST which had categories (All
Files, Documents, Images, ...) which were presented as tabs, which
shouldn't matter anyways since the current interface, which uses a
sidebar instead, rocks like hell. Another highlight is the inclusion of
tracker-preferences UI which allows for easy configuration.&lt;/p&gt;
</content><category term="Tracker"></category></entry><entry><title>developer of note: Steve Langasek</title><link href="http://tshepang.net/developer-of-note-steve-langasek" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-06-11:/developer-of-note-steve-langasek</id><summary type="html">&lt;p&gt;Steve Langasek has been Debian release manager for over two years and
always managed to impress me with his technical knowledge of Debian
packaging as well as relentless effort into getting this, the Debian
system, into a releasable operating system. He is the definitive Debian
watchdog, for I often pay …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Steve Langasek has been Debian release manager for over two years and
always managed to impress me with his technical knowledge of Debian
packaging as well as relentless effort into getting this, the Debian
system, into a releasable operating system. He is the definitive Debian
watchdog, for I often pay attention when it's his turn to talk on
mailing lists, and he also happens to be among the most powerful of all
DD's (for it's said that Debian release managers tend to be more
powerful than Debian project leaders). Grandmaster!&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>Debian and Linux</title><link href="http://tshepang.net/debian-and-linux" rel="alternate"></link><published>2007-05-17T00:00:00+02:00</published><updated>2007-05-17T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-17:/debian-and-linux</id><summary type="html">&lt;p&gt;There is a Debian &lt;a class="reference external" href="http://wiki.debian.org/DebianHistory?action=AttachFile&amp;amp;do=get&amp;amp;target=debconf4_history_roundtable.txt"&gt;history discussion&lt;/a&gt; among Debian old-timers where
a point was raised that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Ian_Murdock"&gt;Ian Murdock&lt;/a&gt;, Debian founder,
successfully transferred project leadership to someone else, a fact that
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Bdale_Garbee"&gt;Bdale Garbee&lt;/a&gt; stated to not yet have taken place with Linux, the
poster child of FLOSS. It's also interesting to see …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There is a Debian &lt;a class="reference external" href="http://wiki.debian.org/DebianHistory?action=AttachFile&amp;amp;do=get&amp;amp;target=debconf4_history_roundtable.txt"&gt;history discussion&lt;/a&gt; among Debian old-timers where
a point was raised that &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Ian_Murdock"&gt;Ian Murdock&lt;/a&gt;, Debian founder,
successfully transferred project leadership to someone else, a fact that
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Bdale_Garbee"&gt;Bdale Garbee&lt;/a&gt; stated to not yet have taken place with Linux, the
poster child of FLOSS. It's also interesting to see Murdock praise
successive leadership as superior to his.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>developer of note: Aurelien Jarno</title><link href="http://tshepang.net/developer-of-note-aurelien-jarno" rel="alternate"></link><published>2007-05-07T00:00:00+02:00</published><updated>2007-05-07T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-05-07:/developer-of-note-aurelien-jarno</id><summary type="html">&lt;p&gt;In celebration of the beginning of this exercise, I recognize Aurelien
Jarno as a very notable developer. This is due to his tireless efforts
as the number one GLibC co-maintainer in Debian since several months (if
the package's debian changelog is to be relied upon). Also, GLibC,
together with GCC …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In celebration of the beginning of this exercise, I recognize Aurelien
Jarno as a very notable developer. This is due to his tireless efforts
as the number one GLibC co-maintainer in Debian since several months (if
the package's debian changelog is to be relied upon). Also, GLibC,
together with GCC and Linux, ought to be regarded as the most important
packages of any GNU/Linux system.&lt;/p&gt;
</content><category term="Debian"></category><category term="developer-of-note"></category></entry><entry><title>1st usage of RSS feeds</title><link href="http://tshepang.net/1st-usage-of-rss-feeds" rel="alternate"></link><published>2007-04-16T00:00:00+02:00</published><updated>2007-04-16T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-04-16:/1st-usage-of-rss-feeds</id><summary type="html">&lt;p&gt;Browsing &lt;a class="reference external" href="http://planet.debian.org"&gt;Debian Planet&lt;/a&gt; today led me to the usage of Google Reader.
I've been ignoring this technology because I was too lazy to figure it out,
but Google Reader makes it so easy it does not require me to think. Is kool.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Browsing &lt;a class="reference external" href="http://planet.debian.org"&gt;Debian Planet&lt;/a&gt; today led me to the usage of Google Reader.
I've been ignoring this technology because I was too lazy to figure it out,
but Google Reader makes it so easy it does not require me to think. Is kool.&lt;/p&gt;
</content><category term="Debian"></category></entry><entry><title>1st FLOSS patch contribution</title><link href="http://tshepang.net/1st-floss-patch-contribution" rel="alternate"></link><published>2007-04-03T00:00:00+02:00</published><updated>2007-04-03T00:00:00+02:00</updated><author><name>Tshepang Lekhonkhobe</name></author><id>tag:tshepang.net,2007-04-03:/1st-floss-patch-contribution</id><summary type="html">&lt;p&gt;Back in January 2007, I sent a patch that slightly improved the README
file found in the root directory of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, an exciting project that
is meant to be a data indexer (like &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Google_Desktop"&gt;Google Desktop&lt;/a&gt;) and much more.
This is what I consider the first ever FLOSS contribution I ever …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Back in January 2007, I sent a patch that slightly improved the README
file found in the root directory of &lt;a class="reference external" href="http://projects.gnome.org/tracker/"&gt;Tracker&lt;/a&gt;, an exciting project that
is meant to be a data indexer (like &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Google_Desktop"&gt;Google Desktop&lt;/a&gt;) and much more.
This is what I consider the first ever FLOSS contribution I ever made. I
went on to make some minor code patches which also taught me a few
things, like &lt;a class="reference external" href="http://developer.gnome.org/gtk2/stable/"&gt;GTK+&lt;/a&gt; and &lt;a class="reference external" href="http://developer.gnome.org/glib/stable/"&gt;GLib API&lt;/a&gt;.&lt;/p&gt;
</content><category term="GNOME"></category><category term="Tracker"></category></entry></feed>